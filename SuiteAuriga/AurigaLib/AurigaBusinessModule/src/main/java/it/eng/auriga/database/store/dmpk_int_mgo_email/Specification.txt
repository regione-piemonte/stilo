1        PACKAGE DMPK_INT_MGO_EMAIL AUTHID CURRENT_USER IS
2        
3        	/**** funzione che a fronte dell'id. utente di Auriga restituisce il corrispondente id utente sul modulo gestione ordinaria e-mail *****/
4        	function GetIdUtenteMGOEmail(
5        			IdUserIn					IN	DMT_USERS.ID_USER%type,					-- Id. dell'utente Auriga
6        			IdUtentePECOut				OUT	VARCHAR2								-- Id. dell'utente sul modulo gestione ordinaria e-mail se presente
7        			)					
8        			return PLS_INTEGER;														-- Restituisce sempre 1 
9        		
10        	/******* serve per ricavare se utente loggato/di lavoro è abilitato all'invio da una certa casella					**********/
11        	function CtrlUtenzaAbilitataInvio(
12        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
13        																					-- (obblig). Codice identificativo del token di connessione
14        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
15        			AccountMittenteIn			IN		VARCHAR2,							-- (obblig.) Indirizzo della casella da cui si deve inviare (ricerca case-insensitive)
16        			FlgAbilInvioOut				OUT		PLS_INTEGER,						-- Indica se l'utente loggato/di lavoro è abilitato (1) o meno (0) all'invio
17        			IdUserOut					Out		INTEGER,							-- IdUser dell'utente loggato/di lavoro (PK di DMT_USERS)
18        			IdUtentePECOut				OUT		VARCHAR2,							-- Id. dell'utente loggato/di lavoro sul modulo gestione ordinaria e-mail se presente (PK di T_UTENTI_MOD_PEC)
19        			IdAccountOut				OUT		VARCHAR2,							-- Identificativo (PK) della casella da cui si deve inviare
20        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
21        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
22        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
23        			return PLS_INTEGER;														-- 1 in caso di verifica effettuata senza errori, 0 in caso di errore
24        
25        	/******* serve a precompilare i dati della maschera di registrazione di una e-mail ricevuta il cui id. è in input					**********/
26        	/******* i dati della registrazione sono restituiti come XML secondo schema SezioneCache.xsd.										**********/ 
27        	function PreparaRegEmailRicevuta(
28        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
29        																					-- (obblig). Codice identificativo del token di connessione
30        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
31        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail ricevuta da registrare
32        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					-- Segnatura.xml allegata alla mail se trattasi di e-mail interoperabile
33        			XMLDatiUDOut				OUT		NOCOPY CLOB,						-- Dati da preimpostare nella maschera di registrazione (XML conforme a schema SezioneCache.xsd)
34        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
35        																					-- ##############TODO
36        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
37        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
38        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
39        			FinalitaIn					In		VARCHAR2 DEFAULT NULL)				-- Finalità dell'UD o della mail
40        																					-- Valori ammessi: VISURA_SUE
41        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
42        			
43        	/******* serve a verificare e effettuare, se possibile, la protocollazione/repertoriazione automatica di una e-mail ricevuta il cui id. è in input		**********/
44        	/******* i dati della registrazione sono restituiti come XML secondo schema SezioneCache.xsd.															**********/ 
45        	/*function RegAutoEmailRicevuta(
46        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
47        																					-- (obblig). Codice identificativo del token di connessione
48        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
49        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail ricevuta da registrare
50        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					-- Segnatura.xml allegata alla mail se trattasi di e-mail interoperabile
51        			XMLAllegatiMailIn
52        			XMLDatiUDOut				OUT		NOCOPY CLOB,						-- Dati da preimpostare nella maschera di registrazione (XML conforme a schema SezioneCache.xsd)
53        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
54        																					-- ##############TODO
55        			XMLConfermaOut				OUT		NOCOPY CLOB,
56        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
57        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
58        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
59        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
60        	*/
61        	
62        	/******* serve a precompilare i dati della maschera di invio via e-mail di una registrazione/unità documentaria il cui id. è in input	**********/
63        	/******* i dati per la mail da inviare sono restituiti come XML secondo schema SezioneCache.xsd.										**********/ 
64        	function PreparaInvioUDXEmail(
65        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
66        																					-- (obblig). Codice identificativo del token di connessione
67        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
68        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
69        			FlgInvioPECIn				IN		PLS_INTEGER DEFAULT 1,				-- (valori 1/0/2/NULL) Se 1 indica che l'invio richiesto è tramite PEC e maschera di interoperabilità, se 0 o NULL tramite PEC o posta elettronica ordinaria (senza Segnatura.xml), se 2 che si tratta di un'invio interoperabile ma usando la maschera di invio delle non inter
70        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail (XML conforme a schema SezioneCache.xsd)
71        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
72        																					-- ##############TODO
73        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
74        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
75        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
76        			FinalitaIn					IN		VARCHAR2 DEFAULT NULL)				-- Indica la finalità per cui si richiede l'invio
77        																					-- Valori possibili: INVIO_COLLEGIO_SINDACALE,  #RICH_INVIO# + Id. richiesta della T_UD_TO_SEND
78        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
79        	
80        	/******* serve a precompilare i dati della maschera di invio via e-mail della ricevuta di registrazione unità documentaria il cui id. è in input	**********/
81        	/******* i dati per la mail da inviare sono restituiti come XML secondo schema SezioneCache.xsd.													**********/ 
82        	function PreparaInvioRicevutaRegXEmail(
83        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
84        																					-- (obblig). Codice identificativo del token di connessione
85        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
86        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
87        			FlgInvioPECIn				IN		PLS_INTEGER DEFAULT 1,				-- (valori 1/0/NULL) Se 1 indica che l'invio richiesto è tramite PEC, se 0 o NULL tramite posta elettronica ordinaria
88        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail (XML conforme a schema SezioneCache.xsd)
89        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
90        																					-- ##############TODO
91        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
92        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
93        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
94        			FinalitaIn					IN		VARCHAR2 DEFAULT NULL)				-- Indica la finalità per cui si richiede l'invio
95        																					-- Valori possibili: 
96        																					-- INVIO_COLLEGIO_SINDACALE
97        																					-- VISURA_SUE
98        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
99        	/******* serve a precompilare i dati della maschera di invio via e-mail di una fattura il cui id. UD è in input	**********/
100        	/******* i dati per la mail da inviare sono restituiti come XML secondo schema SezioneCache.xsd.				**********/
101        	function PreparaInvioFatturaXEmail(
102        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
103        																					-- (obblig). Codice identificativo del token di connessione
104        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
105        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
106        			FlgInvioPECIn				IN		PLS_INTEGER DEFAULT 1,				-- (valori 1/0/NULL) Se 1 indica che l'invio richiesto è tramite PEC, se 0 o NULL tramite posta elettronica ordinaria
107        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail (XML conforme a schema SezioneCache.xsd)
108        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
109        																					-- ##############TODO
110        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
111        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
112        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
113        			FinalitaIn					IN		VARCHAR2 DEFAULT NULL,				-- Indica la finalità per cui si richiede l'invio
114        																					-- Valori possibili: REINVIO_DA_GUI
115        			LinguaIn					IN		VARCHAR2 DEFAULT NULL)				-- Indica la lingua in cui deve essere composta la mail (codice; se non specificato si intende it = Italiano)
116        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
117        
118        	---- funzione da chiamare prima dell'invio PEC di un documento per aggiungere/aggiornare in rubrica e-mail, corredati di denominazione e eventuale id. della rubrica corrispondenti, 
119        	---- i destinatari della mail specificati a GUI che non risultassero presenti in rubrica e-mail o con dati NON completi (es con nome = account)
120        	function AggDestInvioInRubricaEmail(
121        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
122        																					-- (obblig). Codice identificativo del token di connessione
123        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
124        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
125        			XMLDestInvioMailIn			IN		CLOB,								-- (obblig.) Lista dei destinatari dell'invio (XML conforme a schema LISTA_STD.xsd)
126        																					-- Ogni destinatario è un record; gli attributi previsti nella vari tag Colonna sono:
127        																					-- 4: Id. del destinatario in rubrica corrispondenti (se vi è presente)
128        																					-- 5: Denominazione/cognome e nome del destinatario
129        																					-- 8: Account - i.e. indirizzo e-mail - del destinatario
130        																					-- Le altre colonne al momento NON sono utilizzate
131        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
132        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
133        			FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
134        			ErrContextOut				OUT		VARCHAR2,							-- Indica la sezione di programma o funzione chiamata in cui si è verificato un errore
135        			ErrCodeOut					OUT		PLS_INTEGER,						-- Codice di eventuale errore verificatosi
136        			ErrMsgOut					OUT		VARCHAR2)							-- Messaggio di eventuale errore verificatosi
137        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
138        	
139        	/*********** funzione per generare la Segnatura.xml per inviare via e-mail una registrazione/unità documentaria *********/
140        	function GeneraSegnaturaXML(
141        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
142        																					-- (obblig). Codice identificativo del token di connessione
143        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
144        			IdUDIn						IN		DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo della registrazione/unità documentaria per cui generare la Segnatura.xml
145        			VersioneDTDIn				IN		VARCHAR2,							-- (obblig.) Versione del DTD/xsd della segnatura da utilizzare per generare l'xml Segnatura.xml
146        			XMLDatiInvioMailIn			IN		CLOB,								-- (obblig.) Dati presenti nella maschera di invio e-mail della registrazione (XML conforme a schema SezioneCache.xsd)
147        																					-- I dati specificabili corrispondono ai seguenti tag Variabile:
148        																					-- ##############TODO: ci sono la lista destinatari e RichiestaConferma (true/false)
149        			XMLSegnaturaOut				OUT		NOCOPY CLOB,						-- Segnatura.xml
150        			ErrContextOut				OUT		VARCHAR2,							-- Indica la sezione di programma o funzione chiamata in cui si è verificato un errore
151        			ErrCodeOut					OUT		PLS_INTEGER,						-- Codice di eventuale errore verificatosi
152        			ErrMsgOut					OUT		VARCHAR2)							-- Messaggio di eventuale errore verificatosi
153        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
154        
155        	/**** serve a ottenere i dati ed eventualmente l'attach xml - Conferma.xml, Eccezione.xml ecc - per una e-mail di notifica (Conferma, Eccezione, Aggiornamento, Annullamento) da inviare ****/
156        	function PreparaInvioNotifica(
157        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
158        																					-- (obblig). Codice identificativo del token di connessione
159        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
160        			TipoNotificaIn				IN		VARCHAR2,							-- (obblig.) Indica il tipo di mail di notifica da inviare
161        																					-- Valori ammessi:
162        																						 -- conferma
163        																						 -- aggiornamento
164        																						 -- eccezione
165        																						 -- annullamento
166        			IdEmailIn					IN 		VARCHAR2,							-- (obblig. tranne che per le notifiche per cui si sia indicato IdUDIn) Identificativo univoco con cui è salvata sul modulo gestione ordinaria e-mail la mail in entrata per cui inviare notifica di conferma, eccezione ecc
167        			IdUDIn						IN 		DMT_UNITA_DOC.ID_UD%type,			-- (obblig. se IdEmailIn non è valorizzato) Identificativo della registrazione (i.e. unità documentaria) in entrata cui si riferisce la notifica (registrazione relativa ad una mail in entrata)
168        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					-- (obblig. se FlgNoAttachXMLIn diverso da 1) Segnatura.xml allegata alla mail IdEmailIn se trattasi di e-mail interoperabile
169        			FlgNoAttachXMLIn			IN		PLS_INTEGER DEFAULT NULL,			-- Se 1 NON viene calcolato nè restituito l'xml - Conferma.xml, Eccezione.xml, Aggiornamento.xml, Annullamento.xml - da allegare alla mail di notifica, se 0 o NULL l'xml viene generato e restituito in XMLAttachOut
170        			VersioneDTDIn				IN		VARCHAR2 DEFAULT NULL,				-- (NON UTILIZZATA) Versione del DTD/xsd della segnatura da utilizzare per generare l'xml interoperabile
171        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail di notifica (XML conforme a schema SezioneCache.xsd)
172        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
173        																					-- ##############TODO
174        			
175        			XMLAttachOut				OUT	NOCOPY CLOB,							-- XML di conferma, eccezione, aggiornamento, annullamento da allegare alla mail di notifica (valorizzato solo se FlgNoAttachXMLIn non è 1)
176        			NomeXMLAttachOut			OUT		VARCHAR2,							-- Nome dell'attachment xml da allegare alla mail di notifica
177        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
178        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
179        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
180        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
181        	
182        	/**** serve a ottenere i dati e l'eventuale attach conferma.xml per un'e-mail di notifica conferma da inviare in automatico a fronte della protocollazione di una data mail ricevuta****/
183        	function PreparaConfermaAutomatica(
184        			IdUtentePECIn				IN		VARCHAR2,							-- (obblig.) Id. dell'utente - id. nel modulo gestione ordinaria e-mail - che ha effettuato la registrazione a fronte della quale si scatena l'invio autoimatico della mail di conferma
185        			IdEmailIn					IN 		VARCHAR2,							-- (obblig.) Identificativo univoco con cui è salvata sul modulo gestione ordinaria e-mail la mail in entrata per cui inviare notifica di conferma
186        			IdUDIn						IN 		DMT_UNITA_DOC.ID_UD%type,			-- (obblig. se IdEmailIn non è valorizzato o se a fronte della mail in entrata vi sono più registrazioni) Identificativo della registrazione (i.e. unità documentaria) in entrata che dà luogo alla notifica utomatica di conferma 
187        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					--  Segnatura.xml allegata alla mail IdEmailIn se trattasi di e-mail interoperabile
188        			VersioneDTDIn				IN		VARCHAR2 DEFAULT NULL,				-- (NON UTILIZZATA) Versione del DTD/xsd da utilizzare per generare il conferma.xml
189        			DestinatariMailNotifOut		OUT		VARCHAR2,							-- Indirizzi e-mail destinatari principali della mail di notifica conferma (se più di uno separati da ;)
190        			DestinatariCCMailNotifOut	OUT		VARCHAR2,							-- Indirizzi e-mail destinatari in conoscenza della mail di notifica conferma (se più di uno separati da ;)
191        			SubjectMailNotifOut			OUT		VARCHAR2,							-- Oggetto della mail di notifica conferma 
192        			BodyMailNotifOut			OUT		VARCHAR2,							-- Testo/corpo della mail di notifica conferma 
193        			FlgRicevutaCBSOut			OUT		VARCHAR2,							-- Indica se per la mail di notifica conferma è richiesta ricevuta: C = Completa, B = Breve, S = Sintetica
194        			XMLConfermaOut				OUT		NOCOPY CLOB,						-- XML di conferma (conferma.xml) da allegare alla mail di notifica (se nullo significa che non vi è alcun attach da allegare alla mail)
195        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
196        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
197        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
198        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
199        		
200        	/******* restituisce lo stato di protocollazione - parziale o completa - di una e-mail in entrata *********/
201        	function GetStatoProtEmail(
202        		IdEmailIn					IN 		VARCHAR2,							-- (obblig.) Identificativo univoco dell'e-mail in entrata
203        		FlgStatoProtOut				OUT		VARCHAR2,							-- Stato di protocollazione dell'email. 
204        																				-- P= Parziale (sono stati protocollati solo alcuni degli allegati dell'e-mail); C = Completa (tutti gli allegati/parti dell'e-mail sono stati protocollati); NULL = non ancora protocollata
205        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
206        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
207        		ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
208        		return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
209        	
210        	/****** funzione per ottenere l'indicazione se l'utente loggato o quello per cui si sta lavorando può ricevere o inviare via e-mail 			******/
211        	/****** distinguendo tra caselle di posta elettronica ordinaria e caselle PEC																	******/
212        	function GetAbilInvioRicezione(
213        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,	
214        																	-- (obblig). Codice identificativo del token di connessione
215        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	
216        																	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
217        			FlgAbilRicezionePECOut	OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può ricevere da qualche casella PEC
218        			FlgAbilRicezionePEOOut  OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può ricevere da qualche casella di posta ordinaria
219        			FlgAbilInvioPECOut		OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare da qualche casella PEC
220        			FlgAbilInvioPEOOut		OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare da qualche casella di posta ordinaria
221        			ErrContextOut			OUT		VARCHAR2,				-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
222        			ErrCodeOut				OUT		PLS_INTEGER,			-- N.ro errore di uscita
223        			ErrMsgOut				OUT 	VARCHAR2				-- Messaggio d'errore
224        			) return PLS_INTEGER;									-- Vale 1 se tutto è andato a buon fine, altrimenti 0
225        
226        	/**** serve a conoscere se l'utente - loggato o di lavoro - può effettuare o meno le azioni di protocollazione e/o invio di notifiche interoperabili (Conferma, Eccezione, Aggiornamento, Annullamento) su una data e-mail ****/
227        	function GetAbilAzioniInterop(
228        			CodIdConnectionTokenIn			IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
229        																		-- (obblig). Codice identificativo del token di connessione
230        			IdUserLavoroIn					IN		DMT_USERS.ID_USER%type DEFAULT NULL,
231        																		-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
232        			IdEmailIn						IN		VARCHAR2,			-- (Obblig.) identificativo dell'e-mail
233        			FlgAbilProtEntrataOut			OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può protocollare in entrata la mail
234        			FlgAbilInvioEccezioneOut		OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di eccezione
235        			FlgAbilInvioConfermaOut			OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di Conferma
236        			FlgAbilInvioAggiornamentoOut	OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di Aggiornamento
237        			FlgAbilInvioAnnullamentoOut		OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di Annullamento
238        			ErrContextOut					OUT		VARCHAR2,			-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
239        			ErrCodeOut						OUT		PLS_INTEGER,		-- N.ro errore di uscita
240        			ErrMsgOut						OUT 	VARCHAR2			-- Messaggio d'errore
241        			) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
242        		
243        	----------------restituisce informazioni di sintesi sulle e-mail archiviate (arrivate) e inviate dal modulo gestione ordinaria email da cui e a cui abbia dato luogo una data unità documentaria in input
244        	function GetRelEmailVsUD(
245        		IdUDIn							IN		DMT_UNITA_DOC.ID_UD%type,	
246        																	-- (obblig.) Id. dell'unità documentaria
247        		IdEmailArrivoOut				OUT		VARCHAR2,			-- Id. dell'eventuale e-mail in arrivo che ha dato luogo all'unità documentaria (tipicamente protocollata in entrata)		
248        		NroEmailPECInviateOut			OUT		PLS_INTEGER,		-- N.ro di e-mail certificate (PEC) tramite cui il contenuto dell'unità doc. è stato trasmesso (inviate con il modulo gestione ordinaria)
249        		NroEmailPEOInviateOut			OUT		PLS_INTEGER,		-- N.ro di e-mail di posta elettronica cordinaria (PEO) tramite cui il contenuto dell'unità doc. è stato trasmesso (inviate con il modulo gestione ordinaria)
250        		FlgRicevuteNotConfOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di conferma a fronte di una o più e-mail PEC inviate
251        		FlgRicevuteNotEccOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di eccezione a fronte di una o più e-mail PEC inviate
252        		FlgRicevuteNotAggOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di aggiornamento a fronte di una o più e-mail PEC inviate
253        		FlgRicevuteNotAnnOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di annullamento registrazione a fronte di una o più e-mail PEC inviate
254        		ErrContextOut					OUT		VARCHAR2,			-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
255        		ErrCodeOut						OUT		PLS_INTEGER,		-- N.ro errore di uscita
256        		ErrMsgOut						OUT 	VARCHAR2			-- Messaggio d'errore
257        		) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
258        
259        	----- serve ad assegnare una mail (tipicamente ricevuta) ad una UO o utente o scrivania
260        	----- se l'assegnazioni già c'è NON viene replicate ma non viene dato errore
261        	function AssegnaEmail(
262        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
263        																					-- (obblig). Codice identificativo del token di connessione
264        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
265        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail da assegnare/smistare
266        			AssegnatariXMLIn			IN		CLOB,								-- Lista XML (conforme a schema LISTA_STD.xsd) con il soggetto UO, scrivania o utente - a cui assegnare la mail
267        																					-- Prevede UNA SOLA RIGA in cui l'assegnatario è un tag Riga con le seguenti colonne:
268        																					-- 1: (obblig.) Tipo dell'assegnatario: UT=Utente; UO=U.O./ufficio; SV = Scrivania utente
269        																					-- 2: (obblig.) ID_USER o ID_UO o ID_SCRIVANIA dell'assegnatario (identificativo dell'utente/UO/scrivania nella banca dati di Auriga, NON in quella del modulo gestione ordinaria email)
270        																					-- 3: Eventuale messaggio a corredo dell'assegnazione
271        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
272        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
273        			FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
274        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
275        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
276        			ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
277        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
278        
279        	----- serve ad ri-assegnare una mail (tipicamente ricevuta) 
280        	----- annullano l'assegnazione pre-esistente 
281        	function RiassegnaEmail(
282        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
283        																				-- (obblig). Codice identificativo del token di connessione
284        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
285        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail da assegnare/smistare
286        		AssegnatariXMLIn			IN		CLOB,								-- Lista XML (conforme a schema LISTA_STD.xsd) con il soggetto UO, scrivania o utente - a cui ri-assegnare la mail
287        																				-- Prevede UNA SOLA RIGA in cui l'assegnatario è un tag Riga con le seguenti colonne:
288        																				-- 1: (obblig.) Tipo dell'assegnatario: UT=Utente; UO=U.O./ufficio; SV = Scrivania utente
289        																				-- 2: (obblig.) ID_USER o ID_UO o ID_SCRIVANIA dell'assegnatario (identificativo dell'utente/UO/scrivania nella banca dati di Auriga, NON in quella del modulo gestione ordinaria email)
290        																				-- 3: Eventuale messaggio a corredo dell'assegnazione
291        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
292        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
293        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
294        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
295        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
296        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
297        		) return PLS_INTEGER;												-- Vale 1 se tutto è andato a buon fine, altrimenti 0
298        
299        	----- serve ad ottenere i dati delle assegnazioni - ad UO e/o utenti - di una data e-mail in input
300        	function GetAssegnatariEmail(
301        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
302        																				-- (obblig). Codice identificativo del token di connessione
303        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
304        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail
305        		AssegnatariXMLOut			OUT		NOCOPY CLOB,						-- Lista XML (conforme a schema LISTA_STD.xsd) con i soggetti - UO e utenti - assegnatari della mail
306        																				-- Ogni assegnatario è un tag Riga e prevede le seguenti colonne:
307        																				-- 1: Tipo dell'assegnatario: UT=Utente; UO=U.O./ufficio; SV = Scrivania utente
308        																				-- 2: ID_USER o ID_UO o ID_SCRIVANIA dell'assegnatario (identificativo dell'utente/UO/scrivania nella banca dati di Auriga, NON in quella del modulo gestione ordinaria email)
309        																				-- 3: Eventuale messaggio a corredo dell'assegnazione
310        																				-- 4: Descrizione dell'assegnatario
311        																				-- 5: Data e ora dell'assegnazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
312        																				-- 6: Id. univoco dell'assegnazione (stringa)
313        																				-- 7: ID_USER su Auriga dell'utente che ha effettuato l'assegnazione
314        																				-- 8: Cognome e nome di chi ha assegnato
315        		NroTotRecOut			OUT		PLS_INTEGER,							-- E' il n.ro di record restituiti nella lista AssegnatariXMLOut
316        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
317        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
318        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
319        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
320        
321        	----- serve ad annullare l'assegnazione di una mail (tipicamente ricevuta) ad un dato soggetto (UO/utente)
322        	----- l'annullamento è possibile solo se la mail non è stata a sua volta riassegnata dall'assegnatario 
323        	function AnnullaAssegnazioneEmail(
324        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
325        																				-- (obblig). Codice identificativo del token di connessione
326        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
327        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig. se IdAssEmailToAnnIn non è valorizzato) Identificativo dell'e-mail 
328        		IdAssEmailToAnnIn			IN		VARCHAR2,				 			-- (obblig. se IdEmailIn non è valorizzato) Identificativo dell'assegnazione della mail da annullare (se non specificato è l'ultima assegnazione valida della mail)
329        		MotiviIn					IN		VARCHAR2 DEFAULT NULL,				-- (facoltativo) Motivo/i dell'operazione (campo di testo libero)
330        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
331        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
332        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
333        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
334        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
335        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
336        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
337        		
338        	/********** funzione per predisporre i dati - casella mittente, destinatari, subject e  body - della mail di notifica automatica di assegnazione o invio per conoscenza ********/
339        	function PreparaEmailNotAssInvioCC(
340        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
341        																				-- (obblig). Codice identificativo del token di connessione
342        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
343        		AssInvioCCIn				IN		VARCHAR2,							-- (obblig.) Indica se è una notifica di assegnazione per competenza o di invio per conoscenza. 
344        																				-- Valori: assegnazione_competenza, invio_conoscenza
345        		UDFolderXMLIn				IN		CLOB,								-- (obblig.) Lista di unità documentarie o folder o email assegnati/inviati in conoscenza (xml conforme a schema LISTA_STD.xsd)
346        																				-- Ogni tag riga rappresenta un'unità documentaria o folder assegnato/inviato in cc e contiene le seguenti colonne:
347        																				-- 1: tipo: F = Folder, U = Unità documentaria, E = Email
348        																				-- 2: ID_FOLDER o ID_IUD o ID_EMAIL
349        		DestAssInvioCCXMLIn			IN		CLOB,								-- (obblig.) Lista dei soggetti destinatari dell'assegnazione o invio in conoscenza (xml conforme a schema LISTA_STD.xsd)
350        																				-- Ogni destinatario è un tag "Riga" con le seguenti colonne:
351        																				--						1: (obblig.) Indicatore del tipo di destinastario
352        																				--							Valori possibili:
353        																				-- 							UT 	= Utente
354        																				--							SV	= Scrivania virtuale
355        																				--							UO	= Unità organizzativa (vale a dire tutte le scrivanie virtuali ad essa afferenti)
356        																				--							G	= Gruppo
357        																				--							R	= Ruolo amministrativo contestualizzato ovvero i soggetti che hanno un certo ruolo amministrativo (eventualmente rispetto ad una certa UO o un dato livello della struttura organizzativa/tipo di UO o entrambi)
358        																				--						2: Identificativo del destinatario
359        																				--							è un ID_UO di DMT_STRUTTURA_ORG se colonna 1=UO,
360        																				--							è un ID_GRUPPO di DMT_GRUPPI se colonna 1 =G
361        																				--							è un ID_USER di DMT_USERS se colonna 1 =UT
362        																				--							è un ID_SCRIVANIA di DMT_SCRIVANIE_VIRTUALI se colonna 1 =SV
363        																				--							è un ID_RUOLO_AMM di DMT_RUOLI_AMM se colonna 1 =R
364        																				--						3: Denominazione/nome del destinatario (se trattasi di UO può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
365        																				--						4: Identificativo della UO cui appartiene la scrivania destinataria
366        																				--						5: Nri livello della UO destinataria o a cui appartiene la scrivania destinataria (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
367        																				--						6: Denominazione della UO cui appartiene la scrivania destinataria (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
368        																				--						7: Codice che identifica nell'applicazione esterna da cui ci si connette l'utente destinatario o quello che occupa la scrivania destinataria
369        																				--						8: Denominazione dell'utente che occupa la scrivania destinataria
370        																				--						9: (valore 1) Indica che il destinatario, se UO, sono anche tutte le sue sotto-UO
371        																				--						10: (valori interi da 1 a n) Livello della struttura organizzativa in cui si espleta il ruolo amministrativo destinatario
372        																				--						11: Se colonna 1 =R: Codice del tipo di unità organizzativa in cui si espleta il ruolo amministrativo destinatario (alternativo alla colonna 10)
373        																				--						    Se colonna 1 =UT o SV: Username (delle credenziali locali) dell'utente destinatario o che occupa la scrivania destinataria 
374        																				--						12: Se colonna 1 =R: Descrizione del tipo di unità organizzativa (es: settore, servizio, ecc) in cui si espleta il ruolo amministrativo destinatario (alternativo alla colonna 10)
375        																				--						    Se colonna 1 =UT o SV: N.ro di matricola dell'utente destinatario o che occupa la scrivania destinataria 
376        																				--						13: Identificativo della UO in cui si espleta il ruolo amministrativo destinatario o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo destinatario
377        																				--						14: Denominazione/nome della UO in cui si espleta il ruolo amministrativo destinatario o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo destinatario (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
378        																				--						15: Nri livello della UO in cui si espleta il ruolo amministrativo destinatario o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo destinatario (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
379        																				--						16:(valore 1) Indica che il ruolo amministrativo destinatario si espleta anche nelle sotto-UO della/e UO rintracciate tramite i valori delle 3 colonne precedenti
380        		CodMotivoInvioIn			IN		VARCHAR2 DEFAULT NULL,				-- Codice del motivo dell'assegnazione/invio in conoscenza (valori codificati in apposita dictionary entry)
381        		MotivoInvioIn				IN		VARCHAR2 DEFAULT NULL,				-- Modivo dell'assegnazione/invio in conoscenza (valori da apposita dictionary entry)
382        		MessaggioInvioIn			IN		VARCHAR2 DEFAULT NULL,				-- Messaggio associato all'invio per competenza/conoscenza
383        		LivelloPrioritaIn			IN		INTEGER DEFAULT NULL,				-- Livello di priorità dell'invio per competenza/conoscenza
384        		TsDecorrAssInvioCCIn		IN		VARCHAR2 DEFAULT NULL,				-- Data e ora future da cui deve decorrere l'assegnazione/invio per conoscenza (da specificare se diversa dalla data di invio; va espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
385        		FlgEmailToSendOut			OUT		PLS_INTEGER,						-- (valori 1/0) Indica se l'e-mail deve essere inviata (=1) o meno (=0 o NULL)
386        																				-- Se non deve essere inviata gli output successivi NON sono valorizzati
387        		IndirizzoMittEmailOut		OUT		VARCHAR2,							-- Casella (gestita nella tabella del modulo mail) da cui inviare la notifica e-mail. Sempre valorizzata se FlgEmailToSendOut=1
388        		IndirizziDestEmailOut		OUT		NOCOPY CLOB,						-- Indirizzi email a cui notificare l'assegnazione/invio per conoscenza (xml conforme a schema LISTA_STD.xsd). Sempre valorizzati se FlgEmailToSendOut=1
389        																				-- Ogni indirizzo è un tag Riga che è formato da una sola colonna
390        		OggEmailOut					OUT		VARCHAR2,							-- Oggetto dell'email di notifica. Sempre valorizzato se FlgEmailToSendOut=1
391        		BodyEmailOut				OUT		VARCHAR2,							-- Testo/corpo dell'email di notifica. Sempre valorizzato se FlgEmailToSendOut=1				
392        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
393        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
394        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
395        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
396        
397        	/************ funzione per ricercare le mail archiviate in T_EMAIL_MGO ************/
398        	function TrovaEmail(
399        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
400        																					-- (obblig). Codice identificativo del token di connessione
401        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
402        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd). 
403        																					-- Ogni filtro è un tag "Variabile" dell'XML
404        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
405        																					-- I nomi dei filtri possibili sono:
406        																					-- RicercaMailArchiviate: indica se si deve ricercate anche o solo nell'archivio storico della mail (tabelle con prefisso TH_)
407        																					--						Valori ammessi:
408        																					--						solo_archiviate
409        																					--						anche_archiviate
410        																					-- Se la variabile non c'è o è vuota la ricerca NON considera le mail spostate in storico
411        																					-- ClassificaFolder: classifica del folder in cui si devono trovare le e-mail (ricerca esatta case-sensitive)
412        																					-- RicercaNonRicorsiva: 
413        																					--					se true significa che si vogliono solo le e-mail nei folder con classifica ClassificaFolder e non quelle nei sub-folder
414        																					--					se false o non valorizzato indica che la ricerca va estesa alla e-mail nei sotto-folder di quello con la classifica indicata in ClassificaFolder, 
415        																					-- IdCasella: Id. della/e casselle che hanno ricevuto (se e-mail in entrata) o inviato (se e-mail in uscita) le e-mail. Se più di uno sono separati da ; o ,
416        																					-- IndirizzoCasella: indirizzo/i delle casselle che hanno ricevuto (se e-mail in entrata) o inviato (se e-mail in uscita) le e-mail (ricerca case-insensitive in like senza forzare il % finale). Se più di uno sono separati da ; o ,											
417        																					-- FlgIO: serve a restringere la ricerca alle e-mail ricevute (=I) o inviate (=O)
418        																					-- Flusso: valori E, U, N, B e loro combinazioni separate da ; o ,. 
419        																					--		   Serve a restringere alle e-mail: in arrivo che non sono ricevute e notifiche(=E); alle ricevute e notifiche in entrata(=N); alle e-mail in uscita (=U)
420        																					-- IndirizzoMittente: parole contenute nell'indirizzo mittente (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
421        																					-- OperMittente(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
422        																					-- MittentePECPEO (valori PEC/PEO): serve a restringere la ricerca alle mail inviate da mittente PEC o ordinario (PEO)
423        																					-- IndirizzoDestinatario: parole contenute nel/negli indirizzi destinatari (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
424        																					-- OperDestinatario(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
425        																					-- Invio al: estremo inferiore della data di invio (se mail PEC ricevuta viene considerata la data attestata dal provider PEC) espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
426        																					-- InvioAl: estremo superiore della data di invio (se mail PEC ricevuta viene considerata la data attestata dal provider PEC) espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
427        																					-- RicezioneDal: estremo inferiore della data di ricezione espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
428        																					-- RicezioneAl: estremo superiore della data di ricezione espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
429        																					-- InseritaDal: estremo inferiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
430        																					-- InseritaAl: : estremo superiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
431        																					-- Oggetto: parole contenute nell'oggetto (ricerca per parole fatta con indici context)
432        																					-- OperOggetto(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
433        																					-- Corpo: parole contenute nel corpo (ricerca per parole fatta con indici context)
434        																					-- AssegnazioneEffettuata
435        																					--			se true si ricercano solo le e-mail ricevute già assegnate
436        																					--			se false si ricercano solo le e-mail ricevute NON ancora assegnate
437        																					-- IncludiAssegnateAdAltri: 
438        																					--					se true o NULL indica che devono essere restituite anche le e-mail assegnate ad altri (vale a dire nè all'utente nè a una UO cui è collegato)
439        																					--					se false indica che NON devono essere restituite le e-mail assegnate salvo se assegnate all'utente o una UO cui è collegato
440        																					-- AssegnazioneDal: estremo inferiore della data di assegnazione delle e-mail espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
441        																					-- AssegnazioneAl: estremo superiore della data di assegnazione delle e-mail espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
442        																					-- IdUserAssegnatario: ID_USER (id. della DMT_USERS) del/degli utenti assegnatari delle e-mail (si può specificare più ID_USER separandoli con ;)
443        																					-- IdUOAssegnataria: ID_UO (id. della DMT_STRUTTURA_ORG) della/delle UO assegnatarie delle e-mail (si può specificare più ID_UO separandoli con ;)
444        																					--					 Si possono specificare anche scrivanie premettendo SV al ID_SCRIVANIA
445        																					-- @UOAssegnatari: lista con le UO assegnatarie delle e-mail
446        																					--					ogni riga è un assegnatario:
447        																					--					in colonna 2) ID_UO; 3) flag 1/0 che indica anche le sotto-UO
448        																					-- IdUOLavoro: ID_UO (id. della DMT_STRUTTURA_ORG) della/delle UO dell'utente a cui restringere la ricerca delle mail
449        																					--				Si possono specificare più id. UO separandoli con ; 
450        																					-- ProgrEmailDa: estremo inferiore dell'intervallo di ricerca sul progressivo della mail
451        																					-- ProgrEmailA: estremo superiore dell'intervallo di ricerca sul progressivo della mail
452        																					-- AnnoEmailDa: estremo inferiore dell'intervallo di ricerca sull'anno del progressivo della mail
453        																					-- AnnoEmailA: estremo superiore dell'intervallo di ricerca sull'anno del progressivo della mail
454        																					-- TipoProgrEmail: sigla del registro di numerazione del progressivo e-mail (E/U/N/B)
455        																					-- Categoria: serve a restringere la ricerca alle e-mail della/e categorie specificate. Valori possibili:
456        																					--			INTEROP_SEGN (interoperabile con allegata segnatura.xml) 
457        																					--   		INTEROP_ECC (notifica interoperabile di eccezione)
458        																					--			INTEROP_CONF (notifica interoperabile di conferma)
459        																					--			INTEROP_AGG (notifica interoperabile di aggiornamento)
460        																					--			INTEROP_ANN (notifica interoperabile di annullamento di registrazione) 
461        																					--			PEC = e-mail inviata da PEC e NON interoperabile
462        																					--			ANOMALIA = busta anomalia (ovvero e-mail inviata da una casella ordinaria)
463        																					--			PEC_RIC_ACC = ricevuta PEC di accettazione
464        																					--			PEC_RIC_NO_ACC = ricevuta PEC di mancata accettazione
465        																					--			PEC_RIC_PREAS_C = ricevuta PEC di presa in carico da parte del provider ricevente
466        																					--			PEC_RIC_CONS = ricevuta  PEC di avvenuta consegna
467        																					--			PEC_RIC_PREAVV_NO_CONS = preavviso di mancata consegna
468        																					--			PEC_RIC_NO_CONS = ricevuta PEC di mancata consegna
469        																					--			DELIVERY_STATUS_NOT = notifiche di trasporto dei mail server/provider
470        																					--			PEO_RIC_CONF = Conferma di lettura (posta ordinaria)
471        																					--			PEC_RIC_CONF = Conferma di lettura (posta certificata)
472        																					--			ALTRO = altre e-mail generate in automatico dai mail server / provider (come quelle di esurimento quote sulle caselle)
473        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
474        																					-- StatoLavorazioneUrgenza: serve a serve a restringere la ricerca alle e-mail che hanno uno degli stati di lavorazione indicati e/o contrassegno di verifica urgente. Valori possibili:
475        																					--			da_lavorare
476        																					--			in_lavorazione
477        																					--			verifica_urgente
478        																					--			lavorazione_aperta
479        																					--			lavorazione_conclusa
480        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
481        																					-- CruscottoMail: (valori 1/0/NULL) se 1 indica che la lista da popolare è quella del cruscotto mail (lista mail fuori dalla scrivania richiamata da apposita voce di menu' applicativo)
482        																					-- LockedBy: serve a restringere la ricerca alle e-mail il cui stato di lock è come segue:
483        																					--			#NONE 	: non sono locked da nessuno
484        																					--			#ME		: sono locked dall'utente collegato ovvero quello a nome di cui sta lavorando
485        																					--			#OTHERS : altri operatori dall'utente collegato ovvero quello a nome di cui sta lavorando
486        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha il lock sulle e-mail 
487        																					-- MovimentatoDa: serve a restringere la ricerca alle e-mail assegnate (=set UO) o smistate (=messe in carico)
488        																					--			#ME		: sono movimentate dall'utente collegato ovvero quello a nome di cui sta lavorando
489        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha assegnato o smistato le e-mail
490        																					-- MovimentatiDal: estremo inferiore dell'intervallo di ricerca sulla data di assegnazione o smistamento (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
491        																					-- MovimentatiAl: estremo superiore dell'intervallo di ricerca sulla data di assegnazione o smistamento (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
492        																					-- LavoratoDa: serve a restringere la ricerca alle e-mail lavorate da un dato operatore
493        																					--			#ME		: sono lavorate dall'utente collegato ovvero quello a nome di cui sta lavorando
494        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha lavorate le e-mail
495        																					-- LavoratiDal: estremo inferiore dell'intervallo di ricerca sulla data di lavorazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
496        																					-- LavoratiAl: estremo superiore dell'intervallo di ricerca sulla data di lavorazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
497        																					-- StatoConsolidamento: serve a restringere la ricerca alle e-mail inviate che hanno uno degli stati di consolidamento indicati. Valori possibili:
498        																					--			<non valorizzato> = stato di consolidamento ancora non valorizzato (nessuna ricevuta o notifica è pervenuta)
499        																					--			in_invio
500        																					--			accettata
501        																					--			non_accettata
502        																					--			avvertimenti_in_consegna
503        																					--			errori_in_consegna
504        																					--			consegnata
505        																					--			consegnata_parzialmente 
506        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
507        																					-- StatoIAC: serve a restringere la ricerca alle e-mail inviate che hanno uno degli stati di invio e/o accettazione e/o consegna indicati. Valori possibili:
508        																					--			I:OK 	inviata
509        																					--			I:KO	invio fallito
510        																					--			I:IP	invio in corso
511        																					--			I:W		avvertimenti in invio
512        																					--			A:OK	accettata
513        																					--			A:KO	non accettata
514        																					--			A:IP	accettazione in corso
515        																					--			A:W		presunta mancata accettazione
516        																					--			A:ND	accettazione non valorizzata
517        																					--			C:OK	consegnata
518        																					--			C:KO	consegna fallita
519        																					--			C:IP	consegna in corso
520        																					--			C:W		presunta mancata consegna
521        																					--			C:ND	consegna non valorizzata
522        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
523        																					-- StatoProtocollazione: indica lo stato di protocollazione della mail (se valorizzato resringe la ricerca alle e-mail in entrata). Valori possibili:
524        																					--			N = non protocollata
525        																					--			C = protocollata
526        																					--			P = protocollata parzialmente
527        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
528        																					-- StatoUtente: serve a restringere la ricerca alle e-mail che hanno il/uno degli stati utente indicati in questo filtro (ID_REC_DIZ). Se più di uno gli stati vanno separati con , o ;
529        																					-- CodAzioneDaFare: serve a restringere la ricerca alle e-mail che hanno come COD_AZIONE_DA_FARE il codice/i indicati qui. Se più di uno gli stati vanno separati con , o ;
530        																					-- 					Il valore NONE significa NESSUNA AZIONE da fare settata
531        																					-- 					Il valore ANY significa QUALSIASI AZIONE da fare settata
532        																					-- Priorita: serve a restringere la ricerca alle e-mail con la/le priorità indicate nel filtro. Valori possibili:
533        																					--			alta 
534        																					--			normale
535        																					--			bassa
536        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
537        																					-- Contrassegno: serve a restringere la ricerca alle e-mail che hanno il/uno dei contrassegni indicati in questo filtro (ID_REC_DIZ). Se più di uno i contrassegni vanno separati con , o ;
538        																					-- InviataConferma: Serve a restringere la ricerca alle e-mail ricevute per le quali è stata (true) o non è stata (false) mandata conferma (interoperabile o meno)
539        																					-- InviataEccezione: Serve a restringere la ricerca alle e-mail ricevute per le quali è stata (true) o non è stata (false) mandata eccezione/rifiuto (interoperabile o meno)
540        																					-- InviataRisposta: Serve a restringere la ricerca alle e-mail ricevute per le quali è stata (true) o non è stata (false) mandata risposta
541        																					-- Inoltrata: Serve a restringere la ricerca alle e-mail inoltrate (true) o meno (false)
542        																					-- RicevuteConferme: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) conferma interoperabile o conferma di lettura
543        																					-- RicevuteEccezioni: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) eccezione interoperabile
544        																					-- RicevutiAggiornamenti: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) notifica interoperabile di aggiornamento
545        																					-- RicevutiAnnullamenti: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) notifica interoperabile di annullamento di registrazione
546        																					-- RicevutiErroriTrasmConsegna:: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) ricevuta PEC di mancata accettazione/consegna o delivery status notification										
547        																					-- PresenzaAllegati: 
548        																					--			se true si ricercano solo le e-mail con uno o più allegati
549        																					--			se false si ricercano solo le e-mail senza allegati
550        																					-- PresenzaAvvertimenti: 
551        																					--			se true si ricercano solo le e-mail ricevute che hanno avvertimenti
552        																					--			se false si ricercano solo le e-mail ricevute che NON hanno avvertimenti
553        																					-- NroGiorniStatoLavorazioneApertoDa: estremo inferiore del n.ro di giorni da cui lo stato di lavorazione è aperto
554        																					-- NroGiorniStatoLavorazioneApertoAl: estremo superiore del n.ro di giorni da cui lo stato di lavorazione è aperto
555        																					-- NroAllegatiDa: estremo inferiore del n.ro di allegati che devono avere le e-mail da ricercare
556        																					-- NroAllegatiA: estremo superiore del n.ro di allegati che devono avere le e-mail da ricercare
557        																					-- DimensioneDa: estremo inferiore della dimensione - in bytes - che devono avere le e-mail da ricercare
558        																					-- DimensioneA: estremo superiore della dimensione - in bytes - che devono avere le e-mail da ricercare
559        																					-- NroDestinatariDa: estremo inferiore del n.ro di destinatari che devono avere le e-mail da ricercare
560        																					-- NroDestinatariA: estremo superiore del n.ro di destinatari che devono avere le e-mail da ricercare
561        																					-- ChiusuraDal: estremo inferiore della data di chiusura/archiviazione nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
562        																					-- ChiusuraAl: estremo superiore della data di chiusura/archiviazione nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
563        																					-- ChiusuraEffettuataDa: serve a restringere la ricerca alle e-mail chiuse/archiviate da un dato operatore
564        																					--			#ME		: sono chiuse dall'utente collegato ovvero quello a nome di cui sta lavorando
565        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha chiuso le e-mail
566        																					-- IdEmailRisposteA: ID_EMAIL della mail di cui quelle da ricercare devono essere delle risposte
567        																					-- IdEmailInoltroDi: ID_EMAIL della mail di cui quelle da ricercare devono essere un inoltro
568        																					-- IdEmailRif: ID_EMAIL della mail di cui quelle da ricercare devono essere una mail derivante quale: una ricevuta PEC, una notifica interoperabile, una delivery status notificatione o una conferma di ricezione
569        																					-- CodCategoriaReg: Codice della categoria (PG = Protocollo generale ecc) della registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
570        																					-- RegistroReg: Siglia del registro della registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
571        																					-- AnnoRegDa: estremo inferiore intervallo di ricerca su anno di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
572        																					-- AnnoRegA: estremo superiore intervallo di ricerca su anno di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
573        																					-- NroRegDa: estremo inferiore intervallo di ricerca su N° di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
574        																					-- NroRegA: estremo superiore intervallo di ricerca su N° di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
575        																					-- DtRegDal: estremo inferiore intervallo di ricerca su data di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail). Espresso nel formato dato dal parametro di config. FMT_STD_DATA
576        																					-- DtRegAl: estremo superiore intervallo di ricerca su data di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail). Espresso nel formato dato dal parametro di config. FMT_STD_DATA
577        																					-- MessageId: id. del messaggio ricevuto o inviato (ricerca case insensitive in like senza forzare % nè all'inizio nè alla fine)
578        																					-- ItemLavorazione.Note: ricerca per parole contenute nelle annotazioni libere apposte sulla mail (ricerca per parole fatta con indici context)
579        																					-- ItemLavorazione.Tag: ricerca sui tag apposti sulla mail. Ricerca esatta. 
580        																					-- Può essere indicata una lista di più tag separati da ; o ,
581        																					-- Si possono inoltre indicare i valori sepeciali: #NONE = nessun tag presente, #ANY = un qualsiasi tag presente
582        																					-- ItemLavorazione.NomeFile parole contenute nel nome di file associati alla mail come "Item lavorazione"(ricerca per parole fatta con indici context; . e _ si intendono come separatori di parole)
583        																					-- OperItemLavorazione.NomeFile (considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
584        																					-- NomeAttach parole contenute nel nome degli allegati della mail (ricerca per parole fatta con indici context; . e _ si intendono come separatori di parole)
585        																					-- OperNomeAttach (considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
586        																					-- IdUdTrasmessa Id. UD di unità documentaria trasmessa in uscita con le mail da estarre
587        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
588        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne: da 1 a 10, da 71 a 76 + 21, 22, 23, 36, 40, 87). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
589        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
590        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
591        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
592        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.			
593        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
594        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
595        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)  
596        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro				
597        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
598        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
599        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
600        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
601        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
602        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
603        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema. 
604        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
605        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
606        																					-- La colonna 1 sarà presente comunque.
607        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
608        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
609        																					-- Ogni e-mail trovata è un tag Riga che può contenere le seguenti colonne: 
610        																					-- 1: ID_EMAIL (PK interna)
611        																					-- 2: MessageId della busta S/MIME
612        																					-- 3: Flag In/Out: I = e-mail ricevuta; O = e-mail inviata
613        																					-- 4: Id.(MAILBOX_ACCOUNT.ID_ACCOUNT) della casella che ha ricevuto (se colonna 3 = I) o inviato (se colonna 3 = O) la mail
614        																					-- 5: Indirizzo della casella che ha ricevuto (se colonna 3 = I) o inviato (se colonna 3 = O) la mail
615        																					-- 6: Categoria dell'e-mail; valori possibili: INTEROP_SEGN (interoperabile con allegata segnatura.xml), INTEROP_ECC (notifica interoperabile di eccezione), INTEROP_CONF (notifica interoperabile di conferma), INTEROP_AGG (notifica interoperabile di aggiornamento), INTEROP_ANN (notifica interoperabile di annullamento di registrazione), PEC = e-mail inviata da PEC e NON interoperabile; ANOMALIA = busta anomalia (ovvero e-mail inviata da una casella ordinaria); PEC_RIC_ACC = ricevuta PEC di accettazione, PEC_RIC_NO_ACC = ricevuta PEC di mancata accettazione, PEC_RIC_PREAS_C = ricevuta PEC di presa in carico da parte del provider ricevente, PEC_RIC_CONS = ricevuta  PEC di avvenuta consegna, PEC_RIC_PREAVV_NO_CONS = preavviso di mancata consegna, PEC_RIC_NO_CONS = ricevuta PEC di mancata consegna, DELIVERY_STATUS_NOT = notifiche di trasporto dei mail server/provider, PEO_RIC_CONF = Conferma di lettura (posta ordinaria), PEC_RIC_CONF = Conferma di lettura (posta certificata); ALTRO = altre e-mail generate in automatico dai mail server / provider (come quelle di esurimento quote sulle caselle)
616        																					-- 7: Data e ora di scarico (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
617        																					-- 8: Data e ora di invio dal client, valorizzata anche per le mail ricevute (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
618        																					-- 9: Data e ora di invio attestata dal provider PEC (solo per le mail ricevute provenienti da PEC) (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
619        																					-- 10: Dimensione dell'e-mail in bytes
620        																					-- 11: URI a cui reperire l'eml della mail (con notazione di StorageUtil)
621        																					--	    l'URI non viene restituito se è quello della ricevuta di consegna e non della mail inviata
622        																					-- 12: (valori 1/0) Indica se la mail è stata marcata (=1) come spam o no (=0)
623        																					-- 13: Stato della mail se marcata come spam; valori possibili: B = bloccata, RS = richiesto sblocco, S = sbloccata, R = rigettata a seguoto dello sblocco
624        																					-- 14: Indica se la mail, qualora sia una ricevuta PEC, è: C = Completa, S = Sintetica, B = Breve
625        																					-- 15: Stato di consolidamento della mail (se inviata); valori possibili: accettata; non accettata; avvertimenti in consegna, errori in consegna, consegnata, consegnata parzialmente 
626        																					-- 16: N.ro complessivo di allegati della mail
627        																					-- 17: N.ro di allegati firmati digitalmente
628        																					-- 18: N.ro di allegati NON firmati digitalmente
629        																					-- 19: (valori 1/0) Indica se la mail è firmata (=1) o meno (=0)
630        																					-- 20: (valori 1/0) Se 1 significa che qualora l'e-mail ricada in una delle categorie ricevute PEC, notifiche interoperabili e delivery status notification il sistema non è stato in grado di associarla in automatico all'e-mail inviata cui si riferisce
631        																					-- 21: Indirizzo mittente (da cui provine la mail; valorizzato solo per e-mail in entrata)
632        																					-- 22: Oggetto della mail
633        																					-- 23: Corpo della mail
634        																					-- 24: Indirizzi destinatari della mail (tutti, sia primari che in conoscenza), separati da , se più di uno
635        																					-- 25: Indirizzi destinatari primari, separati da , se più di uno
636        																					-- 26: Indirizzi destinatari in cc, separati da , se più di uno
637        																					-- 27: Indirizzi destinatari in ccn, separati da , se più di uno
638        																					-- 28: Avvertimenti sulla mail (solo se in entrata) rilevati e memorizzati dal componente che scarica le e-mail dalla casella
639        																					-- 29: Indica chi ha il lock sulla mail (Cognome e Nome + username)
640        																					-- 30: (valori 1/0) Indica se e-mail con richiesta di conferma (sia se mail in entrata, sia se e-mail inviata; nel caso di mail interoperabile è la richiesta di conferma della Segnatura.xml) 
641        																					-- 31: Data e ora di ultima assegnazione dell'e-mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
642        																					-- 32: Attuale assegnatario dell'e-mail
643        																					-- 33: (valori 1/0) Indica se e-mail per cui è stata inviata risposta (=1) o meno (=0)
644        																					-- 34: (valori 1/0) Indica se e-mail inoltrata (=1) o meno (=0)
645        																					-- 35: Stato di protocollazione della mail (valorizzato solo per mail ricevute). Valori possibili: C = Completa, ovvero protocollati tutti i file, P = Parziale, ovvero protocollati solo alcuni file, valore vuoto = non protocollata
646        																					-- 36: Contrassegno (decodificato)
647        																					-- 37: (valori 1/0) Indica se sono pervenute notifiche di eccezione (=1) o meno (=0) a fronte della mail (inviata)
648        																					-- 38: (valori 1/0) Indica se sono pervenute notifiche di conferma (=1) o meno (=0) a fronte della mail (inviata)
649        																					-- 39: (valori 1/0) Indica se sono pervenute notifiche di aggiornamento(=1) o meno (=0) a fronte della mail (inviata)
650        																					-- 40: Livello di priorità della mail: alta, normale, bassa
651        																					-- 41: Destinatari della mail come indicati in fase di invio, eventualmente anche come liste di distribuzione e nominativi della rubrica (tutti, sia primari che in conoscenza), separati da , se più di uno
652        																					-- 42: Indirizzi destinatari primari come indicati in fase di invio, separati da , se più di uno
653        																					-- 43: Indirizzi destinatari in cc come indicati in fase di invio, separati da , se più di uno
654        																					-- 44: Indirizzi destinatari in ccn come indicati in fase di invio, separati da , se più di uno
655        																					-- 45: Nome del folder in cui è collocata la mail (valorizzato solo se il folder è uno solo e diverso da quello con la classifica eventualmente indicata nel filtro ClassificaFolder)
656        																					-- 46: Estremi dei protocolli/registrazioni - effettuati dal soggetto che ha ricevuto la mail, se e-mail in entrata, o l'ha inviata, se e-mail in uscita - associati alla mail (sia per e-mail in entrata che in uscita). Se più di una sono separate da ;
657        																					-- 47: Lista di ID_UD delle unità documentarie cui la mail ha dato luogo (se in entrata) o i cui dati e/o file sono stati trasmessi con la mail (se in uscita). Se più di una sono separate da ;
658        																					--	   NOTA: le ID_UD in questa colonna sono nello stesso ordine dei rispettivi estremi di protocollo/registrazione in colonna 46
659        																					-- 48: Estremi del/i protocolli/registrazioni esterni associati alla mail (solo per e-mail interoperabili inviate)
660        																					-- 49: Id. email dell'email da cui quella corrente deriva (se è una ricevuta PEC o notifica interoperabile o una delivery status notification o una mail di conferma ricezione)
661        																					-- 50: Stato dell'e-mail per l'utente di lavoro/collegato
662        																					-- 51: (valori 1/0) Se 1 indica che sulla mail sono presenti commenti destinati all'utente di lavoro/collegato
663        																					-- 52: (valori 1/0) Indica se e-mail assegnata personalmente all'utente (1) o no (=0)
664        																					-- 53: (valori 1/0) Indica se e-mail assegnata all'utente o ad una sua UO (=1) o meno (=0)
665        																					-- 54: (valori 1/0) Indica se sono pervenute notifiche di annullamento di registrazione (=1) o meno (=0) a fronte della mail (inviata)
666        																					-- 55: flag che indica presenza di allegati firmati (=AF), presenza di alleegati tutti non firmati (=A) o assenza di allegati (se NULL)
667        																					-- 56: Serve come alt della colonna precedente per indicare il n.ro totale di allegati, quanti firmati e quanti no
668        																					-- 57: Estremi del protocollo/registrazione del mittente della mail ricevuta (se interoperabile)
669        																					-- 58: Oggetto del protocollo/registrazione del mittente della mail ricevuta (se interoperabile)
670        																					-- 59: Tipo dell'email
671        																					-- 60: Sotto-tipo dell'email
672        																					-- 61: (valori 1/0) Flg mail certificata. La certificazione si riferisce al mittente
673        																					-- 62: (valori 1/0) Flg mail di interoperabilità tra protocolli
674        																					-- 63: Icona da utilizzare (della macro+microcategoria) per la mail
675        																					-- 64: Stato di lavorazione della mail
676        																					-- 65: (valori 2/1/0) Grado di urgenza della verifica da effettuare se presente contrassegno di verifica urgente
677        																					-- 66: Id. del contrassegno di verifica urgente da effettuare (valorizzato se è un contrassegno che indica verifica urgente da effettuare)
678        																					--		Valori possibili: ALERT.ECC_INTEROP, ALERT.ERR_TRASM, ALERT.WARNING_TRASM, ALERT.NO_TRASM (la decodifica è in colonna 36)
679        																					-- 67: Messaggio a corredo ultima assegnazione della mail
680        																					-- 68: Azione da fare sulla mail (decodifica)
681        																					-- 69: Cod. azione da fare sulla mail
682        																					-- 70: Dettaglio azione da fare sulla mail
683        																					-- 71: Progressivo della mail da mostrare nella GUI(ID univoco)
684        																					-- 72: Progressivo della mail da usare per download/stampa
685        																					-- 73: Progressivo della mail da usare per ordinare
686        																					-- 74: Data e ora di salvataggio della mail in tabella T_EMAIL_MGO (nel formato dato dal parameto FMT_STD_TIMESTAMP)
687        																					-- 75: N.ro di giorni (arrotondato agli interi) da cui lo stato di lavorazione è "lavorazione_aperta"
688        																					-- 76: Codice stato di invio. Valori possibili: OK (inviata), KO (invio fallito), IP (invio in corso)
689        																					-- 77: Codice stato di accettazione. Valori possibili: OK (accettata), KO (non accettata), W (presunta mancata accettazione), IP (accettazione in corso) ND (non ancora valorizzato)
690        																					-- 78: Codice stato di consegna. Valori possibili: OK (consegnata), KO (consegna fallita), W (presunta mancata consegna), IP (consegna in corso) ND (non ancora valorizzato)
691        																					-- 79: Stato di invio (decodificato)
692        																					-- 80: Stato di accettazione (decodificato)
693        																					-- 81: Stato di consegna (decodificato)
694        																					-- 82: Data e ora da cui c'è il lock sulla mail (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
695        																					-- 83: Data e ora di ultimo aggiornamento dello stato di lavorazione (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
696        																					-- 84: Annotazioni associate alla mail (in ordine dalla 1 in su)
697        																					-- 85: (valori 1/0) Flag di conferma di lettura
698        																					-- 86: Tag apposto/i sulla mail (in ordine dalla 1 in su)
699        																					-- 87: Data e ora di chiusura/archiviazione della mail (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
700        																					-- 88: Nominativo dell'operatore che ha chiuso/archiviato la mail 
701        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
702        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
703        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore
704        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
705        
706        	/******** funzion che carica tutti i dati di una e-mail (in entrata o in uscita, purchè archiviata in T_EMAIL_MGO) e delle sue e-mail collegate ******/
707        	function LoadDettEmail(
708        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
709        																					-- (obblig). Codice identificativo del token di connessione
710        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
711        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail ricevuta da registrare
712        			FlgSoloAbilitazioniIn		IN		PLS_INTEGER,						-- (valori 1/0) Se 1 nell'XMLDatiEmailOut vengono tirate fuori solo le informazioni di abilitazione alle azioni
713        			XMLDatiEmailOut				OUT		NOCOPY CLOB,						-- Dati della mail (XML conforme a schema SezioneCache.xsd)
714        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
715        																					-- FlgIO    		valori I/O indica se email ricevuta (I) o inviata (O)                     
716        																					-- TitoloGUIDettaglioEmail	Stringa da usare come titolo della finestra in cui si mostra il dettaglio mail
717        																					-- FlgRicNotSenzaPredecessore	valori 1/0 Se 1 indica che è una ricevuta o notifica "orfana", ovvero che non è associata alla mail da cui deriva
718        																					-- MessageId 		MessageId della mail (nel caso di mail ricevuta da casella PEC è l'identificativo univoco della mail assegnatole dal provider PEC)
719        																					-- ProgrMsg			Progressivo che identifica la mail
720        																					-- ProgrMsgXDownloadStampa	Progressivo che identifica la mail formattato x il download/stampa
721        																					-- ProgrBozza		Progressivo che identificava la mail come bozza, prima dell'invio
722        																					-- Casella.Id		Id. della casella (ID_CASELLA ovvero MAILBOX_ACCOUNT.ID_ACCOUNT) che ha ricevuto/inviato la mail
723        																					-- Casella.Account	Indirizzo della casella che ha ricevuto/inviato la mail
724        																					-- Casella.IsPEC 	valori true/false; indica se la casella che ha ricevuto/inviato la mail è PEC o meno
725        																					-- Categoria     	Categoria della mail (è il valore del campo T_EMAIL_MGO.CATEGORIA)             
726        																					-- Dimensione       Dimensione in bytes della mail         
727        																					-- URI              URI (con notazione di StorageUtil) a cui reperire l'eml (busta di trasporto intera in caso di e-mail ricevuta)
728        																					-- FlgSpam          valori 1/0: se 1 indica che la mail è stata marcata come spam         
729        																					-- StatoConsolidamento 	Stato di consolidamento per le e-mail inviate. 
730        																					--					Valori possibili: in bozza; accettata; non accettata; avvertimenti in consegna, errori in consegna, consegnata, consegnata parzialmente, protocollazione confermata, protocollazione parzialmente confermata
731        																					-- StatoInvio		Stato di invio (solo per e-mail inviata) (da usare come alt dell'icona indicata in IconaStatoInvio)
732        																					-- IconaStatoInvio	Valori possibili: OK (spunta verde), IP (spunta gialla), KO (croce rossa), W (croce arancione), ND (insieme vuoto grigio)
733        																					-- StatoAccettazione		Stato di accettazione (solo per e-mail inviata) (da usare come alt dell'icona indicata in IconaStatoAccettazione)
734        																					-- IconaStatoAccettazione Valori possibili: OK (spunta verde), IP (spunta gialla), KO (croce rossa), W (croce arancione), ND (insieme vuoto grigio)
735        																					-- MsgErrMancataAccettazione	Messaggio di errore della mancata accettazione
736        																					-- StatoConsegna		Stato di consegna (solo per e-mail inviata) (da usare come alt dell'icona indicata in IconaStatoConsegna)
737        																					-- IconaStatoConsegna Valori possibili: OK (spunta verde), IP (spunta gialla), KO (croce rossa), W (croce arancione), ND (insieme vuoto grigio)
738        																					-- MsgErrMancataConsegna 		Messaggio di errore della mancata consegna o presunta mancata consegna
739        																					-- MsgErrRicevutaPEC			Messaggio di errore della mail se ricevuta PEC che notifica un errore o probabile problema
740        																					-- StatoLavorazione Valori possibili: da lavorare, in lavorazione, lavorazione conclusa, lavorazione aperta
741        																					-- TsAggStatoLavorazione	data e ora di ultimo aggiornamento dello stato di lavorazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
742        																					-- DataAggStatoLavorazione 	data - troncata al giorno - di ultimo aggiornamento dello stato di lavorazione (nel formato dato dal parametro di config. FMT_STD_DATA)
743        																					-- OrarioAggStatoLavorazione orario - ore e minuti in formato HH24:MI - di ultimo aggiornamento dello stato di lavorazione
744        																					-- IconaMicroCategoria Serve per determinare l'icona della macro+micro cataegoria della mail
745        																					--					Valori possibili:
746        																					--					ricezione_documento
747        																					--					messaggio_di_sistema
748        																					--					invio_documento
749        																					--					notifica_lettura
750        																					--					notifica_trasmissione
751        																					--					inoltro_mail
752        																					--					risposta_mail
753        																					--					notifica_protocollo_in_entrata
754        																					--					notifica_protocollo_in_uscita
755        																					-- Tipo				Tipo di email. Valori possibili: 
756        																					--					Posta in entrata
757        																					--					Posta in uscita
758        																					--					Notifica trasmissione
759        																					--					Notifica lettura
760        																					--					Notifica protocollo in entrata
761        																					--					Notifica protocollo in uscita
762        																					-- Sottotipo		Sotto-tipo di email. Valori possibili: 
763        																					--					Ricezione documento
764        																					--					Messaggio di sistema
765        																					--					Invio documento
766        																					--					Inoltro e-mail
767        																					--					Risposta 
768        																					--					Conferma protocollazione
769        																					--					Notifica di eccezione
770        																					--					Aggiornamento
771        																					--					Annullamento protocollazione
772        																					--					Accettazione
773        																					--					Mancata accettazione
774        																					--					Avvenuta consegna
775        																					--					Presunta mancata consegna
776        																					--					Mancata consegna
777        																					--					Delivery status notification
778        																					-- FlgPEC			valori 1/0: se 1 significa che è una mail certificata, se 0 che è una mail ordinaria (si intende che il mittente è certificato)
779        																					-- FlgInteroperabile valori 1/0: se 1 è una mail di interoperabilità tra Protocolli
780        																					-- NroAllegati		N.ro di allegati (inclusi allegati interoperabilità quali Segnatura.xml ecc)
781        																					-- NroAllegatiFirmati	N.ro di allegati firmati digitalmente
782        																					-- FlgEmailFirmata	valori 1/0 Se 1 indica che la mail è firmata (l'intera busta SMIME)
783        																					-- FlgNoAssociazioneAutomatica	valori 1/0 	Se 1 indica che la mail - una mail in ingresso di tipo: ricevuta PEC, notifica interoperabile, ricevuta di lettura o notifica di errore in trasmissione/consegna - non è stata assciata in automatico alla mail inviata cui si riferisce
784        																					-- AccountMittente	Indirizzo mittente 
785        																					-- Subject			Subject/oggetto della mail
786        																					-- Body				Corpo della mail (quello in formato text/plain)
787        																					-- EnteRegMitt		Denominazione dell'Ente mittente che ha effettuato la registrazione riportata nella Segnatura.xml (e-mail interoperabile in entrata)
788        																					-- SiglaRegistroRegMitt Sigla del registro della registrazione assegnata dal mittente (se e-mail interoperabile in entrata)
789        																					-- NumRegMitt		Numero di registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata)
790        																					-- AnnoRegMitt		Anno di registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata)
791        																					-- DtRegMitt		Data di registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata; nel formato dato dal parametro di config. FMT_STD_DATA)
792        																					-- OggettoRegMitt	Oggetto della registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata)
793        																					-- TsLock			Data e ora da cui è stato posto l'ultimo lock sulla mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
794        																					-- DataLock 		data - troncata al giorno - da cui è stato posto l'ultimo lock sulla mail (nel formato dato dal parametro di config. FMT_STD_DATA)
795        																					-- OrarioLock 		orario - ore e minuti in formato HH24:MI - da cui è stato posto l'ultimo lock sulla mail
796        																					-- DesUtenteLock	Cognome e nome dell'operatore che ha posto l'ultimo lock sulla mail
797        																					-- DesOperLock		Operazione che ha determinato l'ultimo lock sulla mail
798        																					-- FlgRichConferma	valori 1/0 (può essere 1 solo per le mail interoperabili) Se 1 indica che è stata richiesta conferma di protocollazione della mail, se 0 no 
799        																					-- FlgRichConfermaLettura	valori 1/0 Se 1 indica che è stata richiesta conferma di lettura della mail, se 0 no
800        																					-- TsUltimaAssegnazione Data e ora da di ultima assegnazione della mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
801        																					-- DataUltimaAssegnazione 	data - troncata al giorno - di ultima assegnazione della mail (nel formato dato dal parametro di config. FMT_STD_DATA)
802        																					-- OrarioUltimaAssegnazione orario - ore e minuti in formato HH24:MI - di ultima assegnazione della mail
803        																					-- DesUOAssegnataria	Denominazione dell'Unità Organizzativa attuale assegnataria della mail
804        																					-- DesUtenteAssegnatario	Cognome e nome dell'operatore attuale assegnatario della mail
805        																					-- MsgUltimaAssegnazione Messaggio associato all'ultima assegnazione
806        																					-- FlgInviataRisposta	valori 1/0 (può essere 1 solo per le mail ricevute) Se 1 indica che è stata inviata una mail di risposta
807        																					-- FlgInoltrata			valori 1/0. Se 1 indica che la mail è stata inoltrata
808        																					-- StatoProtocollazione	Stato di protocollazione (valorizzato solo per le mail in entrata che non sono ricevute/notifiche/mail automatiche). Valori possibili: non protocollata, protocollata, protocollata parzialmente 
809        																					-- Contrassegno			Contrassegno (decodificato) apposto sulla mail
810        																					-- IdRecDizContrassegno Codice del contrassegno apposto sulla mail
811        																					-- FlgRicevutaEccezioneInterop 		valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di eccezione
812        																					-- FlgRicevutaConfermaInterop		valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di conferma
813        																					-- FlgRicevutoAggiornamentoInterop	valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di aggiornamento
814        																					-- FlgRicevutoAnnRegInterop 		valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di annullamento di registrazione
815        																					-- TsRicezione			Data e ora di scarico dalla casella (valorizzata solo per le mail ricevute; espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
816        																					-- TsIns				Data e ora di salvataggio della mail in T_EMAIL_MGO
817        																					-- TsInvioCertificato	Data e ora di invio certificata dal provider PEC (valorizzata solo per le mail PEC ricevute; espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
818        																					-- TsInvio				Data e ora di invio della mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP). E' una data e ora NON certificata (quella del client mittente nel caso delle mail ricevute)
819        																					-- CodAzioneDaFare		Codice dell'azione da fare sulla mail
820        																					-- AzioneDaFare			Azione da fare sulla mail (decodifica di CodAzioneDaFare)
821        																					-- DettAzioneDaFare		Dettagli su azione da fare sulla mail
822        																					-- MotivoEccezione		Motivo eccezione riportato nell'allegato Eccezione.xml
823        																					-- LivPriorita 			Livello di priorotà della mail: alta, normale, bassa
824        																					-- FlgRicevutaCBS		Valorizzato solo per le ricevute PEC in ingresso. Indica se la ricevuta è: completa, breve, sintetica
825        																					-- DestinatariPrincipali	(valorizzato solo per mail ricevuta) Lista dei destinatari principali della mail (separati da , se più di uno)
826        																					-- @DestinatariPrincipali	(valorizzato solo per mail inviata) Lista dei destinatari principali della mail. 
827        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
828        																					--							1: indirizzo del destinatario
829        																					--							2: stato di consolidamento relativo al dato destinatario
830        																					--							3: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di eccezione
831        																					--							4: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di conferma
832        																					--							5: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di aggiornamento
833        																					--							6: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di annullamento
834        																					--							7: flag 1/0 che se 1 indica che dal destinatario è arrivata la ricevuta di avvenuta lettura
835        																					--							8: estremi di protocollo assegnati dal destinatario
836        																					--							9: Codice per icona stato di consegna relativo al dato destinatario
837        																					--							10: Stato di consegna relativo al dato destinatario
838        																					--							11: Messaggio di mancata consegna/preavviso di mancata consegna al destinatario (solo per mail inviata)
839        																					-- DestinatariCC			(valorizzato solo per mail ricevuta) Lista dei destinatari in copia della mail (separati da , se più di uno)
840        																					-- @DestinatariCC		    (valorizzato solo per mail inviata) Lista dei destinatari in copia della mail. 
841        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
842        																					--							1: indirizzo del destinatario
843        																					--							2: stato di consolidamento relativo al dato destinatario
844        																					--							3: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di eccezione
845        																					--							4: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di conferma
846        																					--							5: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di aggiornamento
847        																					--							6: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di annullamento
848        																					--							7: flag 1/0 che se 1 indica che dal destinatario è arrivata la ricevuta di avvenuta lettura
849        																					--							8: estremi di protocollo assegnati dal destinatario
850        																					--							9: Codice per icona stato di consegna relativo al dato destinatario
851        																					--							10: Stato di consegna relativo al dato destinatario
852        																					--							11: Messaggio di mancata consegna/preavviso di mancata consegna al destinatario (solo per mail inviata)
853        																					-- @DestinatariCCN		    (valorizzato solo per mail inviata) Lista dei destinatari in copia nascosta della mail. 
854        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
855        																					--							1: indirizzo del destinatario
856        																					--							2: stato di consolidamento relativo al dato destinatario
857        																					--							7: flag 1/0 che se 1 indica che da destinatario è arrivata la ricevuta di avvenuta lettura
858        																					--							9: Codice per icona stato di consegna relativo al dato destinatario
859        																					--							10: Stato di consegna relativo al dato destinatario
860        																					-- EmailPredecessore.IdEmail		ID_EMAIL della mail predecessore da cui quella corrente ha avuto luogo
861        																					-- EmailPredecessore.MessageId		MessageId della mail predecessore da cui quella corrente ha avuto luogo
862        																					-- EmailPredecessore.ProgrMsg			Progressivo che identifica la mail predecessore
863        																					-- EmailPredecessore.ProgrMsgXDownloadStampa	Progressivo che identifica la mail predecessore formattato x il download/stampa
864        																					-- EmailPredecessore.TsIns			Data e ora di salvataggio in tabella T_EMAIL_MGO della mail precedecessore da cui quella corrente ha avuto luogo (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
865        																					-- EmailPredecessore.FlgIO			valori I/O indica se la email predecessore da cui quella corrente ha avuto luogo è ricevuta (I) o inviata (O)    
866        																					-- EmailPredecessore.Categoria		Categoria della mail precedecessore da cui quella corrente ha avuto luogo(è il valore del campo T_EMAIL_MGO.CATEGORIA) 
867        																					-- EmailPredecessore.TsInvio		Data e ora di invio della mail precedecessore da cui quella corrente ha avuto luogo (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
868        																					-- EmailPredecessore.TsRicezione	Data e ora di scarico della mail precedecessore (ricevuta) da cui quella corrente ha avuto luogo (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
869        																					-- EmailPredecessore.Casella.Account	Indirizzo della casella che ha scaricato la mail predecessore (se ricevuta) o da cui la mail predecessore è stata inviata (se e-mail inviata)
870        																					-- EmailPredecessore.Subject			Oggetto della mail precedecessore da cui quella corrente ha avuto luogo
871        																					-- EmailPredecessore.AccountMittente	Indirizzo mittente della mail precedecessore da cui quella corrente ha avuto luogo
872        																					-- EmailPredecessore.IconaMicroCategoria Serve per determinare l'icona della macro+micro cataegoria della mail predecessore
873        																					-- EmailPredecessore.Tipo				Tipo della mail precedecessore da cui quella corrente ha avuto luogo
874        																					-- EmailPredecessore.Sottotipo			Tipo della mail precedecessore da cui quella corrente ha avuto luogo
875        																					-- EmailPredecessore.FlgPEC				valori 1/0: se 1 significa che la mail precedecessore (da cui quella corrente ha avuto luogo) è una mail certificata, se 0 che è una mail ordinaria
876        																					-- EmailPredecessore.FlgInteroperabile	valori 1/0: se 1 significa che la mail precedecessore (da cui quella corrente ha avuto luogo) è una mail diinteroperabilità tra protocolli
877        																					-- EmailPredecessore.DestinatariPrincipali  Indirizzi dei destinatari principali della mail precedecessore da cui quella corrente ha avuto luogo (se più di uno separati da ,)
878        																					-- EmailPredecessore.DestinatariCC			Indirizzi dei destinatari in copia della mail precedecessore da cui quella corrente ha avuto luogo (se più di uno separati da ,)
879        																					-- @EmailPredecessore.EstremiDocTrasmessi  Id. e estremi di registrazione/protocollo del/i documenti trasmessi con la mail predecessore (inviata)
880        																					--						 E' una lista in cui ogni documento è una riga e contiene le seguenti colonne:
881        																					-- 							1: ID_UD del documento
882        																					--							2: Estremi di registrazione del documento
883        																					-- @IdEmailInoltrate	Lista con gli id. delle mail di cui quella corrente è un inoltro (anche se inoltro massivo di n mail)
884        																					--						Ogni e-mail precedente di cui quella corrente è inoltro corrisponde ad una riga. La riga contiene una sola colonna con l'IdEmail
885        																					-- NroMailPredecessore					N.ro di mail precedessore
886        																					-- FlgMailPredecessoreStatoLavAperta	(true/false) Se true significa che la/almeno una delle mail predecessore ha stato di lavorazione "aperta" 
887        																					-- FlgMailPredecessoreConAzioneDaFare	(true/false) Se true significa che la/almeno una delle mail predecessore ha un azione da fare settata
888        																					-- MailPredecessoriUnicaAzioneDaFare	Azione da fare sulla/e mail predecessore (valorizzata solo se, in caso di più mail, hanno tutte la stessa azione)
889        																					-- @EmailPrecedentiCollegate	Lista delle mail precedenti - dalla capofila, per prima, in avanti - collegate alla mail. Serve per costruire le briciole di pane
890        																					--						E' una lista in cui ogni e-mail precedente è una riga e contiene le seguenti colonne:
891        																					-- 							1: ID_EMAIL
892        																					--							2: Valore con cui mostrare la mail precedente nelle briciole di pane
893        																					-- @EstremiDocTrasmessi  Id. e estremi di registrazione/protocollo del/i documenti trasmessi con la mail (inviata). 
894        																					--						 E' una lista in cui ogni documento è una riga e contiene le seguenti colonne:
895        																					-- 							1: ID_UD del documento
896        																					--							2: Estremi di registrazione del documento
897        																					-- @EstremiDocDerivati	Estremi di registrazione/protocollazione dei documenti a cui ha dato luogo la mail (in entrata)
898        																					--						 E' una lista in cui ogni documento è una riga e contiene le seguenti colonne:
899        																					-- 							1: ID_UD del documento
900        																					--							2: Estremi di registrazione del documento
901        																					-- @Allegati			Allegati(file) della mail. Ogni allegato è una riga e contiene le seguenti colonne:
902        																					--						1: Nome originale file
903        																					--						2: Mimetype
904        																					--						3: (valori 1/0) Se 1 indica se è pdf o convertibile in pdf
905        																					--						4: (valori 1/0) Se 1 indica se firmato digitalmente
906        																					--						5: Dimensione in bytes
907        																					--						6: Impronta
908        																					--						7: Algoritmo calcolo impronta
909        																					--						8: Encoding impronta (hex o base64)
910        																					--						9: ID_UD della protocollazione/registrazione del file (valorizzata solo se e-mail in entrata)
911        																					--						10:Estremi della protocollazione/registrazione del file (valorizzata solo se e-mail in entrata)
912        																					--						11: Nome file "aggiustato"
913        																					--						12: N.ro progressivo dell'allegato
914        																					--						13: (valori 1/0) Flag di firma valida
915        																					--						14: (valori 1/0) Flag di pdf con commenti
916        																					--						15: (valori 1/0) Flag di pdf editabile
917        																					-- @ItemLavorazione 	Lista degli item di lavorazione - commenti, tag, file - associati alla mail
918        																					--						E' una lista in cui ogni item è una riga e ogni riga è formata dalle seguenti colonne:
919        																					--						1: Tipo di item. Valori possibili: F = File, AT = Commento e/o tag
920        																					--						2: Nro progressivo dell'item 
921        																					--						3: Commento
922        																					--						4: Tag (codice)
923        																					--						5: URI del file
924        																					--						6: Nome del file
925        																					--						7: Dimensione del file (in bytes)
926        																					--						8: Mimetype del file
927        																					--						9: (valori 1/0) Se 1 indica se file firmato digitalmente
928        																					--						10: Impronta del file
929        																					--						11: Algoritmo di calcolo dell'impronta del file
930        																					--						12: Encoding dell'impronta del file (hex o base64)																			
931        																					--						13: (valori 1/0) Se 1 indica se è pdf o convertibile in pdf
932        																					--						14: Data e ora di inserimento
933        																					--						15: Utente di inserimento
934        																					--						16: Data e ora di ultima modifica
935        																					--						17: Utente di ultima modifica
936        																					--						18: (valori 1/0) Flag di item non modificabile/cancellabile perchè "locked" da qualcuno (da usare per il check "inibisci modifica")
937        																					--						19: (valori 1/0) Se 1 indica che l'item non è modificabile/cancellabile
938        																					--						20: Motivo per cui l'item non è modificabile cancellabile (con dettaglio dell'utente che lo ha riservato o dell''invio per approvazione che lo ha reso immodificabile) 
939        																					--						21: (valori 1/0) Se 1 significa che per il tag presente è obbligatorio inserire un commento
940        																					--						22: Tag (decodifica)
941        																					-- @EmailSuccessiveCollegate 	Lista delle e-mail successive derivate da quella corrente.
942        																					--								Ogni e-mail collegata è una riga; se si tratta di una mail inviata seguono tante righe quante i destinatari con i dati relativi ad ogni destinatario
943        																					--								Le colonne di ogni riga sono:
944        																					--						1: valori 1/2: 1 = Riga di e-mail, 2 = Riga di destinatario
945        																					--						2: Id. interno della mail (ID_EMAIL)
946        																					--						3: valori I/O: I = email in entrata, O = mail in uscita
947        																					--						4: Categoria della mail (colonna T_EMAIL_MGO.CATEGORIA)
948        																					--						5: Tipo della mail
949        																					--						6: Data e ora di invio (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
950        																					--						7: Data e ora di scarico, se e-mail ricevuta (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
951        																					--						8: Indirizzo mittente della mail
952        																					--						9: Cognome e nome di chi ha inviato la mail (se inviata)
953        																					--						10: Stato di consolidamento della mail (se inviata)
954        																					--						11: Estremi del protocollo/registrazione assegnato dal mittente della mail
955        																					--						12: Tipo di destinatario: P = Principale, CC = in copia, CCN = in copia nascosta
956        																					--						13: Indirizzo del destinatario
957        																					--						14: stato di consolidamento relativo al dato destinatario
958        																					--						15: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di eccezione
959        																					--						16: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di conferma
960        																					--						17: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di aggiornamento
961        																					--						18: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di annullamento
962        																					--						19: flag 1/0 che se 1 indica che dal destinatario è arrivata la ricevuta di avvenuta lettura
963        																					--						20: estremi di protocollo assegnati dal destinatario
964        																					--						21: Sottotipo della mail
965        																					--						22: (valori 1/0) Se 1 indica e-mail certificata (il mittente), se 0 ordinaria
966        																					--						23: (valori 1/0) Se 1 indica che è una mail legata all'interoperabilità tra protocolli 
967        																					--						24: IconaMicroCategoria della mail 
968        																					--						25: Stato di lavorazione
969        																					--						26: Codice dell'eventuale contrassegno apposto sulla mail
970        																					--						27: Decodifica dell'eventuale contrassegno apposto sulla mail
971        																					--						28: Progressivo della mail nel formato di visualizzazione nella GUI
972        																					--						29: Progressivo della mail nel formato per la stampa/scarico
973        																					--						30: Data e ora di salvataggio in T_EMAIL_MGO (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
974        																					--						31: Codice per icona stato di invio (se e-mail inviata)
975        																					--						32: Stato di invio (se e-mail inviata)
976        																					--						33: Codice per icona stato di accettazione (se e-mail inviata)
977        																					--						34: Stato di accettazione (se e-mail inviata)
978        																					--						35: Codice per icona stato di consegna (se e-mail inviata)
979        																					--						36: Stato di consegna (se e-mail inviata)
980        																					--						37: Codice per icona stato di consegna relativo al dato destinatario
981        																					--						38: Stato di consegna relativo al dato destinatario
982        																					-- AbilitaInvio				valori true/false Indica se l'azione "Invia" sulla mail (in uscita) va abilitata o meno
983        																					-- AbilitaInvioCopia		valori true/false Indica se l'azione "Invia e-mail come copia" va abilitata o meno
984        																					-- AbilitaSalvaBozza		valori true/false Indica se l'azione "Salva in bozza" sulla mail va abilitata o meno
985        																					-- AbilitaSalvaItemLav		valori true/false Indica se l'azione "Salva item lavorazione" va abilitata o meno
986        																					-- AbilitaRispondi			valori true/false Indica se l'azione "Rispondi" sulla mail va abilitata o meno
987        																					-- AbilitaRispondiATutti	valori true/false Indica se l'azione "Rispondi a tutti" sulla mail va abilitata o meno
988        																					-- AbilitaInoltraEmail		valori true/false Indica se l'azione "Inoltra" sulla mail va abilitata o meno
989        																					-- AbilitaInoltraContenuti  valori true/false Indica se l'azione "Inoltra contenuti" sulla mail va abilitata o meno
990        																					-- AbilitaInoltraEmailSbustata valori true/false Indica se l'azione "Inoltra mail senza busta di trasporto" sulla mail va abilitata o meno
991        																					-- AbilitaAssegna			valori true/false Indica se l'azione "Assegna" sulla mail va abilitata o meno
992        																					-- AbilitaArchivia			valori true/false Indica se l'azione "Archivia" sulla mail va abilitata o meno
993        																					-- AbilitaRiapri			valori true/false Indica se l'azione "Riapri" (inversa di "Archivia") sulla mail va abilitata o meno
994        																					-- AbilitaProtocolla		valori true/false Indica se l'azione "Protocolla" sulla mail va abilitata o meno
995        																					-- AbilitaRepertoria		valori true/false Indica se l'azione "Registra a repertorio" sulla mail va abilitata o meno
996        																					-- AbilitaRegIstanzaAutotutela 	valori true/false Indica se l'azione di creare dalla mail un documento di istanza di autotutela (tributi) va abilitata o meno
997        																					-- AbilitaRegIstanzaCED 		valori true/false Indica se l'azione di creare dalla mail un documento di istanza di esonero per Condizioni Economiche Disagiate (tributi) va abilitata o meno
998        																					-- AbilitaScaricaEmail		valori true/false Indica se l'azione "Scarica e-mail" sulla mail va abilitata o meno
999        																					-- AbilitaScaricaEmailSenzaBustaTrasporto valori true/false Indica se l'azione "Scarica e-mail senza busta PEC trasporto" sulla mail va abilitata o meno
1000        																					-- AbilitaNotifInteropConferma valori true/false Indica se l'azione di invio notifica interoperabile di conferma va abilitata o meno
1001        																					-- AbilitaNotifInteropEccezione valori true/false Indica se l'azione di invio notifica interoperabile di eccezione va abilitata o meno
1002        																					-- AbilitaNotifInteropAggiornamento valori true/false Indica se l'azione di invio notifica interoperabile di aggiornamento va abilitata o meno
1003        																					-- AbilitaNotifInteropAnnullamento valori true/false Indica se l'azione di invio notifica interoperabile di annullamento protocollo va abilitata o meno
1004        																					-- AbilitaConfermaNonInteropProt	valori true/false Indica se l'azione di invio notifica NON interoperabile di avvenuta protocollazione va abilitata o meno
1005        																					-- AbilitaEccezioneNonInterop		valori true/false Indica se l'azione di invio eccezione NON interoperabile va abilitata o meno
1006        																					-- AbilitaSetAzioneDaFare 			valori true/false Indica se l'azione di impostare/modificare l'azione da fare è abilitata o meno
1007        																					-- AbilitaPresaIncarico				valori true/false Indica se l'azione di presa in carico (=lock per se' stessi) è abilitata o meno
1008        																					-- AbilitaMessaInCarico 			valori true/false Indica se l'azione di messa in carico (a terzi) è abilitata o meno
1009        																					-- AbilitaRilascio 					valori true/false Indica se l'azione di rimozione carico (=unlock) è abilitata o meno
1010        																					-- AbilitaAssociaAInvio				valori true/false Indica se l'azione di associazione manuale alla mail precedente è abilitata
1011        																					-- AbilitaStampaFile				valori true/false Indica se l'azione di stampa di allegati e file item lavorazione va abilitata
1012        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1013        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1014        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1015        			IdEmailPrecIn   			IN    	VARCHAR2 DEFAULT NULL,				-- Identificativo dell'e-mail precedente dalla quale viene richiamato il dettaglio della mail (come mail successiva). Serve se la mail ha più predecessori
1016        			CINodoScrivaniaIn			IN		VARCHAR2 DEFAULT NULL				-- Cod. nodo scrivania da cui viene richiamato il dettaglio
1017        			) return PLS_INTEGER;													-- 1 in caso di successo, 0 in caso di errore
1018        	
1019        	----- funzione per ottenere i log delle operazioni più rilevanti avvenute (o anche solo tentate) su un'e-mail 
1020        	function GetLogEmail(
1021        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1022        																					-- (obblig). Codice identificativo del token di connessione
1023        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1024        			IdEmailIn					IN		VARCHAR2,							-- (obblig.) Identificativo - la PK ID_EMAIL - della mail di cui estarre i log
1025        			ListaLogOut					OUT		NOCOPY CLOB,						-- Lista con i log delle operazioni avvenute sul fascicolo / unità documentaria (XML conforme a schema LISTA_STD.xsd)
1026        																					-- Ogni variazione è un tag "Riga" che contiene le seguenti colonne:
1027        																					-- 1: Timestamp dell'operazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
1028        																					-- 2: Progressivo operazione per ordinamento cronologico
1029        																					-- 3: Id. dell'utente che ha effettuato l'operazione
1030        																					-- 4: Decodifica dell'utente che ha effettuato l'operazione
1031        																					-- 5: Id. dell'utente a nome di cui stava lavorando chi ha effettuato l'operazione
1032        																					-- 6: Decodifica dell'utente a nome di cui stava lavorando chi ha effettuato l'operazione
1033        																					-- 7: Codice del tipo di operazione
1034        																					-- 8: Decodifica del tipo di operazione
1035        																					-- 9: Descrizione/dettagli dell'operazione
1036        																					-- 10:Esito dell'operazione (valori: successo; fallita)
1037        																					-- 11:Messaggio di errore (nel caso di operazione fallita)
1038        			FlgIncludiOpFalliteIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 nel log vengono inserite anche le operazioni tentate ma NON andate a buon fine, altrimenti sono estratte solo le operazioni andate a buon fine
1039        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1040        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1041        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
1042        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
1043        	
1044        	----- serve ad archiviare una o più mail (sia ricevute che inviate)
1045        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1046        	----- su ogni mail elaborata viene subito fatta la commit se richiesta 
1047        	function ArchiviaEmail(
1048        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1049        																				-- (obblig). Codice identificativo del token di connessione
1050        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1051        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da archiviare
1052        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1053        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'archiviazione
1054        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1055        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1056        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1057        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1058        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1059        																				-- 1: ID_EMAIL
1060        																				-- 2: PROGR_MSG
1061        																				-- 3: Dati principali della mail (da mostrare come label)
1062        																				-- 4: Esito operazione: OK, KO
1063        																				-- 5: Messaggio di errore
1064        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1065        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1066        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1067        		FlgGestAzioneDaFareIn		IN		VARCHAR2 DEFAULT NULL				-- Indica cosa fare di eventuale azione da fare presente sulla/e e-mail;  		
1068        																				-- valori possibili:
1069        																				-- COMPL = completamento
1070        																				-- ANN	 = annullamento
1071        																				-- se non valorizzato si intende che non si deve fare nulla(in caso di azione da fare presente l'archiviazione andrà in errore)
1072        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1073        
1074        
1075        	----- serve a riaprire, ovvero annullare l'archiviazione di una o più mail precedentemente archiviate (ovvero è l'azione di contraria all'archiviazione)
1076        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1077        	----- su ogni mail elaborata viene subito fatta la commit se richiesta 
1078        	function AnnullaArchiviazioneEmail(
1079        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1080        																				-- (obblig). Codice identificativo del token di connessione
1081        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1082        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da riaprire
1083        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1084        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'annullamento dell'archiviazione (i.e. riapertura)
1085        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1086        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1087        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1088        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1089        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1090        																				-- 1: ID_EMAIL
1091        																				-- 2: PROGR_MSG
1092        																				-- 3: Dati principali della mail (da mostrare come label)
1093        																				-- 4: Esito operazione: OK, KO
1094        																				-- 5: Messaggio di errore
1095        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1096        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1097        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1098        		FlgRilascioLockIn			IN		PLS_INTEGER DEFAULT 1,				-- Se 1 indica che alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail, ma solo se è stato messo in automatico all'inizio dell'operazione e NON era pre-esistente
1099        																				-- se 2 indica che comunque alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail
1100        																				-- se NULL o 0 il lock viene lasciato (da notare che se non era presente viene messo in automatico all'inizio dell'operazione)
1101        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1102        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1103        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1104        
1105        
1106        	----- serve a ri-prendersi una mail precedenetente assegnata in modo che l'assegnatario risulti l'utente che effettua la ripresa o una delle UO cui è associato
1107        	function RiprendiEmail(
1108        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1109        																				-- (obblig). Codice identificativo del token di connessione
1110        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1111        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail 
1112        		FlgRipresaVsUtenteUOIn		IN		VARCHAR2 DEFAULT 'UO',				-- (obblig.) Valori ammessi UT e UO: serve ad indicare se la mail va ri-messa in carico all'utente (=UT) o ad una delle UO (=UO) cui l'utente è collegato		
1113        		IdUORipresaIn				IN		PLS_INTEGER DEFAULT NULL,			-- (obblig. se FlgRipresaVsUtenteUOIn = UO e se l'utente loggato/di lavoro è associato a più UO) UO alla quale mettere in carico la mail, tra quelle cui è collegato l'utente 
1114        																				-- 			se IdUORipresaIn non è valorizzata e FlgRipresaVsUtenteUOIn = UO l'email viene rimessa in carico alla UO dell'utente se è una sola, se l'utente è associato a più UO viene dato errore
1115        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1116        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1117        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1118        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1119        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1120        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1121        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1122        
1123        	---------- funzione per eliminare logicamente o fisicamente una mail archiviata in T_EMAIL_MGO
1124        	function EliminaEmail(
1125        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1126        																				-- (obblig). Codice identificativo del token di connessione
1127        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1128        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail 
1129        		FlgForzaEliminazioneFisicaIn		IN		PLS_INTEGER DEFAULT NULL,	-- Valori 1/0/NULL. Se 1indica che deve essere forzata l'eliminazione fisica e non solo logica della mail	
1130        		URIFileDaEliminareOut		OUT		NOCOPY CLOB,						-- Lista xml (schema ListaSTD.xsd) con gli URI, in notazione di storageUtil, dei file da cancellare
1131        																				-- Ogni file è un tag Riga che ha una sola colonna, la 1, con l'URI in notazione di StorageUtil
1132        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1133        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1134        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1135        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1136        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1137        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1138        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1139        
1140        
1141        	---------- funzione per settare l'azione da fare su una mail archiviata in T_EMAIL_MGO
1142        	function SetAzioneDaFareSuEmail(
1143        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1144        																				-- (obblig). Codice identificativo del token di connessione
1145        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1146        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail 
1147        		CodAzioneDaFareIn			IN		VARCHAR2,							-- Codice dell'azione da fare (valori da apposita DICTIONARY_ENTRY AZIONE_SU_EMAIL)
1148        		DettAzioneDaFareIn			IN		VARCHAR2 DEFAULT NULL,				-- Dettaglio dell'azione da fare
1149        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1150        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1151        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1152        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1153        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1154        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1155        		FlgAzioneCompletataIn		IN		PLS_INTEGER DEFAULT NULL,			-- (viene considerato solo se CodAzioneDaFareIn è NULL o diverso dall'azione già presente in DB)
1156        																				-- Valori 1/0/NULL. Indica se si sta rimuovendo l'azione da fare pre-esistente perchè:
1157        																				-- 1 = completata
1158        																				-- 0 o NULL = annullata
1159        		FlgRilascioLockIn			IN		PLS_INTEGER DEFAULT 1,				-- Se 1 indica che alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sull'e-mail, ma solo se è stato messo in automatico all'inizio dell'operazione e NON era pre-esistente
1160        																				-- se 2 indica che comunque alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sull'e-mail
1161        																				-- se NULL o 0 il lock viene lasciato (da notare che se non era presente viene messo in automatico all'inizio dell'operazione)
1162        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1163        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1164        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1165        
1166        	----- serve a mettere un lock - per se stessi o altri - su una o più mail (sia ricevute che inviate)
1167        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1168        	----- su ogni mail elaborata viene subito fatta la commit se richiesta 
1169        	function LockEmail(
1170        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1171        																				-- (obblig). Codice identificativo del token di connessione
1172        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente - PK di DMT_USERS - a nome di cui si lavora. Se non valorizzato è l'utente connesso
1173        		IdUserLockForIn				IN		VARCHAR2 DEFAULT NULL,				-- Id. dell'utente - PK di T_UTENTI_MOD_PEC - a cui dare il lock.
1174        																				-- Se non specificato si intende l'utente collegato ovvero quello a nome di cui sta lavorando (IdUserLavoroIn)
1175        		FlgLockImplIn				IN		PLS_INTEGER DEFAULT NULL,			-- valori 1/0/NULL Se 1 significa che il lock da mettere è un lock implicito, ovvero un lock messo in automatico prima di effettuare altre operazioni sulla/e mail
1176        		IdRecDizOperLockIn			IN		VARCHAR2 DEFAULT NULL,				-- Id. - PK di un record di T_VAL_DIZIONARIO - del valore di dizionario che indica l'operazione per effettuare la quale si richiede il lock
1177        		DesOperLockIn				IN		VARCHAR2 DEFAULT NULL,				-- Operazione per effettuare la quale si richiede il lock
1178        																				-- Deve essere un valore codificato nel dizionario nella sezione OPERAZIONI
1179        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da loccare
1180        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1181        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'operazione (campo di testo libero)
1182        																				-- Se inizia con [APPROVAZIONE] il lock viene messo all'approvatore per un'approvazione della mail
1183        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1184        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1185        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1186        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1187        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1188        																				-- 1: ID_EMAIL
1189        																				-- 2: PROGR_MSG
1190        																				-- 3: Dati principali della mail (da mostrare come label)
1191        																				-- 4: Esito operazione: OK, KO
1192        																				-- 5: Messaggio di errore
1193        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1194        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1195        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1196        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1197        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1198        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1199        
1200        	----- serve a rimuovere un lock - posto da se stessi o anche da altri - su una o più mail (sia ricevute che inviate)
1201        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1202        	----- su ogni mail elaborata viene subito fatta la commit se richiesta 
1203        	function UnlockEmail(
1204        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1205        																				-- (obblig). Codice identificativo del token di connessione
1206        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1207        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da loccare
1208        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1209        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'operazione (campo di testo libero)
1210        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1211        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1212        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1213        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1214        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1215        																				-- 1: ID_EMAIL
1216        																				-- 2: PROGR_MSG
1217        																				-- 3: Dati principali della mail (da mostrare come label)
1218        																				-- 4: Esito operazione: OK, KO
1219        																				-- 5: Messaggio di errore
1220        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1221        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1222        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1223        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1224        
1225        	/****** funzione per controllare se su una data e-mail è presente un lock di altri *****/
1226        	function CtrlLockEmail(
1227        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1228        																				-- (obblig). Codice identificativo del token di connessione
1229        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1230        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail da controllare
1231        		FlgPresenzaLockAltriOut		OUT		PLS_INTEGER,						-- (valori 1/0/NULL) Se 1 indica che è stato trovato un lock di altri, se 0 che tale lock non è stato trovato.
1232        		DatiLockAltriOut			OUT		VARCHAR2,							-- Contiene i dati del lock altrui se presente
1233        		FlgLockForzabileOut			OUT		PLS_INTEGER,						-- (valori 1/0/NULL) Se 1 indica che è il lock altrui trovato è forzabile dall'utente collegato, se 0 no 
1234        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1235        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1236        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1237        		) return PLS_INTEGER;													-- Vale 1 se il controllo è stato possibile, altrimenti (caso di errore) vale 0
1238        
1239        		
1240        	---------- funzione per fare collegamento manuale tra e-mail di notifica ricevuta
1241        	---------- (interoperabile, conferma lettura o delivery status notification)
1242        	---------- e invio e-mail di unità documentaria, o meglio, lo specifico destinatario di invio e-mail che l'ha inviata
1243        	function CollegaNotifica(
1244        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1245        																				-- (obblig). Codice identificativo del token di connessione
1246        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1247        		IdEmailRicevutaIn   		IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail di notifica (interoperabile, conferma lettura o delivery status notification) ricevuta
1248        		IdDestEmailInviataIn		IN		VARCHAR2,							-- (obblig.) PK del record della T_DESTINATARI_EMAIL_MGO cui associare la notifica
1249        		NoteIn						IN		VARCHAR2,							-- (facoltativo) Note a corredo dell'operazione (campo di testo libero)
1250        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1251        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1252        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1253        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1254        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1255        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1256        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1257        
1258        	-----------funzione per ottenere gli indirizzi e-mail contenuti in una mailing list (ricercati ricorsivamente se ho mailing list innestate)
1259        	function EsplodiIndirizziMailingList(
1260        		IdMailingListIn				In		VARCHAR2,							-- Id. in rubrica mail della mailing list
1261        		ListaIdMMExplodedIn			IN		VARCHAR2 DEFAULT NULL)				-- Lista di eventuali id. mailing list di appartenenza già esplose (separate da ;)
1262        		return DMVA_STRING;														-- lista con gli indirizzi mail della mailing list (ricercati ricorsivamente se ho mailing list innestate)
1263        	
1264        	/**** funzione richimata per autocompletamento automatico o guidato dei destinatari di una e-mail ****/
1265        	function GetPropostaIndDest(
1266        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1267        																				-- (obblig). Codice identificativo del token di connessione
1268        		IdUserLavoroIn				IN 		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1269        		DestinatariIO				IN OUT		VARCHAR2,						-- Stringa con i destinatari a GUI (separati da, o ; o spazio)
1270        																				-- In output dà i destinatari validati/completati
1271        		RestringiPECPEOIn			IN		VARCHAR2 DEFAULT NULL,				-- Serve a restringere la proposta ai soli indirizzi:
1272        																				-- C = di posta certificata
1273        																				-- O = di posta ordinaria
1274        																				-- Ce = di posta certificata o NON marcati come di posta ordinaria
1275        																				-- Oe = di posta ordinaria o NON marcati come di posta certificata
1276        		PropostaXMLOut				OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene la proposta di destinatari (relativa solo all'ultimo indicato in DestinatariIO) per l'autocompletamento se non si può fare in automatico
1277        																				-- Ogni destinatario proposto corrisponde ad un tag riga con le colonne:
1278        																				-- 1: Descrizione voce della rubrica e-mail + eventuale indirizzo mail
1279        																				-- 2: Indirizzo mail
1280        																				-- 3: (valori C/O/NULL) Indicazione se indirizzo Certificato (=C) o Ordinario (=O)
1281        																				-- 4: Id. voce della rubrica e-mail corrisondente
1282        																				-- 5: Flag 1/0: se 1 è una mailing list, se 0 un singolo indirizzo
1283        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1284        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1285        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1286        		FlgDestInterniEsterniIn		IN		VARCHAR2 DEFAULT NULL,				-- (valori I/E) Indica se si deve filtrare per prendere solo indirizzi di soggetti Interni (=I) o Esterni (=E)
1287        		IdSoggRubricaIn				IN		DMT_RUBRICA_SOGGETTI.ID_SOGG_RUBRICA%type DEFAULT NULL				
1288        																				-- Id. del soggetto della rubrica (DMT_RUBRICA_SOGGETTI, non la rubrica mail) cui devono essere relativi gli indirizzi da mostrare
1289        																				-- Questo filtro prende anche gli indirizzi dei soggetti subordinati (es. se è una PA gli indirizzi della AOO e UO della PA)
1290        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1291        	
1292        	---------- funzione da chiamare prima del re-invio da GUI di e-mail con invio fallito
1293        	function ReinviaEmail(
1294        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1295        																				-- (obblig). Codice identificativo del token di connessione
1296        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1297        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail
1298        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1299        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1300        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1301        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1302        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1303        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1304        		FlgRilascioLockIn			IN		PLS_INTEGER DEFAULT 1,				-- Se 1 indica che alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail, ma solo se è stato messo in automatico all'inizio dell'operazione e NON era pre-esistente
1305        																				-- se 2 indica che comunque alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail
1306        																				-- se NULL o 0 il lock viene lasciato (da notare che se non era presente viene messo in automatico all'inizio dell'operazione)
1307        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1308        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1309        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1310        	
1311        	/************ funzione per ricercare nella rubrica e-mail ************/
1312        	function TrovaInRubricaEmail(
1313        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1314        																					-- (obblig). Codice identificativo del token di connessione
1315        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1316        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd). 
1317        																					-- Ogni filtro è un tag "Variabile" dell'XML
1318        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1319        																					-- I nomi dei filtri possibili sono:
1320        																					-- TipoVoce: valori S =Voce semplice, L =Lista di distribuzione
1321        																					--		   Serve a restringere alle voci in rubrica e-mail che sono singoli indirizzi (S) o liste di distribuzione (L)
1322        																					-- Account: parole contenute nell'indirizzo e-mail (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
1323        																					-- OperAccount(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1324        																					-- DesVoce: parole contenute nel nome della voce della rubrica (ricerca per parole fatta con indici context)
1325        																					-- OperDesVoce(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1326        																					-- TipoAccount: C = di Posta Certificata, O = di Posta Ordinaria, N = non indicato se PEC o PEO
1327        																					--				Può essere una combinazione dei valori sprecedenti separati da , o ;
1328        																					-- InseritaDal: estremo inferiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1329        																					-- InseritaAl: : estremo superiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1330        																					-- InseritaDaMe: se 1 si restringe la ricerca alle sole voci create dall'utente collegate
1331        																					-- IncludiAnnullati: se 1 la ricerca trova anche le voci logicamente annullate, altrimenti no
1332        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1333        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne da 1 a 4). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1334        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1335        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1336        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1337        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.			
1338        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1339        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1340        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)  
1341        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro				
1342        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1343        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1344        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1345        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1346        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1347        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1348        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema. 
1349        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
1350        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
1351        																					-- La colonna 1 sarà presente comunque.
1352        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
1353        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
1354        																					-- Ogni voce della rubrica trovata è un tag Riga che può contenere le seguenti colonne: 
1355        																					-- 1: ID (PK interna)
1356        																					-- 2: Descrizione / nome della voce
1357        																					-- 3: (valori 1/0) Se 0 indica che la voce è una lista di distribuzione, se 1 è una voce semplice
1358        																					-- 4: Account e-mail
1359        																					-- 5: Tipo di account: C = certificata, O = Ordinaria, N = non noto se certificata o ordinaria
1360        																					-- 6: flag 1/0: se 1 significa che è verificato che si tratti di indirizzo PEC, altrimenti NO
1361        																					-- 7: flag 1/0: se 1 dignifica che è un account dichiarato su IPA
1362        																					-- 8: Codici IPA (cod. Amministrazione e Cod. AOO)
1363        																					-- 9: Indica il tipo di soggetto a cui si riferisce la voce (valorizzato solo se non è una lista di distribuzione). 
1364        																					--	  Valori possibili: UO (= Unità organizzativa), UT ( = Utente del modulo o di un sistema che lo utilizza), C (= Casella gestita nel modulo), AOOI =(AOO interna all'ente/i che utilizzano la voce di rubrica), AOOE (= AOO esterna all'ente/i che utilizzano la voce di rubrica), A (= altro soggetto esterno)
1365        																					-- 10: flag di voce valida (1) o logicamente annullata (0)
1366        																					-- 11: Data e ora di inserimento (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1367        																					-- 12: Utente di inserimento (decodifica)
1368        																					-- 13: Data e ora di ultimo aggiornamento (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1369        		ErrContextOut				OUT		VARCHAR2,								-- 14: Utente di ultimo aggiornamento (decodifica)
1370        																					-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1371        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1372        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore
1373        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1374        
1375        	/************ funzione per ricercare le caselle configurate ************/
1376        	function TrovaCaselle(
1377        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1378        																					-- (obblig). Codice identificativo del token di connessione
1379        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1380        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd). 
1381        																					-- Ogni filtro è un tag "Variabile" dell'XML
1382        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1383        																					-- I nomi dei filtri possibili sono:
1384        																					-- Account: parole contenute nell'indirizzo e-mail (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
1385        																					-- OperAccount(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1386        																					-- DesOwner: parole contenute nel nome del soggetto produttore/AOO associato alla casella (ricerca per parole fatta con indici context)
1387        																					-- OperDesOwner(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1388        																					-- TipoAccount: C = di Posta Certificata, O = di Posta Ordinaria
1389        																					-- GiorniUltimoCambioPwdDa: estremo inferiore dell'intervallo di ricerca sul n.ro di giorni da cui decorre l'ultimo cambio pwd
1390        																					-- GiorniUltimoCambioPwdA: estremo superiore dell'intervallo di ricerca sul n.ro di giorni da cui decorre l'ultimo cambio pwd
1391        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1392        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne da 1 a 4). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1393        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1394        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1395        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1396        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.			
1397        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1398        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1399        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)  
1400        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro				
1401        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1402        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1403        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1404        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1405        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1406        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1407        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema. 
1408        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
1409        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
1410        																					-- La colonna 1 sarà presente comunque.
1411        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
1412        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
1413        																					-- Ogni voce della rubrica trovata è un tag Riga che può contenere le seguenti colonne: 
1414        																					-- 1: ID casella(PK interna, ID_ACCOUNT)
1415        																					-- 2: Indirizzo della casella
1416        																					-- 3: ID_SP_AOO dell'Ente/AOO cui è legata la casella
1417        																					-- 4: Denominazione dell'Ente/AOO cui è legata la casella
1418        																					-- 5: Tipo di account: C = certificata, O = Ordinaria, N = non noto se certificata o ordinaria
1419        																					-- 6: Username della casella
1420        																					-- 7: Password della casella (cifrata, se prevista la cifratura)
1421        																					-- 8: (valori 1/0) Se 1 indica che è una casella attiva in ricezione (almeno per un fruitore/utente) ed è ACTIVE lo scarico
1422        																					-- 9: (valori 1/0) Se 1 indica che è una casella attiva in invio (almeno per un fruitore/utente)
1423        																					-- 10: Denominazioni delle specifiche UO cui è associata la casella (se più di una separate da ;)
1424        																					-- 11: Data e ora di ultimo aggiornamento della password (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1425        																					-- 12: Utente di ultimo aggiornamento della password(decodifica)
1426        																					-- 13: N.ro di giorni da cui è in uso la password attuale
1427        																					-- 14: Id. del nodo su cui scarica la casella
1428        																					-- 17: Intervallo di scarico (in millisecondi)
1429        																					-- 18: N.ro max di e-mail scaricate insieme ad ogni connessione IMAP
1430        																					-- 19: N.ro massimo di tentativi di effettuare un'operazione del flusso di scarico
1431        																					-- 20: N.ro max di destinatari in una singola mail
1432        																					-- 21: (valori 1/0) Se 1 indica che è attiva la cancellazione delle e-mail dal file-system di scarico una volta che sono state archiviate in Auriga, altrimenti no (quindi ne restano 2 copie su file-system una volta archiviate)
1433        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1434        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1435        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore o warning (se)
1436        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1437        	
1438        	
1439        	
1440        	/******* funzione per ottenere i parametri di una casella e della mailbox - ovvero processo di scarico - associata (se ce n'è una sola o una sola active) 	*****/
1441        	/******* che sono modificabili da GUI. Il valore del parametro della password arriva cifrato se è prevista la cifratura										*****/
1442        	function GetParametriCasella(
1443        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1444        																					-- (obblig). Codice identificativo del token di connessione
1445        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1446        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1447        		XMLParametriOut				OUT		NOCOPY CLOB,							-- Lista dei parametri visibili e modificabili da GUI (conforme a schema ListaStd.xsd) + quelli non modificabili
1448        																					-- Quelli visibili e modificabili da GUI sono quelli con colonna 7 = 1
1449        																					-- Per quelli con colonna 7 = 0 sono valorizzate solo le colonne 1 e 2
1450        																					-- Ogni parametro è un tag Riga formato dalle colonne:
1451        																					-- 1: CONFIG_KEY del parametro
1452        																					-- 2: Valore del parametro
1453        																					-- 3: Significato del parametro
1454        																					-- 4: Tipo di parametro; valori possibili:
1455        																					--	string (testo libero)
1456        																					-- 	int (n° intero)
1457        																					--	enum (lista di scelta)
1458        																					--	password (campo stringa con asterischi al posto dei caratteri)
1459        																					--  path (percorso di rete)
1460        																					-- 5: (valorizzato se tipo = enum) Valori possibili per il parametro separati da |*|
1461        																					-- 6: (valori 1/0) Se 1 indica che è obbligatorio valorizzare il parametro, se 0 no
1462        																					-- 7: (valori 1/0) Se 1 il parametro si vede e modifica da GUI, altrimenti no
1463        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1464        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1465        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1466        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1467        
1468        	/******* funzione per settare i parametri di una casella e della mailbox - ovvero processo di scarico - associata (se ce n'è una sola o una sola active) 	*****/
1469        	/******* Il valore del parametro della password va passato cifrato se è prevista la cifratura																*****/
1470        	function SetParametriCasella(
1471        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1472        																					-- (obblig). Codice identificativo del token di connessione
1473        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1474        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1475        		XMLParametriIn				IN		CLOB,									-- Lista dei parametri da aggiornare (conforme a schema ListaStd.xsd)
1476        																					-- Ogni parametro è un tag Riga formato dalle colonne:
1477        																					-- 1: (obblig.)CONFIG_KEY del parametro
1478        																					-- 2: Valore del parametro
1479        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1480        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1481        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1482        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1483        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1484        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1485        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1486        	
1487        	
1488        	/******* funzione per ottenere i soggetti - AOO, UO, utenti - che hanno un qualche profilo vs una data casella 	*****/
1489        	function GetSoggConProfiliVsCasella(
1490        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1491        																					-- (obblig). Codice identificativo del token di connessione
1492        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1493        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1494        		IdFruitoreEnteAOOOut		OUT		VARCHAR2,								-- ID_FRUITORE_CASELLA dell'Ente o AOO cui è associata la casella
1495        		IdEnteAOOOut				OUT		PLS_INTEGER,							-- ID_SP_AOO dell'Ente o AOO cui è associata la casella
1496        		DesEnteAOOOut				OUT		VARCHAR2,								-- Denominazione dell'Ente o AOO cui è associata la casella
1497        		XMLFruitoriProfOut			OUT		NOCOPY CLOB,							-- Lista dei fruitori (ente, AOO, UO) che hanno un profilo vs la casella (conforme a schema ListaStd.xsd)
1498        																					-- Ogni fruitore è un tag Riga formato dalle colonne:
1499        																					-- 1: Id. del fruitore (ID_FRUITORE_CASELLA)
1500        																					-- 2: Tipo di fruitore: ENTE, AOO, UO
1501        																					-- 3: ID_SP_AOO se il fruitore è un ENTE o AOO e ID_UO se è un'unità organizzativa
1502        																					-- 4: (valori 1/0) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1503        																					-- 5: (valori 1/0 Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1504        																					-- 6: (valori 1/0) Flag di profilo "amministratore"
1505        																					-- 7: (valori 1/0) Flag di inclusione dei fruitori gerarchicamente subordinati
1506        																					-- 8: Codice del fruitore
1507        																					-- 9: Denominazione del fruitore
1508        		XMLUtentiProfOut			OUT		NOCOPY CLOB,							-- Lista dei utenti - necessariamente legati ai fruitori legati alla casella - che hanno un profilo specifico vs la casella (conforme a schema ListaStd.xsd)
1509        																					-- Ogni utente è un tag Riga formato dalle colonne:
1510        																					-- 1: Id. del utente in T_UTENTI_MOD_PEC (ID_FRUITORE_CASELLA)
1511        																					-- 2: Id. dell'utente in DMT_USERS
1512        																					-- 3: Username dell'utente
1513        																					-- 4: (valori 1/0) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1514        																					-- 5: (valori 1/0) Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1515        																					-- 6: (valori 1/0) Flag di profilo "amministratore"
1516        																					-- 7: Cognome e nome
1517        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1518        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1519        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1520        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1521         
1522        	/******* funzione per definire/modificare AOO/UO/Utenti che hanno un qualche profilo vs una data casella	*****/
1523        	function SetSoggConProfiliVsCasella(
1524        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1525        																					-- (obblig). Codice identificativo del token di connessione
1526        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1527        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1528        		IdFruitoreEnteAOOIn			IN		VARCHAR2 DEFAULT NULL,					-- ID_FRUITORE_CASELLA dell'Ente o AOO cui è associata la casella
1529        		IdEnteAOOIn					IN		PLS_INTEGER DEFAULT NULL,				-- ID_SP_AOO dell'Ente o AOO cui è associata la casella
1530        		DesEnteAOOIn				IN		VARCHAR2 DEFAULT NULL,					-- Denominazione dell'Ente o AOO cui è associata la casella
1531        		XMLFruitoriProfIn			IN		CLOB,									-- Lista dei fruitori (ente, AOO, UO) che hanno un profilo vs la casella (conforme a schema ListaStd.xsd)
1532        																					-- Ogni fruitore è un tag Riga formato dalle colonne:
1533        																					-- 1: Id. del fruitore (ID_FRUITORE_CASELLA)
1534        																					-- 2: Tipo di fruitore: ENTE (Ente o AOO), UO
1535        																					-- 3: ID_SP_AOO se il fruitore è un ENTE o AOO e ID_UO se è un'unità organizzativa
1536        																					-- 4: (valori 1/0/NULL) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1537        																					-- 5: (valori 1/0/NULL) Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1538        																					-- 6: (valori 1/0/NULL) Flag di profilo "amministratore"
1539        																					-- 7: (valori 1/0/NULL) Flag di inclusione dei fruitori gerarchicamente subordinati
1540        																					-- 8: Codice del fruitore
1541        																					-- 9: Denominazione del fruitore
1542        		XMLUtentiProfIn				IN		CLOB,									-- Lista dei utenti - necessariamente legati ai fruitori legati alla casella - che hanno un profilo specifico vs la casella (conforme a schema ListaStd.xsd)
1543        																					-- Ogni utente è un tag Riga formato dalle colonne:
1544        																					-- 1: Id. del utente in T_UTENTI_MOD_PEC (ID_FRUITORE_CASELLA)
1545        																					-- 2: Id. dell'utente in DMT_USERS
1546        																					-- 3: Username dell'utente
1547        																					-- 4: (valori 1/0/NULL) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1548        																					-- 5: (valori 1/0/NULL) Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1549        																					-- 6: (valori 1/0/NULL) Flag di profilo "amministratore"
1550        																					-- 7: Cognome e nome
1551        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1552        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1553        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1554        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1555        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1556        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1557        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1558        	
1559        	/*********** funzione per creare una casella e-mail come copia di un'altra *********************/
1560        	function CreaCasellaComeCopia(
1561        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1562        																					-- (obblig). Codice identificativo del token di connessione
1563        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1564        		IdCasellaDaCopiareIn   		IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella da cui copiare i dati
1565        		IdFruitoreEnteAOOIn			IN		VARCHAR2 DEFAULT NULL,					-- ID_FRUITORE_CASELLA dell'Ente o AOO cui associare la nuova casella
1566        		IdEnteAOOIn					IN		PLS_INTEGER DEFAULT NULL,				-- ID_SP_AOO dell'Ente o AOO cui associare la nuova casella
1567        		DesEnteAOOIn				IN		VARCHAR2 DEFAULT NULL,					-- Denominazione dell'Ente o AOO cui associare la nuova casella
1568        		AccountCasellaIn			IN		VARCHAR2,								-- (obblig.) Indirizzo della nuova casella
1569        		XMLParametriIn				IN		CLOB,									-- Lista dei parametri da aggiornare rispetto a quelli della casella copiata (conforme a schema ListaStd.xsd)
1570        																					-- Ogni parametro è un tag Riga formato dalle colonne:
1571        																					-- 1: (obblig.)CONFIG_KEY del parametro
1572        																					-- 2: Valore del parametro
1573        		FlgAttivaScaricoIn			IN		PLS_INTEGER DEFAULT 1,					-- (valori 1/0)Se 1 indica che deve essere attivato lo scarico dalla nuova casella se era già configurato sulla casella copiata, se 0 o NULL lo scarico viene settato "inattivo"
1574        		IdCasellaNewOut   			OUT    	VARCHAR2,				 				-- Identificativo della casella creata
1575        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1576        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1577        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1578        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1579        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1580        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1581        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1582        
1583        	/************ funzione per ricercare le richieste di invio e-mail in tabella T_RICH_EMAIL_TO_SEND ************/
1584        	function TrovaRichInvioEmail(
1585        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1586        																					-- (obblig). Codice identificativo del token di connessione
1587        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1588        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd). 
1589        																					-- Ogni filtro è un tag "Variabile" dell'XML
1590        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1591        																					-- I nomi dei filtri possibili sono:
1592        																					-- CodApplRichiedenti: codice della/e applicazioni che hanno sottomesso la richiesta (se più di uno separati da ; o ,)
1593        																					-- IdProvRichiesta: id. della richiesta datole dal richiedente (ricerca case-insensitive in like senza forzare % finale)
1594        																					-- XMLRichiesta: parola/e o inizio di parole contenute nell'xml della richiesta (ricerca full-text)
1595        																					-- StatiRichesta: codice del/degli stati delle richieste da ricercare (se più di uno separati da ; o ,)
1596        																					-- Lista degli stati ammessi e relativa codifica (tra parentesi):
1597        																					-- da elaborare (TO_PROCESS)
1598        																					-- in elaborazione (PROCESSING)
1599        																					-- elaborata senza errori (COMPLETED)
1600        																					-- da non elaborare ancora (IN_WAIT)
1601        																					-- eliminata (DELETED)
1602        																					-- in errore ma da riprocessare (ERROR)
1603        																					-- in errore e non più da processare (LOCKED)
1604        																					-- StatiEmail: serve a restringere la ricerca alle richieste le cui e-mail hanno uno degli stati di invio e/o accettazione e/o consegna indicati. Valori possibili:
1605        																					--			I:OK 	inviata
1606        																					--			I:KO	invio fallito
1607        																					--			I:IP	invio in corso
1608        																					--			I:W		avvertimenti in invio
1609        																					--			A:OK	accettata
1610        																					--			A:KO	non accettata
1611        																					--			A:IP	accettazione in corso
1612        																					--			A:W		presunta mancata accettazione
1613        																					--			A:ND	accettazione non valorizzata
1614        																					--			C:OK	consegnata
1615        																					--			C:KO	consegna fallita
1616        																					--			C:IP	consegna in corso
1617        																					--			C:W		presunta mancata consegna
1618        																					--			C:ND	consegna non valorizzata
1619        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
1620        																					-- TsRichiestaDa: estremo inferiore della data di acquisizione della richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1621        																					-- TsRichiestaA: : estremo superiore della data di acquisizione della richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1622        																					-- TsInvioEmailDa: estremo inferiore della data di invio della mail richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1623        																					-- TsInvioEmailA: : estremo superiore della data di invio della mail richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1624        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1625        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare per tutte le colonne tranne 4 e 9). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1626        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1627        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1628        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1629        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.			
1630        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1631        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1632        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)  
1633        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro				
1634        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1635        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1636        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1637        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1638        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1639        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1640        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema. 
1641        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
1642        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
1643        																					-- La colonna 1 sarà presente comunque.
1644        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
1645        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
1646        																					-- Ogni voce della rubrica trovata è un tag Riga che può contenere le seguenti colonne: 
1647        																					-- 1: ID (PK interna)
1648        																					-- 2: Id. originale richiesta assegnatole dal richiedente
1649        																					-- 3: Codice applicazione richiedente
1650        																					-- 4: Descrizione applicazione richiedente
1651        																					-- 5: Tipo doc. da inviare con la mail (codice)
1652        																					-- 6: Decodifica del tipo doc. da inviare con la mail
1653        																					-- 7: XML richiesta
1654        																					-- 8: Stato della richiesta
1655        																					-- 9: Messaggio di errore ricevuto durante l'elaborazione della richiesta
1656        																					-- 10: Data e ora di sottomissione richiesta (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
1657        																					-- 11: Data e ora invio o ultimo tentativo invio della e-mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
1658        																					-- 12: Id. della mail associata (ID_EMAIL)
1659        																					-- 13: Stato di invio della mail
1660        																					-- 14: Stato di accettazione della mail
1661        																					-- 15: Stato di consegna della mail
1662        																					-- 16: Data e ora di ultimo aggiornamento (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1663        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1664        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1665        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore
1666        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1667        
1668        	/**** funzione per creare/aggiornare una mail in bozza e per aggiornare gli item di lavorazione - note, tag, file - associati a qualsiasi mail *****/
1669        	function IUEmail(
1670        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1671        																					-- (obblig). Codice identificativo del token di connessione
1672        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1673        		DatiEmailIn					IN 		CLOB,									-- XML contenente nomi e valori dei dati della mail(conforme allo schema SezioneCache.xsd). 
1674        																					-- Ogni tipo di dato è un tag "Variabile" dell'XML
1675        																					-- I tipi di dati che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1676        																					-- I tipi di dato possibili sono:
1677        																					-- Dimensione       Dimensione in bytes della mail         
1678        																					-- URI              URI (con notazione di StorageUtil) a cui reperire l'eml (busta di trasporto intera in caso di e-mail ricevuta)
1679        																					-- FlgEmailFirmata	valori 1/0 Se 1 indica che la mail è firmata (l'intera busta SMIME)
1680        																					-- AccountMittente	Indirizzo mittente 
1681        																					-- Subject			Subject/oggetto della mail
1682        																					-- Body				Corpo della mail (quello in formato text/plain)
1683        																					-- FlgRichConfermaLettura valori 1/0 Se 1 indica che è stata richiesta la conferma di lettura
1684        																					-- FlgAggSoloDestinatari Se 1 significa che la funzione deve SOLO aggiornare i destinatari
1685        																					-- @Destinatari		Lista dei destinatari principali della mail. 
1686        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
1687        																					--							1: indirizzo del destinatario
1688        																					--							2: Tipo di destinatario: P = Principale, CC = In conoscenza, CCN = In conoscenza nascosta
1689        																					-- EmailPredecessore.TipoRelazione Indica il tipo di relazione con la mail predecessore: I = Inoltro, R = Risposta
1690        																					-- EmailPredecessore.IdEmail		ID_EMAIL della mail predecessore da cui quella corrente ha avuto luogo
1691        																					-- @IdEmailInoltrate	Lista con gli id. delle e-mail di cui la bozza costituisce un inoltro massivo. Ogni riga ha una sola colonna con l'id. email
1692        																					-- @Allegati			Allegati(file) della mail. Ogni allegato è una riga e contiene le seguenti colonne:
1693        																					--							1: Nome file
1694        																					--							2: Mimetype
1695        																					--							4: (valori 1/0) Se 1 indica se firmato digitalmente
1696        																					--							5: Dimensione in bytes
1697        																					--							6: Impronta
1698        																					--							7: Algoritmo calcolo impronta
1699        																					--							8: Encoding impronta (hex o base64)
1700        																					--							13:  (valori 1/0) Flag di firma valida
1701        																					--							14: (valori 1/0) Flag di pdf con commenti
1702        																					--							15: (valori 1/0) Flag di pdf editabile
1703        																					-- @ItemLavorazione 	Lista degli item di lavorazione - commenti, tag, file - associati alla mail
1704        																					--						E' una lista in cui ogni item è una riga e ogni riga è formata dalle seguenti colonne:
1705        																					--							1: (obblig.) Tipo di item. Valori possibili: F = File, AT = Commento e/o tag
1706        																					--							2: Nro progressivo dell'item (da lasciare vuoto se è un nuovo item)
1707        																					--							3: Commento
1708        																					--							4: Tag
1709        																					--							5: URI del file
1710        																					--							6: Nome del file
1711        																					--							7: Dimensione del file (in bytes)
1712        																					--							8: Mimetype del file
1713        																					--							9: (valori 1/0) Se 1 indica se file firmato digitalmente
1714        																					--							10: Impronta del file
1715        																					--							11: Algoritmo di calcolo dell'impronta del file
1716        																					--							12: Encoding dell'impronta del file (hex o base64)	
1717        																					--							18: (valori 1/0/NULL) Flag di item non modificabile/cancellabile perchè "locked" dall'utente di lavoro (viene considerato solo se è abilitato alla modifica dell'item)
1718        		IdEmailIO   				IN OUT  VARCHAR2,				 				-- Identificativo della mail (ID_EMAIL)
1719        																					-- Se in input è vuoto si intende che la mail è da creare in bozza, altrimenti indica la mail da aggiornare
1720        																					-- In output è sempre valorizzato
1721        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1722        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1723        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1724        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1725        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1726        		ErrMsgOut					OUT 	VARCHAR2,								-- Messaggio d'errore
1727        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1728        																					-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1729        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1730        
1731        	----- serve ad apporre tag ed eventuali note su una o più mail (sia ricevute che inviate)
1732        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1733        	----- su ogni mail elaborata viene subito fatta la commit se richiesta 
1734        	function TagEmail(
1735        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1736        																				-- (obblig). Codice identificativo del token di connessione
1737        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1738        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL - delle e-mail da taggare
1739        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL
1740        		XMLTagIn					IN 		CLOB,								-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene i tag da apporre e le eventuali note a corredo
1741        																				-- Ogni riga contiene 3 colonne: 1) tag da apporre, 2) note, 3) flag di modifica/cancellazione inibita (valori 1/0)
1742        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1743        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1744        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1745        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1746        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1747        																				-- 1: ID_EMAIL
1748        																				-- 2: PROGR_MSG
1749        																				-- 3: Dati principali della mail (da mostrare come label)
1750        																				-- 4: Esito operazione: OK, KO
1751        																				-- 5: Messaggio di errore
1752        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1753        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1754        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1755        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1756        
1757        	/**** funzione per collegare una mail ad una registrazione a protocollo generale o in altro registro 									*****/
1758        	/**** collega alla registrazione tutti gli allegati della mail a meno che non si specifichino le impronte di alcuni allegati specifici	*****/
1759        	function CollegaRegToEmail(
1760        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1761        																					-- (obblig). Codice identificativo del token di connessione
1762        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1763        		IdEmailIn  					IN		VARCHAR2,				 				-- (obblig.) Identificativo della mail (ID_EMAIL) da associare alla registrazione
1764        		IdUDIn						IN		INTEGER DEFAULT NULL,					-- Id. (ID_UD) assegnato alla registrazione da associare
1765        		CategoriaRegIn				IN		VARCHAR2 DEFAULT NULL,					-- Categoria di registrazione: PG = Protocollo Generale, R = Repertorio, PP = Protocollo particolare
1766        		SiglaRegistroIn				IN		VARCHAR2 DEFAULT NULL,					-- Sigla del registro (da valorizzare solo se la categoria è R o PP)		
1767        		AnnoRegIn					IN		INTEGER DEFAULT NULL,					-- Anno di registrazione
1768        		NumeroRegIn					IN		INTEGER DEFAULT NULL,					-- N.ro di registrazione	
1769        		ImpronteAllegatiIn			IN		CLOB DEFAULT NULL,						-- Lista XML di tipo ListaStd con una sola colonna contenente le impronte degli allegati messi nella registrazione
1770        																					-- Se nulla è specificato vengono associati alla registrazione tutti gli allegati della mail ovvero tutti quelli non già inseriti in altre registrazioni
1771        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1772        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1773        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1774        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1775        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1776        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1777        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1778        
1779        	---- funzione per spostare una mail in archivio storico (tabelle che iniziano con TH_) o viceversa ripristinarla dall'achivio storico in quello corrente
1780        	function SpostaMailVsDaStorico(
1781        		IdEmailIn					IN		VARCHAR2,								-- (obblig.) Id. della mail da spostare
1782        		TpOperazioneIn				IN		VARCHAR2 DEFAULT 'S',					-- (obblig.) Indica l'operazione richiesta. Valori:
1783        																					-- S = Spostamento in archivio storico
1784        																					-- R = ripristino in archivio corrente (per mail già spostata in storico)
1785        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1786        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1787        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1788        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1789        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1790        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1791        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1792        
1793        	----------funzione per ricavare info su mail e ricevute legate ad una certa mail o registrazione 
1794        	----------usata da WS di RER
1795        	function GetRicevute(
1796        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1797        																					-- (obblig). Codice identificativo del token di connessione
1798        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1799        		IdEmailIn  					IN		VARCHAR2 DEFAULT NULL,			 		-- Identificativo della mail (ID_EMAIL) inviata di cui recuperare le ricevute
1800        		IdUDIn						IN		INTEGER DEFAULT NULL,					-- Id. (ID_UD) assegnato alla registrazione delle cui e-mail di trasmissione recuperare le ricevute
1801        		CategoriaRegIn				IN		VARCHAR2 DEFAULT NULL,					-- Categoria di registrazione della registrazione delle cui e-mail di trasmissione recuperare le ricevute: PG = Protocollo Generale, R = Repertorio, PP = Protocollo particolare
1802        		SiglaRegistroIn				IN		VARCHAR2 DEFAULT NULL,					-- Sigla del registro (da valorizzare solo se la categoria è R o PP) della registrazione delle cui e-mail di trasmissione recuperare le ricevute	
1803        		AnnoRegIn					IN		INTEGER DEFAULT NULL,					-- Anno della registrazione delle cui e-mail di trasmissione recuperare le ricevute
1804        		NumeroRegIn					IN		INTEGER DEFAULT NULL,					-- N.ro della registrazione delle cui e-mail di trasmissione recuperare le ricevute
1805        		IdSoggRubricaIn				IN		INTEGER DEFAULT NULL,					-- Id. del soggetto di rubrica al cui indirizzo mail sono state inviate la/le mail di cui recuperare le ricevute		
1806        		IndirizzoEmailDestIn		IN		VARCHAR2 DEFAULT NULL,					-- Indirizzo mail destinatario di cui recuperare le ricevute 
1807        		ListaXmlOut					OUT		NOCOPY CLOB,							-- Lista con i dati delle mail inviate e relative ricevute
1808        																					-- Ogni tag Riga contiene le seguenti colonne:
1809        																					-- 1: Flag I/R che indica che rappresenta il record: I = email inviata, R = ricevuta
1810        																					-- 2: Id. email inviata
1811        																					-- 3: Indirizzo mittente mail inviata
1812        																					-- 4: Data e ora invio e-mail inviata (nel formato FMT_STD_TIMESTAMP)
1813        																					-- 5: URI email inviata (nella notazione StorageUtil)
1814        																					-- 6: Id. email della ricevuta
1815        																					-- 7: Tipo di ricevuta; valori possobili:
1816        																					--		PEC_RIC_ACC = ricevuta PEC di accettazione
1817        																					--		PEC_RIC_NO_ACC = ricevuta PEC di mancata accettazione
1818        																					--		PEC_RIC_PREAS_C = ricevuta PEC di presa in carico da parte del provider ricevente
1819        																					--		PEC_RIC_CONS = ricevuta  PEC di avvenuta consegna
1820        																					--		PEC_RIC_PREAVV_NO_CONS = preavviso di mancata consegna
1821        																					--		PEC_RIC_NO_CONS = ricevuta PEC di mancata consegna
1822        																					--		DELIVERY_STATUS_NOT = notifiche di trasporto dei mail server/provider
1823        																					--		PEO_RIC_CONF = Conferma di lettura (posta ordinaria)
1824        																					-- 8: Data e ora della ricevuta (nel formato FMT_STD_TIMESTAMP)
1825        																					-- 9: Indirizzo mittente della ricevuta
1826        																					-- 10: URI della ricevuta (nella notazione StorageUtil)
1827        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1828        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1829        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1830        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1831        
1832        	function TestAbilUtenteVsCasella(
1833        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1834        																					-- (obblig). Codice identificativo del token di connessione
1835        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1836        		IdCasellaIn					IN		VARCHAR2,								-- Id. della casella da testare
1837        		TipoAbilIn					IN		VARCHAR2)								-- Tipo di abilitazione. Valori ammessi: INVIO, INVIO_NUOVO_MSG, SMISTAMENTO
1838        		return PLS_INTEGER;															--  restituisce 1 in caso di abilitazione presente, altrimenti 0
1839        
1840        	----effettua la registrazione automatica delle mail, in base alle regole configurate, cercando le mail ricevute dalla data indicata
1841        	--- considera solo le mail aperte e non registrate già
1842        	procedure RegAutomaticaEmail(
1843        		TsInvioDal	DATE	DEFAULT NULL
1844        		);
1845        		
1846        	-------------funzione per verificare se una mail in scarico deve essere registrata automaticamente: se retituisce FlgDaRegistrareOut = 1  gli attachment vanno storati in archivio documenti
1847        	function CtrlRegAutoMailArrivo(
1848        		IdMailboxIn				IN 		VARCHAR2,				-- IdMailbox del processo di scarico
1849        		MessageIdIn				IN		VARCHAR2,				-- Message-ID della mail
1850        		DatiMailIn				IN		CLOB,					-- XML SezioneCache con i dati della mail. Contiene le variabili:
1851        																-- AccountMittente
1852        																-- @DestinatariPrincipali variabile lista con 1 colonna con indirizzo di destinatario principale
1853        																-- @DestinatariCC	variabile lista con 1 colonna con indirizzo di destinatario in cc
1854        																-- Subject Oggetto della mail
1855        																-- Body testo della mail
1856        																-- @Attachment	variabile lista con 3 colonne 
1857        																	-- colonna 1) nome del file allegato
1858        																	-- colonna 2) QRCode letti nell'allegato (se più di uno separati da |*|)
1859        																	-- colonna 3) Datamatrix letti nell'allegato (se più di uno separati da |*|)
1860        		AllegatoInteropXMLIn	IN		CLOB,					-- Allegato interoperabile quale Segnatura.xml
1861        		FlgDaRegistrareOut		OUT		PLS_INTEGER,			-- Se 1 la mail verrà protocollata/registrata in automatico, se 0 no
1862        		ErrContextOut			OUT		VARCHAR2,				-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1863        		ErrCodeOut				OUT		PLS_INTEGER,			-- N.ro errore di uscita
1864        		ErrMsgOut				OUT 	VARCHAR2				-- Messaggio d'errore
1865        		) return PLS_INTEGER;									-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1866        
1867        	---- funzione di ricerca sulle regole di registrazione automatica delle mail in entrata
1868        	function TrovaRegoleRegAuto(
1869        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1870        																					-- (obblig). Codice identificativo del token di connessione
1871        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1872        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd). 
1873        																					-- Ogni filtro è un tag "Variabile" dell'XML
1874        																					-- I nomi dei filtri possibili sono:
1875        																					-- NomeRegola : stringa contenuta nel nome (ricerca case-insensitive in like senza forzare %)
1876        																					-- DesRegola : stringa contenuta nella descrizione(ricerca case-insensitive in like senza forzare %)
1877        																					-- Stati : lista degli stati delle regola da ricercare. Se più di uno separati da ; o ,
1878        																					-- IdUtenteCreatore : id. dell'utente creatore
1879        																					-- DataCreazioneDal : estremo inferiore dell'intervallo di ricerca sulla data di creazione (nel formato del parametro FMT_STD_DATA)
1880        																					-- DataCreazioneAl : estremo superiore dell'intervallo di ricerca sulla data di creazione (nel formato del parametro FMT_STD_DATA)
1881        																					-- IdUtenteUltimoAgg : id. dell'utente di ultimo aggiornamento
1882        																					-- DataUltimoAggDal : estremo inferiore dell'intervallo di ricerca sulla data di ultimo aggiornamento (nel formato del parametro FMT_STD_DATA)
1883        																					-- DataUltimoAggAl : estremo superiore dell'intervallo di ricerca sulla data di di ultimo aggiornamento (nel formato del parametro FMT_STD_DATA)
1884        																					-- StringaInFiltro : stringa contenuta nel filtro della regola (ricerca case-insensitive in like senza forzare %)
1885        																					-- StringaInDatiReg: stringa contenuta nei dati di registrazione della regola (ricerca case-insensitive in like senza forzare %)
1886        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1887        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne: da 1 a 10, da 71 a 76 + 21, 22, 23, 36, 40, 87). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1888        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1889        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1890        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1891        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.			
1892        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1893        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1894        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)  
1895        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro				
1896        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1897        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1898        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1899        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1900        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1901        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1902        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema. 
1903        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
1904        																					-- Ogni e-mail trovata è un tag Riga che può contenere le seguenti colonne: 
1905        																					-- 1: Id. regola (PK)
1906        																					-- 2: Nome regola
1907        																					-- 3: Descrizione regola
1908        																					-- 4: Stato regola
1909        																					-- 5: Data e ora creazione regola (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1910        																					-- 6: Utente che ha creato la regola (decodifica)
1911        																					-- 7: Data e ora ultimo aggiornamento della regola (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1912        																					-- 8: Utente di ultimo aggiornamento della regola (decodifica)
1913        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1914        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1915        		ErrMsgOut					OUT 	VARCHAR2)								-- Messaggio d'errore
1916        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1917        
1918        	---- funzione di creazione/modifica regola di registrazione automatica e-mail in entrata
1919        	function IURegolaRegAuto(
1920        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1921        																					-- (obblig). Codice identificativo del token di connessione
1922        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1923        		IdRegolaIO					IN OUT  DMT_REGOLE_PROT_AUTO_MAIL.ID_REGOLA%type,
1924        																					-- Id. della regola. Se in input non è valorizzata si tratta di creazione, altrimenti di modifica
1925        																					-- In output restituisce sempre l'id. della regola creata/modificata
1926        		NomeRegolaIn				IN		DMT_REGOLE_PROT_AUTO_MAIL.NOME_REGOLA%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1927        																					-- Nome della regola	
1928        		DesRegolaIn					IN		DMT_REGOLE_PROT_AUTO_MAIL.DES_REGOLA%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1929        																					-- Descrizione di dettaglio della regola	
1930        		XMLFiltroIn					IN		CLOB DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1931        																					-- XML con tracciato SezioneCache con i dati con cui si filtrano le mail cui si applica la regola
1932        																					-- Contiene le variabili:
1933        																					-- accountRicezione 	account della/e casella/e di ricezione. Se più di una sono separate con ; o , 
1934        																					-- accountMittente		account mittente/i. Se più di uno sono separati con ; o , 
1935        																					-- @OggettoEmailMatchList Lista con le stringhe contenute nell'oggetto della mail (ricerca case-insensitive in like)
1936        																					--						Ogni riga è fatta da 1 sola colonna che può contenere anche più stringhe che devono essere tutte presenti nell'oggetto (condizioni in AND): le stringhe sono separate da |*|
1937        																					-- Deve essere presente nell'oggetto almeno l'n-upla di stringhe di una riga (ovvero le condizioni delle varie righe sono in OR)
1938        																					-- @BodyEmailMatchList Lista con le stringhe contenute nel corpo della mail (ricerca case-insensitive in like)
1939        																					--						Ogni riga è fatta da 1 sola colonna che può contenere anche più stringhe che devono essere tutte presenti nel corpo (condizioni in AND): le stringhe sono separate da |*|
1940        																					-- Deve essere presente nel corpo almeno l'n-upla di stringhe di una riga (ovvero le condizioni delle varie righe sono in OR)
1941        																					-- @Destinatari			lista degli indirizzi destinatari. Fatta da 2 colonne:
1942        																					--						colonna 1: indirizzo/i. Può contenere più indirizzi separati da |*|
1943        																					--						colonna 2: p = principale, cc = in conoscenza, NULL = di qualsiasi tipo
1944        																					-- Deve essere presente almeno il set di destinatari indicati in una riga (per tipo se indicato p o cc)
1945        																					-- tipoMail				valori: interoperabile, mittentePEC, mittentePEO
1946        																					-- tipoAccounrRicezione	valori: PEC; PEO, non valorizzato
1947        																					-- @DatiSegnatura		Ogni riga è fatta di 3 colonne, di cui può esserne valorizzata anche solo 1
1948        																					--						colonna 1: Codice Amministrazione
1949        																					--						colonna 2: Codice AOO
1950        																					--						colonna 3: Sigla registro
1951        																					-- Deve essere presente nella Segnatura.xml almeno il set di dati indicati in una riga (ovvero le condizioni delle varie righe sono in OR)
1952        		XMLDatiRegIn				IN		CLOB DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1953        																					-- XML con tracciato SezioneCache con i dati per registrare le mail cui si applica la regola
1954        																					-- Contiene le variabili:
1955        																					-- IdUORegistrazione	ID_UO della UO di registrazione
1956        																					-- IdUserRegistrazione	ID. dell'utente di registrazione
1957        																					-- CodCategoriaReg		Categoria di registrazione. Valori: PG = Protocollo Gen., R = Repertorio, PP = Protocollo Particolare
1958        																					--						Se non valorizzata o non presente si intende come fosse PG
1959        																					-- SiglaRegistro		Sigla del registro di numerazione se CodCategoriaReg = R o PP
1960        																					-- IdMittenteInRubrica	ID_SOGG_RUBRICA del mittente della registrazione (presente in rubrica)
1961        																					-- DenomMittente		Denominazione del mittente della registrazione
1962        																					-- @Destinatari			lista con i destinatari della registrazione
1963        																					--						Ogni riga contiene le colone:
1964        																					--						colonna 1) valori UO o SV per indicare se il destinatario è una struttura o una postazione utente
1965        																					--						colonna 2) ID_UO o ID_SCRIVANIA
1966        																					--						colonna 3) valori ASS o CC per indicare se il destinatario è anche assegnatario per competenza (=ASS) o destinatario di copia per conoscenza (=CC)
1967        																					-- @ClassifFolderTit	Classificazione / fascicolazione in fascicoli classificati
1968        																					--						Ogni riga può contenere le seguenti colonne:
1969        																					--						colonna 1) (obblig.) Flag E = fascicolo esistente, N = da creare ex-novo, EN = da creare ex-novo se non esiste già fascicolo con quel nome, classifica e anno apertura
1970        																					-- 						colonna 2) Id. folder (se fascicolo esistente)
1971        																					--						colonna 3) Id. classifica 
1972        																					--						colonna 4) Nome folder
1973        																					--						colonna 5) Anno apertura
1974        																					-- @FolderCustom		Collocazione in cartelle virtuali
1975        																					--						Ogni riga può contenere le seguenti colonne:
1976        																					--						colonna 1) (obblig.) Flag E = cartella esistente, N = da creare ex-novo, EN = da creare ex-novo se non esiste già cartella con quel path e nome
1977        																					--						colonna 2) Id. folder (se cartella esistente)
1978        																					--						colonna 3) Path della cartella
1979        																					-- Riservatezza			valori 1/NULL. Se 1 viene apposta la riservatezza sul documento registrato
1980        																					-- OpzTimbratura		Indica su che file deve essere apposto il timbro con la segnatura di protocollo
1981        																					--						Valori possibili: solo_primario, tutti. Se non valorizzato significa se nessun file.
1982        																					-- InvioConfermaReg		valori 1/NULL. Se 1 va inviata la notifica mail con la conferma di registrazione
1983        																					--							Se la mail registrata è interoperabile viene inviata la conferma interoperabile
1984        																					-- DestinatarioConfermaReg	Indirizzo a cui inviare la notifica mail con la conferma di registrazione
1985        																					-- OggettoConfermaReg		Oggetto della mail con la conferma di registrazione
1986        																					-- TestoConfermaReg			Testo/corpo della mail con la conferma di registrazione
1987        		DtAttivazioneIn				IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
1988        																					-- Data di attivazione della regola. Nel formato del parametro FMT_STD_DATA
1989        		DtCessazioneIn				IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
1990        																					-- Data di cessazone della regola. Nel formato del parametro FMT_STD_DATA
1991        		DtInizioSospensioneIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
1992        																					-- Data di inizio sospensione della regola. Nel formato del parametro FMT_STD_DATA
1993        		DtFineSospensioneIn			IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
1994        																					-- Data di fine sospensione della regola. Nel formato del parametro FMT_STD_DATA
1995        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1996        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1997        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1998        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1999        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
2000        		ErrMsgOut					OUT 	VARCHAR2)								-- Messaggio d'errore
2001        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
2002        
2003        	---- funzione di cancellazione regola di registrazione automatica e-mail in entrata
2004        	---- la cancellazione è possibile solo se la regola non è mai stata utilizzata
2005        	function DRegolaRegAuto(
2006        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
2007        																					-- (obblig). Codice identificativo del token di connessione
2008        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
2009        		IdRegolaIn					IN 	 	DMT_REGOLE_PROT_AUTO_MAIL.ID_REGOLA%type,	
2010        																					-- (obblig.) Id. della regola da cancellare
2011        		MotivoIn					IN		VARCHAR2 DEFAULT NULL,					-- Motivo della cancellazione
2012        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
2013        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
2014        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
2015        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2016        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
2017        		ErrMsgOut					OUT 	VARCHAR2)								-- Messaggio d'errore
2018        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
2019        
2020        	--- funzione per recuperare i dati completi di una regola di registrazione automatica e-mail in entrata
2021        	function LoadDettRegolaRegAuto(
2022        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
2023        																					-- (obblig). Codice identificativo del token di connessione
2024        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
2025        		IdRegolaIn					IN 	 	DMT_REGOLE_PROT_AUTO_MAIL.ID_REGOLA%type,	
2026        																					-- (obblig.) Id. della regola di cui recuperare i dati
2027        		NomeRegolaOut				OUT		DMT_REGOLE_PROT_AUTO_MAIL.NOME_REGOLA%type, 
2028        																					-- Nome della regola	
2029        		DesRegolaOut				OUT		DMT_REGOLE_PROT_AUTO_MAIL.DES_REGOLA%type,
2030        																					-- Descrizione di dettaglio della regola	
2031        		XMLFiltroOut				OUT		NOCOPY CLOB,							-- XML con tracciato SezioneCache con i dati con cui si filtrano le mail cui si applica la regola
2032        																					-- Contiene le variabili:
2033        																					-- accountRicezione 	account della/e casella/e di ricezione. Se più di una sono separate con ; o , 
2034        																					-- accountMittente		account mittente/i. Se più di uno sono separati con ; o , 
2035        																					-- @OggettoEmailMatchList Lista con le stringhe contenute nell'oggetto della mail (ricerca case-insensitive in like)
2036        																					--						Ogni riga è fatta da 1 sola colonna che può contenere anche più stringhe che devono essere tutte presenti nell'oggetto (condizioni in AND): le stringhe sono separate da |*|
2037        																					-- Deve essere presente nell'oggetto almeno l'n-upla di stringhe di una riga (ovvero le condizioni delle varie righe sono in OR)
2038        																					-- @BodyEmailMatchList Lista con le stringhe contenute nel corpo della mail (ricerca case-insensitive in like)
2039        																					--						Ogni riga è fatta da 1 sola colonna che può contenere anche più stringhe che devono essere tutte presenti nel corpo (condizioni in AND): le stringhe sono separate da |*|
2040        																					-- Deve essere presente nel corpo almeno l'n-upla di stringhe di una riga (ovvero le condizioni delle varie righe sono in OR)
2041        																					-- @Destinatari			lista degli indirizzi destinatari. Fatta da 2 colonne:
2042        																					--						colonna 1: indirizzo/i. Può contenere più indirizzi separati da |*|
2043        																					--						colonna 2: p = principale, cc = in conoscenza, NULL = di qualsiasi tipo
2044        																					-- Deve essere presente almeno il set di destinatari indicati in una riga (per tipo se indicato p o cc)
2045        																					-- tipoMail				valori: interoperabile, mittentePEC, mittentePEO
2046        																					-- tipoAccounrRicezione	valori: PEC; PEO o non valorizzato
2047        																					-- @DatiSegnatura		Ogni riga è fatta di 3 colonne, di cui può esserne valorizzata anche solo 1
2048        																					--						colonna 1: Codice Amministrazione
2049        																					--						colonna 2: Codice AOO
2050        																					--						colonna 3: Sigla registro
2051        																					-- Deve essere presente nella Segnatura.xml almeno il set di dati indicati in una riga (ovvero le condizioni delle varie righe sono in OR)
2052        		XMLDatiRegOut				OUT		NOCOPY CLOB,							-- XML con tracciato SezioneCache con i dati per registrare le mail cui si applica la regola
2053        																					-- Contiene le variabili:
2054        																					-- IdUORegistrazione	ID_UO della UO di registrazione
2055        																					-- CodRapidoUORegistrazione Cod. rapido della UO di registrazione
2056        																					-- DenomUORegistrazione Denominazione della UO di registrazione
2057        																					-- IdUserRegistrazione	ID. dell'utente di registrazione
2058        																					-- DesUserRegistrazione	Cognome e nome + username dell'utente di registrazione
2059        																					-- CodCategoriaReg		Categoria di registrazione. Valori: PG = Protocollo Gen., R = Repertorio, PP = Protocollo Particolare
2060        																					-- SiglaRegistro		Sigla del registro di numerazione se CodCategoriaReg = R o PP
2061        																					-- IdMittenteInRubrica	ID_SOGG_RUBRICA del mittente della registrazione (presente in rubrica)
2062        																					-- DenomMittente		Denominazione del mittente della registrazione
2063        																					-- @Destinatari			lista con i destinatari della registrazione
2064        																					--						Ogni riga contiene le colone:
2065        																					--						colonna 1) valori UO o SV per indicare se il destinatario è una struttura o una postazione utente
2066        																					--						colonna 2) ID_UO o ID_SCRIVANIA
2067        																					--						colonna 3) valori ASS o CC per indicare se il destinatario è anche assegnatario per competenza (=ASS) o destinatario di copia per conoscenza (=CC)
2068        																					--						colonna 4) Cod. rapido UO
2069        																					--						colonna 5) Denominazione UO o descrizione postazione utente
2070        																					-- @ClassifFolderTit	Classificazione / fascicolazione in fascicoli classificati
2071        																					--						Ogni riga può contenere le seguenti colonne:
2072        																					--						colonna 1) (obblig.) Flag E = fascicolo esistente, N = da creare ex-novo, EN = da creare ex-novo se non esiste già fascicolo con quel nome, classifica e anno apertura
2073        																					-- 						colonna 2) Id. folder (se fascicolo esistente)
2074        																					--						colonna 3) Id. classifica 
2075        																					--						colonna 4) Nome folder
2076        																					--						colonna 5) Anno apertura
2077        																					--						colonna 6) N.ro progr. fascicolo
2078        																					--						colonna 7) N.ro sotto-fascicolo
2079        																					--						colonna 8) N.ro inserto
2080        																					--						colonna 9) Cod. secondario
2081        																					--						colonna 10) Indice classificazione
2082        																					--						colonna 11) Descrizione classificazione
2083        																					--						colonna 12) Capofila fascicolo: categoria reg / sigla / anno / numero
2084        																					-- @FolderCustom		Collocazione in cartelle virtuali
2085        																					--						Ogni riga può contenere le seguenti colonne:
2086        																					--						colonna 1) (obblig.) Flag E = cartella esistente, N = da creare ex-novo, EN = da creare ex-novo se non esiste già cartella con quel path e nome
2087        																					--						colonna 2) Id. folder (se cartella esistente)
2088        																					--						colonna 3) Path della cartella
2089        																					-- Riservatezza			valori 1/NULL. Se 1 viene apposta la riservatezza sul documento registrato
2090        																					-- OpzTimbratura		Indica su che file deve essere apposto il timbro con la segnatura di protocollo
2091        																					--						Valori possibili: solo_primario, tutti. Se non valorizzato significa se nessun file.
2092        																					-- InvioConfermaReg		valori 1/NULL. Se 1 va inviata la notifica mail con la conferma di registrazione
2093        																					--							Se la mail registrata è interoperabile viene inviata la conferma interoperabile
2094        																					-- DestinatarioConfermaReg	Indirizzo a cui inviare la notifica mail con la conferma di registrazione
2095        																					-- OggettoConfermaReg		Oggetto della mail con la conferma di registrazione
2096        																					-- TestoConfermaReg			Testo/corpo della mail con la conferma di registrazione
2097        		DtAttivazioneOut			OUT		VARCHAR2,								-- Data di attivazione della regola. Nel formato del parametro FMT_STD_DATA
2098        		DtCessazioneOut				OUT		VARCHAR2,								-- Data di cessazone della regola. Nel formato del parametro FMT_STD_DATA
2099        		DtInizioSospensioneOut		OUT		VARCHAR2,								-- Data di inizio sospensione della regola. Nel formato del parametro FMT_STD_DATA
2100        		DtFineSospensioneOut		OUT		VARCHAR2,								-- Data di fine sospensione della regola. Nel formato del parametro FMT_STD_DATA
2101        		StatoOut					OUT		VARCHAR2,								-- Stato della regola: attiva, disattiva, sospesa
2102        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2103        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
2104        		ErrMsgOut					OUT 	VARCHAR2)								-- Messaggio d'errore
2105        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
2106        
2107        
2108        END DMPK_INT_MGO_EMAIL;