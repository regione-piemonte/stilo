1        PACKAGE DMPK_PROCESSES AUTHID CURRENT_USER IS
2        
3        	/****************************************************		INFORMAZIONI GENERALI		*******************************************************/
4        	/************** Argomenti delle stored per il controllo della transazione:											*******/
5        	/************** FlgRollBckFullIn -> se 1 in caso di errore viene fatta la rollback completa (non a savepoint), 					*******/
6        	/************** 				altrimenti la rollback delle sole modifiche effettuate nella stored						*******/
7        	/************** 				ATTENZIONE: la rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log			*******/
8        	/************** FlgAutoCommitIn  -> se vale 1, dopo la rollback e qualunque sia l'esito (positivo o no), la stored esegue una commit finale *****/
9        	/************** Tutte le funzioni/procedure che NON hanno gli argomenti in input FlgRollBckFullIn e FlgAutoCommitIn 				*******/
10        	/************** NON ESEGUONO AL LORO INTERNO ALCUNA COMMIT nè ROLLBACK 												*******/
11        
12        	/************** Tutte le funzioni, tranne quelle da utilizzarsi nelle select, restituiscono 1 in caso di successo, altrimenti 0		*******/
13        	/************** Tali funzioni restituiscono, in caso di result 0, un n.ro, un contesto e un messaggio di errore:					*******/
14        	/************** il n.ro è: <0 se errore ORACLE non specificamente gestito 											*******/
15        	/**************		   da 1->1000 errore "grave" (SEVERE_ERROR) gestito											*******/
16        	/**************		   >1000 errore non grave gestito														*******/
17        	/************** il contesto indica il package e/o funzione/procedura in cui si è verificato l'errore							*******/
18        
19        	DEF_COD_EVT_GENERICO			CONSTANT	DMT_PROCESS_HISTORY.COD_TIPO_EVENTO%type:='#GEN_EVT';
20        	DEF_COD_STATO_DOC_BOZZA			CONSTANT	DMT_PROCESS_UD.COD_STATO_UD_IN_PROC%type:='BOZZA';			--- cod. stato documento di procedimento settando il quale il documento NON viene messo automaticamente nel fascicolo del procedimento quando viene legato al procedimento
21        	
22        	/****** Funzione che per inserire o aggiornare un processo in banca dati (gestisce solo i dati della tabella DMT_PROCESSES) *******/
23        	function InsUpdProcess(
24        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
25        																-- (obblig). Codice identificativo del token di connessione
26        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si avvia il processo. Se non valorizzato è l'utente connesso
27        			IdProcessIO			IN OUT	DMT_PROCESSES.ID_PROCESS%type,		-- Id. del processo da aggiornare. Se NULL (in input) il processo è da inserire e in output l'argomento restituisce l'id. del processo inserito
28        			IdProcessTypeIn		IN		DMT_PROCESSES.ID_PROCESS_TYPE%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
29        																-- (obblig. se IdProcessIO è NULL in input) Identificativo del tipo del processo.
30        			CIProvProcessIn		IN		DMT_PROCESSES.PROV_CI_PROCESS%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
31        																-- Codice identificativo del processo in un eventuale sistema di provenienza
32        			CITypeFlussoWFIn		IN		DMT_PROCESSES.PROV_CI_TY_FLUSSO_WF%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
33        																-- Codice identificativo del tipo di flusso workflow associato
34        			CIFlussoWFIn		IN		DMT_PROCESSES.PROV_CI_FLUSSO_WF%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
35        																-- Codice identificativo del flusso workflow associato
36        			TsAvvioProcIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
37        																-- Timestamp di avvio del processo (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se NULL e IdProcessIO è NULL si intende pari a data e ora correnti
38        			DtDecorrenzaProcIn	IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
39        																-- Data di decorrenza dei termini del processo (nel formato dato dal parametro di conf. FMT_STD_DATA).
40        			OggettoIn			IN		DMT_PROCESSES.OGGETTO%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
41        																-- Oggetto/descrizione del processo
42        			FlgTpObjProcessOnIn	IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
43        																-- Indica il tipo di oggetto cui si riferisce il processo. Valori possibili:
44        																-- C	=	Copia di unità documentaria
45        																-- U	=	Unità documentaria
46        																-- F	=	Folder
47        																-- NULL = Processo non relativo a singola copia, unità doc. o folder
48        			IdObjProcessOnIn		IN		INTEGER DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
49        																-- Id. dell'eventuale copia/unità documentaria/folder cui si riferisce il processo (può essere valorizzato solo se lo è FlgTpObjProcessOnIn)
50        			IdProcessParentIn		IN		DMT_PROCESSES.ID_PROCESS_PARENT%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
51        																-- Id. dell'eventuale processo padre del processo da inserire/aggiornare
52        			MotivazioniAvvioIn	IN		DMT_PROCESSES.MOTIVAZIONI%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
53        																-- Motivazioni per cui ha luogo il processo
54        			NoteProcIn			IN		DMT_PROCESSES.NOTE%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
55        																-- Note del processo
56        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
57        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
58        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
59        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
60        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
61        			ErrMsgOut			OUT 		VARCHAR2,						-- Messaggio d'errore
62        			AttributiAddAvvioIn	IN		CLOB DEFAULT NULL,		-- (gestito solo se processo da creare) Lista degli eventuali attributi con cui caratterizzare l'avvio (XML conforme a schema LISTA_STD.xsd)
63        																-- Ogni valore è un tag Riga che contiene 3 colonne che devono essere tutte valorizzate:
64        																-- 1: (obblig.) Nome dell'attributo (stringa lung. max. 250)
65        																-- 2: (obblig.) Tipo del valore (valori possibili: S=Stringa, N=Numerico, D=Data/Timestamp)
66        																-- 3: (obblig.) Valore (se è un numerico deve avere la "," come separatore dei decimali; se è una data deve avere il formato DD/MM/RRRR HH24:MI:SS)
67        																-- Un attributo con un certo nome può avere più valori (tutti dello stesso tipo) che vengono salvati mantenendo l'ordine con cui figurano nell'XML
68        			FlgInsByFOIn		IN		PLS_INTEGER DEFAULT NULL,	
69        																-- (valori 1/0/NULL) Se 1 significa che la funzione viene chiamata per inserire un procedimento in bozza (NON ancora avviato) dal front-office
70        			EtichettaProponenteIn	IN		DMT_PROCESSES.ETICHETTA_PROPONENTE%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD')
71        																-- (facoltativo) Etichetta / nome assegnato al procedimento da chi l'ha inserito
72        			) return PLS_INTEGER;								-- Vale 1 se tutto è andato a buon fine, altrimenti 0
73        
74        	/********************** funzione attraverso cui dal front-office viene creato un pocedimento in bozza 	********************/
75        	/********************** il procedimento viene creato senza flusso workflow associato e senza folder		********************/
76        	function InsProcessFO(
77        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
78        																				-- (obblig). Codice identificativo del token di connessione
79        			UseridProponenteIn		IN		DMT_PROCESSES.USERID_INS%type,		-- (obblig.) Userid di chi sta creando il procedimento (anche un utente NON censito in DMT_USERS). Può essere duqnque diverso dallo username dell'utente corrispondente al token di connessione
80        			ProfiloProponenteIn		IN		DMT_PROCESSES.PROFILO_INS%type,		-- (obblig.) Profilo con cui si sta creando il procedimento (CITTADINO, AZIENDA-ENTE, DELEGATO)
81        			IdProcessTypeIn			IN		DMT_PROCESSES.ID_PROCESS_TYPE%type,	-- (obblig.) Identificativo del tipo del processo.
82        			EtichettaProponenteIn	IN		DMT_PROCESSES.ETICHETTA_PROPONENTE%type,	
83        																				-- (facoltativo) Etichetta / nome assegnato al procedimento da chi l'ha inserito
84        			OggettoIn				IN		DMT_PROCESSES.OGGETTO%type,			-- Oggetto della pratica
85        			TipoProgettoIn			IN		VARCHAR2,							-- Tipo di progetto (applicabile solo ad alcune tipologie di procedimenti ad ampio spettro quali la VIA)
86        																				-- E' formato da più parti separate da |*|:
87        																				-- la 1a parte indica il riferimento normativo in base a cui è classificato il progetto (es. l'allegato di delibera)
88        																				-- la 2a parte indica se nuovo progetto (=N) o modifica di progetto già presentato (=M)
89        																				-- la 3a parte indica il tipo di progetto
90        			RichiedenteXMLIn		IN		CLOB,								-- XML con i dati del richiedente del procedimento (XML conforme a schema LISTA_STD.xsd, contenente un solo tag Riga)
91        																				-- Il richiedente è un tag Riga che contiene le seguenti colonne (alcune sono inutlizzate, e servono solo affinchè le colonne siano le stesse restituite in caricamento della jsp):
92        																				-- 1:  <Colonna INUTILIZZATA>
93        																				-- 2:  <Colonna INUTILIZZATA>
94        																				-- 3:  <Colonna INUTILIZZATA>
95        																				-- 4:  <Colonna INUTILIZZATA>
96        																				-- 5:  (obblig. se persona giuridica) Denominazione/cognome e nome del soggetto
97        																				-- 6:  Cognome del soggetto (obblig. se persona fisica)
98        																				-- 7:  Nome del soggetto (obblig. se persona fisica)
99        																				-- 8:  Indicatore di persona fisica (1) o giuridica (0 o NULL)
100        																				-- 9:  Codice fiscale 
101        																				-- 10: Partita IVA 
102        																				-- 11: Data di nascita/istituzione (nel formato del parametro di conf. FMT_STD_DATA)
103        																				-- 12: (valori M/F/NULL) Sesso del soggetto (se persona fisica): M = Maschio, F = Femmina
104        																				-- 13: Codice ISTAT del comune (italiano) di nascita/istituzione (viene considerato solo se è valorizzata anche la colonna successiva)
105        																				-- 14: Nome del comune italiano o della città (se estera) di nascita/istituzione 
106        																				-- 15: Codice ISTAT dello stato di nascita/istituzione (viene considerato solo se è valorizzata anche la colonna successiva)
107        																				-- 16: Nome dello stato di nascita/istituzione del soggetto
108        																				-- 17: Codice ISTAT dello stato di cittadinanza del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
109        																				-- 18: Nome dello stato di cittadinanza del soggetto
110        																				-- 19: Identificativo con cui il soggetto è registrato in rubrica soggetti di AURIGA (se vi è presente)
111        																				-- 20: <Colonna INUTILIZZATA>
112        																				-- 21: <Colonna INUTILIZZATA>
113        																				-- 22: <Colonna INUTILIZZATA>
114        																				-- 23: <Colonna INUTILIZZATA>
115        																				-- 24: <Colonna INUTILIZZATA>
116        																				-- 25: <Colonna INUTILIZZATA>
117        																				-- 26: <Colonna INUTILIZZATA>
118        																				-- 27: Codice identificativo toponomastico dell'indirizzo a cui inviare corrispondenza al soggetto (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
119        																				-- 28: Indirizzo (senza civico) a cui inviare corrispondenza al soggetto (alternativo o ridondante rispetto al campo precedente)
120        																				-- 29: Civico (senza appendici che vanno in colonna 59) dell'indirizzo a cui inviare corrispondenza al soggetto
121        																				-- 30: Interno dell'indirizzo a cui inviare corrispondenza al soggetto
122        																				-- 31: Scala dell'indirizzo a cui inviare corrispondenza al soggetto
123        																				-- 32: Piano dell'indirizzo a cui inviare corrispondenza al soggetto
124        																				-- 33: CAP dell'indirizzo a cui inviare corrispondenza al soggetto
125        																				-- 34: Frazione dell'indirizzo a cui inviare corrispondenza al soggetto
126        																				-- 35: Codice ISTAT del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
127        																				-- 36: Nome del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto
128        																				-- 37: Codice ISTAT dello stato dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
129        																				-- 38: Nome dello stato dell'indirizzo a cui inviare corrispondenza al soggetto
130        																				-- 39: Codice (valori da dizionario) del tipo di indirizzo (valido) presente per il soggetto nella rubrica soggetti e che costituisce l'indirizzo a cui inviare corrispondenza al soggetto
131        																				-- 40: Riferimenti telefonici a cui contattare il soggetto
132        																				-- 41: Riferimenti fax a cui contattare il soggetto
133        																				-- 42: Indirizzo e-mail a cui contattare il soggetto
134        																				-- 43: (valori 1/0) Flag di indirizzo e-mail di Posta Elettronica Certificata
135        																				-- 44: (valori 1/0) Flag di indirizzo e-mail dichiarato all'Indice PA
136        																				-- 45: (valori 1/0) Flag di indirizzo e-mail che è Casella Istituzionale di una PA
137        																				-- 46: <Colonna INUTILIZZATA>
138        																				-- 47: <Colonna INUTILIZZATA>
139        																				-- 48: <Colonna INUTILIZZATA>
140        																				-- 49: numero REC
141        																				-- 50: provincia REC
142        																				-- 51: data REC
143        																				-- 52: titolo di studio/professionale
144        																				-- 53: Periodi delle esperienze professionali (date di inizio e fine dei periodi separate da ";"; le date sono nel formato dato dala parametro di config. FMT_STD_DATA))
145        																				-- 54: (valori 1/0) Flag che indica se il soggetto ha svolto un percorso formativo professionalizzante		
146        																				-- 55: Codice del soggetto in un eventuale anagrafe esterna (ACS o repertori soggetti nel caso GPA ecc)	
147        																				-- 56: Zona dell'indirizzo a cui inviare corrispondenza al soggetto
148        																				-- 57: Complemento dell'indirizzo a cui inviare corrispondenza al soggetto
149        																				-- 58: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo cui inviare corrispondenza al soggetto; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 28
150        																				-- 59: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo a cui inviare corrispondenza al soggetto
151        																				-- 60: Codice identificativo toponomastico della sede legale/residenza (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
152        																				-- 61: Indirizzo (senza civico) della sede legale/residenza (alternativo o ridondante rispetto al campo precedente)
153        																				-- 62: Civico (senza appendici che vanno in colonna 75) della sede legale/residenza
154        																				-- 63: Interno dell'indirizzo della sede legale/residenza
155        																				-- 64: Scala dell'indirizzo della sede legale/residenza
156        																				-- 65: Piano dell'indirizzo della sede legale/residenza
157        																				-- 66: CAP dell'indirizzo della sede legale/residenza
158        																				-- 67: Frazione dell'indirizzo della sede legale/residenza
159        																				-- 68: Codice ISTAT del comune italiano dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
160        																				-- 69: Nome del comune italiano dell'indirizzo della sede legale/residenza
161        																				-- 70: Codice ISTAT dello stato dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
162        																				-- 71: Nome dello stato dell'indirizzo della sede legale/residenza
163        																				-- 72: Zona dell'indirizzo della sede legale/residenza
164        																				-- 73: Complemento dell'indirizzo della sede legale/residenza
165        																				-- 74: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo della sede legale/residenza; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 61
166        																				-- 75: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo della sede legale/residenza
167        			ReferentiRichXMLIn		IN		CLOB,								-- Dati dei referenti del richiedente (se persona giuridica) da contattare per il procedimento (lista XML conforme a schema ListaSDT.xsd)
168        																				-- Ogni referente è un tag Riga che è formato dalle colonne:
169        																				-- 1: (obblig.) Cognome
170        																				-- 2: (obblig.) Nome
171        																				-- 3: Ruolo ricpoerto (all'interno del soggetto richiedente)
172        																				-- 4: Email
173        																				-- 5: Telefono
174        																				-- 6: Fax
175        			IdProcessOut			OUT		DMT_PROCESSES.ID_PROCESS%type,		-- Id. del procedimento creato
176        			EstremiProcessOut		OUT		VARCHAR2,							-- Estremi del procedimento creato (da utilizzare nelle GUI come identificativo "parlante" del procedimento)
177        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
178        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
179        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
180        			ErrContextOut			OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
181        			ErrCodeOut				OUT		PLS_INTEGER,						-- N.ro errore di uscita
182        			ErrMsgOut				OUT 	VARCHAR2,							-- Messaggio d'errore
183        			DelegatoRapprXMLIn		IN		CLOB DEFAULT NULL					-- XML con i dati del delegato/rappresentante che presenta il procedimento per il richiedente(XML conforme a schema LISTA_STD.xsd, contenente un solo tag Riga)
184        																				-- Lista con un solo tag Riga che contiene le seguenti colonne (alcune sono inutlizzate, e servono solo affinchè le colonne siano le stesse restituite in caricamento della jsp):
185        																				-- 1:  <Colonna INUTILIZZATA>
186        																				-- 2:  <Colonna INUTILIZZATA>
187        																				-- 3:  <Colonna INUTILIZZATA>
188        																				-- 4:  <Colonna INUTILIZZATA>
189        																				-- 5:  (obblig. se persona giuridica) Denominazione/cognome e nome del soggetto
190        																				-- 6:  Cognome del soggetto (obblig. se persona fisica)
191        																				-- 7:  Nome del soggetto (obblig. se persona fisica)
192        																				-- 8:  Indicatore di persona fisica (1) o giuridica (0 o NULL)
193        																				-- 9:  Codice fiscale 
194        																				-- 10: Partita IVA 
195        																				-- 11: Data di nascita/istituzione (nel formato del parametro di conf. FMT_STD_DATA)
196        																				-- 12: (valori M/F/NULL) Sesso del soggetto (se persona fisica): M = Maschio, F = Femmina
197        																				-- 13: Codice ISTAT del comune (italiano) di nascita/istituzione (viene considerato solo se è valorizzata anche la colonna successiva)
198        																				-- 14: Nome del comune italiano o della città (se estera) di nascita/istituzione 
199        																				-- 15: Codice ISTAT dello stato di nascita/istituzione (viene considerato solo se è valorizzata anche la colonna successiva)
200        																				-- 16: Nome dello stato di nascita/istituzione del soggetto
201        																				-- 17: Codice ISTAT dello stato di cittadinanza del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
202        																				-- 18: Nome dello stato di cittadinanza del soggetto
203        																				-- 19: Identificativo con cui il soggetto è registrato in rubrica soggetti di AURIGA (se vi è presente)
204        																				-- 20: <Colonna INUTILIZZATA>
205        																				-- 21: <Colonna INUTILIZZATA>
206        																				-- 22: <Colonna INUTILIZZATA>
207        																				-- 23: <Colonna INUTILIZZATA>
208        																				-- 24: <Colonna INUTILIZZATA>
209        																				-- 25: <Colonna INUTILIZZATA>
210        																				-- 26: <Colonna INUTILIZZATA>
211        																				-- 27: Codice identificativo toponomastico dell'indirizzo a cui inviare corrispondenza al soggetto (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
212        																				-- 28: Indirizzo (senza civico) a cui inviare corrispondenza al soggetto (alternativo o ridondante rispetto al campo precedente)
213        																				-- 29: Civico (senza appendici che vanno in colonna 59) dell'indirizzo a cui inviare corrispondenza al soggetto
214        																				-- 30: Interno dell'indirizzo a cui inviare corrispondenza al soggetto
215        																				-- 31: Scala dell'indirizzo a cui inviare corrispondenza al soggetto
216        																				-- 32: Piano dell'indirizzo a cui inviare corrispondenza al soggetto
217        																				-- 33: CAP dell'indirizzo a cui inviare corrispondenza al soggetto
218        																				-- 34: Frazione dell'indirizzo a cui inviare corrispondenza al soggetto
219        																				-- 35: Codice ISTAT del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
220        																				-- 36: Nome del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto
221        																				-- 37: Codice ISTAT dello stato dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
222        																				-- 38: Nome dello stato dell'indirizzo a cui inviare corrispondenza al soggetto
223        																				-- 39: Codice (valori da dizionario) del tipo di indirizzo (valido) presente per il soggetto nella rubrica soggetti e che costituisce l'indirizzo a cui inviare corrispondenza al soggetto
224        																				-- 40: Riferimenti telefonici a cui contattare il soggetto
225        																				-- 41: Riferimenti fax a cui contattare il soggetto
226        																				-- 42: Indirizzo e-mail a cui contattare il soggetto
227        																				-- 43: (valori 1/0) Flag di indirizzo e-mail di Posta Elettronica Certificata
228        																				-- 44: (valori 1/0) Flag di indirizzo e-mail dichiarato all'Indice PA
229        																				-- 45: (valori 1/0) Flag di indirizzo e-mail che è Casella Istituzionale di una PA
230        																				-- 46: <Colonna INUTILIZZATA>
231        																				-- 47: <Colonna INUTILIZZATA>
232        																				-- 48: <Colonna INUTILIZZATA>
233        																				-- 49: numero REC
234        																				-- 50: provincia REC
235        																				-- 51: data REC
236        																				-- 52: titolo di studio/professionale
237        																				-- 53: Periodi delle esperienze professionali (date di inizio e fine dei periodi separate da ";"; le date sono nel formato dato dala parametro di config. FMT_STD_DATA))
238        																				-- 54: (valori 1/0) Flag che indica se il soggetto ha svolto un percorso formativo professionalizzante		
239        																				-- 55: Codice del soggetto in un eventuale anagrafe esterna (ACS o repertori soggetti nel caso GPA ecc)	
240        																				-- 56: Zona dell'indirizzo a cui inviare corrispondenza al soggetto
241        																				-- 57: Complemento dell'indirizzo a cui inviare corrispondenza al soggetto
242        																				-- 58: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo cui inviare corrispondenza al soggetto; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 28
243        																				-- 59: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo a cui inviare corrispondenza al soggetto
244        																				-- 60: Codice identificativo toponomastico della sede legale/residenza (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
245        																				-- 61: Indirizzo (senza civico) della sede legale/residenza (alternativo o ridondante rispetto al campo precedente)
246        																				-- 62: Civico (senza appendici che vanno in colonna 75) della sede legale/residenza
247        																				-- 63: Interno dell'indirizzo della sede legale/residenza
248        																				-- 64: Scala dell'indirizzo della sede legale/residenza
249        																				-- 65: Piano dell'indirizzo della sede legale/residenza
250        																				-- 66: CAP dell'indirizzo della sede legale/residenza
251        																				-- 67: Frazione dell'indirizzo della sede legale/residenza
252        																				-- 68: Codice ISTAT del comune italiano dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
253        																				-- 69: Nome del comune italiano dell'indirizzo della sede legale/residenza
254        																				-- 70: Codice ISTAT dello stato dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
255        																				-- 71: Nome dello stato dell'indirizzo della sede legale/residenza
256        																				-- 72: Zona dell'indirizzo della sede legale/residenza
257        																				-- 73: Complemento dell'indirizzo della sede legale/residenza
258        																				-- 74: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo della sede legale/residenza; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 61
259        																				-- 75: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo della sede legale/residenza
260        			) return PLS_INTEGER;												-- Vale 1 se tutto è andato a buon fine, altrimenti 0
261        
262        	/***** Funzione per inserire o aggiornare un evento custom (vale a dire non un'attività/fase censita nel workflow) nella storia di un dato processo ******/
263        	function IUEventoCustom(
264        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
265        																-- (obblig). Codice identificativo del token di connessione
266        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
267        			IdProcessIn			IN 		DMT_PROCESSES.ID_PROCESS%type DEFAULT NULL,
268        																-- Id. del processo cui è relativo l'evento da aggiornare/inserire
269        																-- Può non essere valorizzato solo se IdEventoIO è valorizzato in input (caso di evento da aggiornare; in tal caso il processo, se specificato, non può essere diverso da quello a cui è già associato l'evento)
270        			IdEventoIO			IN OUT	DMT_PROCESS_HISTORY.ID_EVENTO%type,		-- In input è l'identificativo dell'evento da aggiornare, e se non valorizzato significa che l'evento è da inserire
271        																-- In output è l'identificativo dell'evento inserito
272        			IdTipoEventoIn		IN		DMT_PROCESS_TYPE_EVENTS.ID_EVENT_TYPE%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
273        																-- Id. del tipo di evento (uno tra quelli censiti in DMT_EVENT_TYPES) (deve essere un tipo evento previsto per il dato tipo di processo/procedimento)
274        																-- Se non valorizzato, in caso di evento da inserire, l'evento viene classificato come "custom generico"
275        			DesEventoIn			IN		DMT_PROCESS_HISTORY.DES_EVENTO%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
276        																-- Descrizione dell'evento. In caso di evento da inserire è obbligatoria qualora il tipo dell'evento non sia specficato
277        			TsInizioEventoIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
278        																-- Timestamp di inizio dell'evento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP), se si tratta di evento "durativo" e non puntuale
279        			IdUserIniANomeDiIn	IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
280        																-- Id. dell'utente a nome di cui l'evento è stato iniziato
281        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
282        			DesUserIniANomeDiIn	IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
283        																-- Descrizione (o parte di essa) dell'utente a nome di cui l'evento è stato iniziato
284        																-- Se non specificato e se il timestamp di inizio lo è, viene inteso pari all'utente di lavoro
285        			IdUserIniDaIn		IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
286        																-- Id. dell'utente che ha materialmente iniziato l'evento
287        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
288        			DesUserIniDaIn		IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
289        																-- Descrizione dell'utente che ha materialmente iniziato l'evento
290        																-- Se non specificato e se il timestamp di inizio lo è, viene inteso pari all'utente connesso
291        			TsComplEventoIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
292          																-- Timestamp dell'evento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP) se si tratta di evento puntuale, o di fine dello stesso se si tratta di un evento "durativo"
293        																-- In caso di inserimento è obbligatorio se il timestamp di inizio non è specificato
294        			IdUserComplANomeDiIn	IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
295        																-- Id. dell'utente a nome di cui l'evento è stato completato
296        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
297        			DesUserComplANomeDiIn	IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
298        																-- Descrizione dell'utente a nome di cui l'evento è stato completato
299        																-- Se non specificato e se il timestamp di completamento lo è, viene inteso pari all'utente di lavoro
300        			IdUserComplDaIn		IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
301        																-- Id. dell'utente che ha materialmente completato l'evento
302        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
303        			DesUserComplDaIn		IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
304        																-- Descrizione dell'utente che ha materialmente completato l'evento
305        																-- Se non specificato e se il timestamp di completamento lo è, viene inteso pari all'utente connesso
306          			DesEsitoIn		    	IN		DMT_PROCESS_HISTORY.DES_ESITO%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
307        																-- Esito eventuale con cui si è concluso l'evento
308        			MessaggioIn			IN		DMT_PROCESS_HISTORY.MESSAGGIO%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
309        																-- Eventuale messaggio associato all'evento
310        			IdUDAssociataIn		IN		DMT_UNITA_DOC.ID_UD%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
311        																-- Id. dell' eventuale unità documentaria associata all'evento
312        			DurataMaxEventoIn		IN		DMT_PROCESS_HISTORY.DURATA_MAX%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
313        																-- Giorni di massima durata dell'evento (se durativo)
314        			AttributiAddIn		IN		CLOB DEFAULT NULL,				-- XML contenente nomi e valori degli attributi dinamici da aggiornare (conforme allo schema SezioneCache.xsd) 
315        																-- Gli attributi già presenti in DB e per i quali non c'è corrispondente nell'XML restano invariati
316        																-- Per tutti gli attributi vale quanto segue:
317        																-- Un attributo da settare è un tag "Variabile" dell'XML il cui tag "Nome" contiene il nome identificativo dell'attributo (ATTR_NAME di DMT_ATTRIBUTES_DEF)
318        																-- Un attributo da settare è una variabile con tag "ValoreSemplice" se è un attributo a singolo valore e non strutturato (cioè con tipo diverso da COMPLEX)
319        																-- altrimenti è una variabile con tag "Lista" che ha un'unica colonna con "Nro" pari a 1 se l'attributo non è strutturato, che ha invece tante colonne quanti gli attributi componenti (ordinate in base al loro NRO_ORD_IN_SUP) se l'attributo è complesso 
320        																-- Nel caso di variabili con tag "Lista" i valori specificati nell'XML si aggiungono o sostituiscono quelli già presenti in DB a seconda che nell'XML sia presente o meno una variabile con tag "Nome" pari a #Append_<Nome attributo> e tag "ValoreSemplice" pari a 1  
321        																-- In particolare se non sono specificati valori nell'XML (tag Lista vuoto) e se i valori non sono da aggiungere significa che tutti i valori dell'attributo già presenti in DB vanno rimossi
322        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
323        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
324        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
325        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
326        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
327        			ErrMsgOut			OUT 		VARCHAR2,						-- Messaggio d'errore
328        			IdUserRespProcIn		IN		INTEGER DEFAULT NULL,				-- ID_USER del responsabile di procedimento nel caso di evento di cambio procedimento
329        			FlgPubblicatoIn		IN		PLS_INTEGER	DEFAULT 1,				-- (valori 1/0/NULL) Se 1 significa che l'evento è pubblicato e quindi visibile nei sistemi di front-office
330        			FlgIgnoraObbligIn		IN			PLS_INTEGER DEFAULT NULL		-- Se 1 vengono esclusi i controlli di obbligatorietà sugli attributi custom
331        			) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
332        
333        	/***** Funzione per inserire o aggiornare un evento custom (vale a dire non un'attività/fase censita nel workflow) nella storia di un dato processo 	******/
334        	/***** overload della precedente funzione da usare nel caso in cui il motore di workflow che può guidare il processo sia esterno (non Oracle WF)   	******/	
335        	function IUEventoCustom(
336        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
337        																-- (obblig). Codice identificativo del token di connessione
338        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
339        			IdProcessIn			IN 		DMT_PROCESSES.ID_PROCESS%type DEFAULT NULL,
340        																-- Id. del processo cui è relativo l'evento da aggiornare/inserire
341        																-- Può non essere valorizzato solo se IdEventoIO è valorizzato in input (caso di evento da aggiornare; in tal caso il processo, se specificato, non può essere diverso da quello a cui è già associato l'evento)
342        			IdEventoIO			IN OUT	DMT_PROCESS_HISTORY.ID_EVENTO%type,		-- In input è l'identificativo dell'evento da aggiornare, e se non valorizzato significa che l'evento è da inserire
343        																-- In output è l'identificativo dell'evento inserito
344        			IdTipoEventoIn		IN		DMT_PROCESS_TYPE_EVENTS.ID_EVENT_TYPE%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
345        																-- Id. del tipo di evento (uno tra quelli censiti in DMT_EVENT_TYPES) (deve essere un tipo evento previsto per il dato tipo di processo/procedimento)
346        																-- Se non valorizzato, in caso di evento da inserire, l'evento viene classificato come "custom generico"
347        			DesEventoIn			IN		DMT_PROCESS_HISTORY.DES_EVENTO%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
348        																-- Descrizione dell'evento. In caso di evento da inserire è obbligatoria qualora il tipo dell'evento non sia specficato
349        			TsInizioEventoIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
350        																-- Timestamp di inizio dell'evento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP), se si tratta di evento "durativo" e non puntuale
351        			IdUserIniANomeDiIn	IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
352        																-- Id. dell'utente a nome di cui l'evento è stato iniziato
353        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
354        			DesUserIniANomeDiIn	IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
355        																-- Descrizione (o parte di essa) dell'utente a nome di cui l'evento è stato iniziato
356        																-- Se non specificato e se il timestamp di inizio lo è, viene inteso pari all'utente di lavoro
357        			IdUserIniDaIn		IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
358        																-- Id. dell'utente che ha materialmente iniziato l'evento
359        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
360        			DesUserIniDaIn		IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
361        																-- Descrizione dell'utente che ha materialmente iniziato l'evento
362        																-- Se non specificato e se il timestamp di inizio lo è, viene inteso pari all'utente connesso
363        			TsComplEventoIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'DATE_VAL_NO_UPD'),
364          																-- Timestamp dell'evento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP) se si tratta di evento puntuale, o di fine dello stesso se si tratta di un evento "durativo"
365        																-- In caso di inserimento è obbligatorio se il timestamp di inizio non è specificato
366        			IdUserComplANomeDiIn	IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
367        																-- Id. dell'utente a nome di cui l'evento è stato completato
368        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
369        			DesUserComplANomeDiIn	IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
370        																-- Descrizione dell'utente a nome di cui l'evento è stato completato
371        																-- Se non specificato e se il timestamp di completamento lo è, viene inteso pari all'utente di lavoro
372        			IdUserComplDaIn		IN		DMT_USERS.ID_USER%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
373        																-- Id. dell'utente che ha materialmente completato l'evento
374        																-- Viene considerato solo se lo è l'argomento successivo e se i due sono compatibili
375        			DesUserComplDaIn		IN		DMT_USERS.DES_USER%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
376        																-- Descrizione dell'utente che ha materialmente completato l'evento
377        																-- Se non specificato e se il timestamp di completamento lo è, viene inteso pari all'utente connesso
378          			DesEsitoIn		    	IN		DMT_PROCESS_HISTORY.DES_ESITO%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
379        																-- Esito eventuale con cui si è concluso l'evento
380        			MessaggioIn			IN		DMT_PROCESS_HISTORY.MESSAGGIO%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
381        																-- Eventuale messaggio associato all'evento
382        			IdUDAssociataIn		IN		DMT_UNITA_DOC.ID_UD%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
383        																-- Id. dell' eventuale unità documentaria associata all'evento
384        			DurataMaxEventoIn		IN		DMT_PROCESS_HISTORY.DURATA_MAX%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
385        																-- Giorni di massima durata dell'evento (se durativo)
386        			AttributiAddIn		IN		CLOB DEFAULT NULL,				-- XML contenente nomi e valori degli attributi dinamici da aggiornare (conforme allo schema SezioneCache.xsd)
387        																-- Gli attributi già presenti in DB e per i quali non c'è corrispondente nell'XML restano invariati
388        																-- Per tutti gli attributi vale quanto segue:
389        																-- Un attributo da settare è un tag "Variabile" dell'XML il cui tag "Nome" contiene il nome identificativo dell'attributo (ATTR_NAME di DMT_ATTRIBUTES_DEF)
390        																-- Un attributo da settare è una variabile con tag "ValoreSemplice" se è un attributo a singolo valore e non strutturato (cioè con tipo diverso da COMPLEX)
391        																-- altrimenti è una variabile con tag "Lista" che ha un'unica colonna con "Nro" pari a 1 se l'attributo non è strutturato, che ha invece tante colonne quanti gli attributi componenti (ordinate in base al loro NRO_ORD_IN_SUP) se l'attributo è complesso
392        																-- Nel caso di variabili con tag "Lista" i valori specificati nell'XML si aggiungono o sostituiscono quelli già presenti in DB a seconda che nell'XML sia presente o meno una variabile con tag "Nome" pari a #Append_<Nome attributo> e tag "ValoreSemplice" pari a 1
393        																-- In particolare se non sono specificati valori nell'XML (tag Lista vuoto) e se i valori non sono da aggiungere significa che tutti i valori dell'attributo già presenti in DB vanno rimossi
394        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
395        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
396        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
397        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
398        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
399        			ErrMsgOut			OUT 		VARCHAR2,						-- Messaggio d'errore
400        			FlgIgnoraObbligIn		IN			PLS_INTEGER DEFAULT NULL,		-- Se 1 vengono esclusi i controlli di obbligatorietà sugli attributi custom
401        			TaskFaseCorrXMLIn		IN		CLOB,							-- Lista della attività della fase corrente del flusso workflow associato e processi figli in corso (XML conforme a schema LISTA_STD.xsd)
402        																-- Ogni attività o processo figlio è un tag Riga che contiene 10 colonne:
403        																	-- 1) INSTANCE_ID 	Id. (univoco in tutto il workflow) dell'occorrenza dell'attività nella fase corrente (se c'è più di un'occorenza dell'attività nella fase è l'id. di una qualsiasi occorrenza che risulta eseguibile)
404        																	-- 2) INSTANCE_LABEL 	Nome univoco (nella fase corrente) dell'occorrenza dell'attività nella fase corrente (se c'è più di un'occorenza dell'attività nella fase è il nome di una qualsiasi occorrenza che risulta eseguibile)
405        																	-- 3) ACTIVITY_NAME 	Internal name che identifica l'attività nel disegno del flusso
406        																	-- 4) DISPLAY_NAME 	Nome con cui mostrare l'attività
407        																	-- 5) FLG_ESEGUIBILE	(valori 1/0) Se 1 significa che l'attività è eseguibile dall'utente di lavoro
408        																	-- 6) MOTIVI_NON_ESEG 	Motivo per cui l'attività NON è eseguibile dall'utente di lavoro
409        																	-- 7) FLG_DATI_VISIBILI	(valori 1/0) Se 1 significa che l'utente di lavoro può accedere alla consultazione dei dati gestiti nella maschera dell'attività
410        																	-- 8) FLG_FATTA 		(valori 1/0) Se 1 significa che l'attività è già stata svolta in precedenza da qualcuno
411        																	-- 9) ID_CHILD_PROCESS		Id. del processo filglio
412        																	-- 10)ESTREMI_CHILD_PROCESS   Estremi del processo figlio (tipo, codice, data avvio)
413        																	-- 11)ESITI			Lista dei possibili esiti dell'attività (separati da |*|)
414        			TaskToCompleteOut		OUT		VARCHAR2,						-- Nome del task modellato nel workflow che corrisponde all'evento e che va completato
415        			CodEsitoTaskToComplOut	OUT		VARCHAR2,						-- Codice dell'esito con cui completare il task TaskToCompleteOut
416        			LogForTaskComplOut	OUT		VARCHAR2						-- Log con cui completare il task TaskToCompleteOut
417        			) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
418        	
419        	/***** Funzione per cancellare un evento custom (vale a dire non un'attività/fase censita nel workflow) dalla storia di un dato processo ******/
420        	function DelEventoCustom(
421        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
422        																-- (obblig). Codice identificativo del token di connessione
423        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
424        			IdEventoIn			IN 		DMT_PROCESS_HISTORY.ID_EVENTO%type,		-- (obblig.) Identificativo dell'evento da cancellare
425        			MotiviIn			IN		DMT_ACTIVITIES.NOTE%type,			-- Motivi della cancellazione
426        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
427        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
428        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
429        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
430        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
431        			ErrMsgOut			OUT 		VARCHAR2,						-- Messaggio d'errore
432        			TaskFaseCorrXMLIn		IN		CLOB							-- Lista della attività della fase corrente del flusso workflow associato e processi figli in corso (XML conforme a schema LISTA_STD.xsd)
433        																-- Da valorizzare solo se processo guidato da workflow ESTERNO (non Oracle workflow)
434        																-- Ogni attività o processo figlio è un tag Riga che contiene 10 colonne:
435        																	-- 1) INSTANCE_ID 	Id. (univoco in tutto il workflow) dell'occorrenza dell'attività nella fase corrente (se c'è più di un'occorenza dell'attività nella fase è l'id. di una qualsiasi occorrenza che risulta eseguibile)
436        																	-- 2) INSTANCE_LABEL 	Nome univoco (nella fase corrente) dell'occorrenza dell'attività nella fase corrente (se c'è più di un'occorenza dell'attività nella fase è il nome di una qualsiasi occorrenza che risulta eseguibile)
437        																	-- 3) ACTIVITY_NAME 	Internal name che identifica l'attività nel disegno del flusso
438        																	-- 4) DISPLAY_NAME 	Nome con cui mostrare l'attività
439        																	-- 5) FLG_ESEGUIBILE	(valori 1/0) Se 1 significa che l'attività è eseguibile dall'utente di lavoro
440        																	-- 6) MOTIVI_NON_ESEG 	Motivo per cui l'attività NON è eseguibile dall'utente di lavoro
441        																	-- 7) FLG_DATI_VISIBILI	(valori 1/0) Se 1 significa che l'utente di lavoro può accedere alla consultazione dei dati gestiti nella maschera dell'attività
442        																	-- 8) FLG_FATTA 		(valori 1/0) Se 1 significa che l'attività è già stata svolta in precedenza da qualcuno
443        																	-- 9) ID_CHILD_PROCESS		Id. del processo filglio
444        																	-- 10)ESTREMI_CHILD_PROCESS   Estremi del processo figlio (tipo, codice, data avvio)
445        																	-- 11)ESITI			Lista dei possibili esiti dell'attività (separati da |*|)
446        			) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
447        
448        	/****** funzione per estrarre i dati di dettaglio di un evento custom di processo	*********************/
449        	function LoadDettEventoCustom(
450        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
451        																-- (obblig). Codice identificativo del token di connessione
452        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
453        			IdEventoIO			IN OUT	DMT_PROCESS_HISTORY.ID_EVENTO%type,		-- (obblig.) Identificativo dell'evento di cui estrarre i dati
454        			IdProcessOut		OUT		DMT_PROCESSES.ID_PROCESS%type,		-- Id. del processo cui è relativo l'evento
455        			DesProcessTypeOut		OUT		VARCHAR2,						-- Descrizione del tipo del processo cui è relativo l'evento
456        			CIProvProcessOut		OUT		DMT_PROCESSES.PROV_CI_PROCESS%type,		-- Codice identificativo del processo cui è relativo l'evento in un eventuale sistema di provenienza
457        			IdTipoEventoOut		OUT		DMT_PROCESS_TYPE_EVENTS.ID_EVENT_TYPE%type,
458        																-- Id. del tipo di evento (valorizzato solo se evento "tipizzato")
459        			DesTipoEventoOut		OUT		DMT_EVENT_TYPES.DES_EVENT_TYPE%type,	-- Descrizione del tipo di evento 
460        			DesEventoOut		OUT		DMT_PROCESS_HISTORY.DES_EVENTO%type,	-- Descrizione di dettaglio dell'evento.
461        			TsInizioEventoOut		OUT		VARCHAR2,						-- Timestamp di inizio dell'evento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP), se si tratta di evento "durativo" e non puntuale
462        			IdUserIniANomeDiOut	OUT		DMT_USERS.ID_USER%type,				-- Id. dell'utente a nome di cui l'evento è stato iniziato
463        			DesUserIniANomeDiOut	OUT		DMT_USERS.DES_USER%type,			-- Descrizione dell'utente a nome di cui l'evento è stato iniziato
464        			IdUserIniDaOut		OUT		DMT_USERS.ID_USER%type,				-- Id. dell'utente che ha materialmente iniziato l'evento
465        																-- Se NULL e se l'evento è durativo significa che è stato iniziato in automatico dal sistema
466        			DesUserIniDaOut		OUT		DMT_USERS.DES_USER%type,			-- Descrizione dell'utente che ha materialmente iniziato l'evento
467        																-- Se NULL e se l'evento è durativo significa che è stato iniziato in automatico dal sistema
468        			IdEventoIniDaOut		OUT		DMT_PROCESS_HISTORY.ID_EVENTO%type,		-- Id. dell'eventuale evento che ha dato luogo all'evento di cui estrarre i dati
469        			EstremiEventoIniDaOut	OUT		VARCHAR2,						-- Estremi dell'eventuale evento che ha dato luogo all'evento di cui estrarre i dati
470        			TsComplEventoOut		OUT		VARCHAR2,						-- Timestamp dell'evento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP) se si tratta di evento puntuale, o di fine dello stesso se si tratta di un evento "durativo"
471        			IdUserComplANomeDiOut	OUT		DMT_USERS.ID_USER%type,				-- Id. dell'utente a nome di cui l'evento è stato completato
472        			DesUserComplANomeDiOut	OUT		DMT_USERS.DES_USER%type,			-- Descrizione dell'utente a nome di cui l'evento è stato completato
473        			IdUserComplDaOut		OUT		DMT_USERS.ID_USER%type,				-- Id. dell'utente che ha materialmente completato l'evento
474        																-- Se NULL e il timestamp di completamento c'è significa che l'evento ha avuto luogo/è stato completato in automatico dal sistema
475        			DesUserComplDaOut		OUT		DMT_USERS.DES_USER%type,			-- Descrizione dell'utente che ha materialmente completato l'evento
476        			IdEventoEndDaOut		OUT		DMT_PROCESS_HISTORY.ID_EVENTO%type,		-- Id. dell'eventuale evento che ha determinato il verificarsi/completamento dell'evento di cui estrarre i dati
477        			EstremiEventoEndDaOut	OUT		VARCHAR2,						-- Estremi dell'eventuale evento che ha determinato il verificarsi/completamento dell'evento di cui estrarre i dati
478        			EventiDerivatiOut		OUT		NOCOPY CLOB,					-- Lista con i dati degli eventi derivati da quello corrente (XML conforme a schema LISTA_STD.xsd)		
479        																-- Ogni evento derivato è un tag Riga le cui colonne sono:
480        																-- 1: Identificativo dell'evento (ID_EVENTO)
481        																-- 2: (valori I/F/NULL) Indica il record rappresenta l'inizio o la fine dell'evento derivato (nel caso di evento durativo)
482        																-- 3: Descrizione dell'evento derivato
483        																-- 4: Id. del tipo di evento
484        																-- 5: Timestamp dell'evento derivato (o suo inizio/fine, se col 2 vale I/F)
485        			DesEsitoOut		    	OUT		DMT_PROCESS_HISTORY.DES_ESITO%type,		-- Esito eventuale con cui si è concluso l'evento
486        			MessaggioOut		OUT		DMT_PROCESS_HISTORY.MESSAGGIO%type,		-- Eventuale messaggio associato all'evento
487        			IdUDAssociataOut		OUT		DMT_UNITA_DOC.ID_UD%type,			-- Id. dell'eventuale unità documentaria associata all'evento
488        			IdDocAssociatoOut		OUT		DMT_DOCUMENTS.ID_DOC%type,			-- Id. del documento primario dell'eventuale unità documentaria associata all'evento
489        			NroLastVerDocAssOut	OUT		PLS_INTEGER,					-- N.ro dell'eventuale ultima versione elettronica visibile all'utente per il documento primario dell'eventuale unità documentaria associata all'evento
490        			DisplayFilenameOut	OUT		VARCHAR2,						-- Nome con cui mostrare il file corrispondente all'eventuale ultima versione elettronica visibile all'utente
491        			EstremiUDAssociataOut	OUT		VARCHAR2,						-- Estremi dell'eventuale unità documentaria (e suo documento primario) associata all'evento
492        			IdDocTypeAssociatoOut	OUT		DMT_DOCUMENTS.ID_DOC_TYPE%type,		-- Id. del tipo del documento primario dell'eventuale unità documentaria associata all'evento
493        			DurataMaxEventoOut	OUT		DMT_PROCESS_HISTORY.DURATA_MAX%type,	-- Giorni di massima durata dell'evento (se durativo)
494        			RowidOut			OUT		VARCHAR2,						-- Rowid del record di tabella DMT_PROCESS_HISTORY che rappresenta l'evento
495        			AttributiAddOut		OUT		NOCOPY CLOB,					-- Lista degli eventuali ulteriori attributi con cui è caratterizzato l'evento (XML conforme a schema LISTA_STD.xsd)
496        																-- Ogni attributo è un tag "Riga" che contiene le seguenti colonne:
497        																-- 1: N.ro (valori da 1 a n) del riquadro (fieldset) in cui mostrare l'attributo
498        																-- 2: Nome identificativo dell'attributo (ATTR_NAME)
499        																-- 3: Label del campo con cui rappresentare l'attributo 
500        																-- 4: Tipo di attributo. Valori: DATE, DATETIME, TEXT, TEXT-AREA, CHECK, INTEGER, EURO, DECIMAL, COMBO-BOX, LISTA
501        																-- 5: N.ro massimo di caratteri/cifre
502        																-- 6: Larghezza del campo con cui rappresentare l'attributo (size)
503        																-- 7: Valore dell'attributo
504        																-- 8: Label del riquadro (fieldset) in cui mostrare l'attributo
505        																-- 9: (valori 1/0) 1 indica che l'attributo è obbligatorio, 0 che è facoltativo
506        																-- 10: Altezza (in nro righe) del campo con cui rappresentare l'attributo (se TEXT-AREA)
507        																-- 11:(valori 1/0) 1 indica se l'attributo è modificabile, 0 che è in sola visualizzazione   
508        			FlgMostraAltriAttrOut	OUT		PLS_INTEGER,					-- (valori 1/0) Se 1 ci sono attributi addizionali visibile all'utente, se 0 no
509        			BachSizeOut				OUT		PLS_INTEGER,				-- Indica il massimo n.ro di record per ogni pagina da mostrare nelle liste restituite in output
510        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
511        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
512        			ErrMsgOut			OUT 		VARCHAR2						-- Messaggio d'errore
513        			) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
514        
515        	/***** Funzione per ottenere la rappresentazione dell'iter svoltosi in un dato processo guidato da Workflow come struttura ad albero su due livelli (nodi di 1° liv.: fasi; nodi di 2° liv.: attività/altri eventi) 		*****/
516        	/***** Su questa struttura è possibile effettuare una navigazione precedente/successivo impostando una ricerca per descrizione della fase/attività/evento e/o per altri filtri								*****/
517        	/***** Restituisce sempre tutti i nodi dell'albero, anche quelli che non matchano i filtri e che corrispondono a figli di nodi da non esplodere														*****/
518        	function ProcessHistoryTree(
519        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,	-- (obblig). Codice identificativo del token di connessione
520        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,		-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
521        			IdProcessIn			IN 		DMT_PROCESSES.ID_PROCESS%type,			-- (obblig.) Id. del processo di cui mostrare l'iter svolto
522        			---------inizio filtri per navigazione precedente / successivo ----------
523        			CodTipoEventoIn		IN		DMT_PROCESS_HISTORY.COD_TIPO_EVENTO%type,		-- Codice che indica il tipo di nodo/evento
524        			DesEventoIn			IN 		DMT_PROCESS_HISTORY.DES_EVENTO%type DEFAULT NULL,
525        																	-- Descrizione della fase o attività o evento (ricerca case-insensitive in like)
526        			DesUserIn			IN		DMT_USERS.DES_USER%type DEFAULT NULL,		-- Descrizione dell'utente che ha o a nome di cui è stato iniziato/concluso/effettuato l'evento (ricerca case-insensitive in like)
527        			DesEsitoIn			IN		DMT_PROCESS_HISTORY.DES_ESITO%type DEFAULT NULL,-- Descrizione dell'esito con cui si è completato l'evento/fase/attività (ricerca case insensitive in like)
528        			DettagliEventoIn		IN		VARCHAR2 DEFAULT NULL,					-- Parole contenute nel messaggio e/o nel log legato all'evento (ricerca di tipo full-text)
529        			---------fine filtri per navigazione precedente / successivo ----------
530        			IdSelectedNodeIO		IN OUT	VARCHAR2,							-- Identificativo del nodo/record selezionato (colonna 1 della lista di output)
531        																	-- se in input è nullo o non corrisponde a un nodo restituito nella lista, in output viene valorizzato con l'id. di nodo della prima riga restituita e che soddisfa gli eventuali filtri
532        																	-- altrimenti se i filtri non sono valorizzati o se FlgNextPrevNodeIn è nullo resta invariato, diversamente viene settato con l'identificativo del nodo precedente/successivo quello in input e soddisfacente i filtri (ammesso che tale nodo esista, se no resta invariato)
533        			FlgExplSelNodeIn 		IN		PLS_INTEGER DEFAULT NULL,				--(valori 1/0/NULL) se 1 significa che il nodo selezionato deve essere esploso (se possibile)
534        			FlgNextPrevNodeIn		IN		VARCHAR2,							--(valori N/P/NULL) indica se il nuovo nodo selezionato deve essere quello successivo (N) o precedente (P) il nodo con identificativo pari a IdSelectedNodeIO passato in input
535        																	-- questo argomento viene ignorato se i filtri non sono valorizzati o se il valore in input di IdSelectedNodeIO è nullo o corrisponde a un nodo inesistente
536        			TreeXMLOut			OUT		NOCOPY CLOB,						-- Lista con i nodi dell'albero che rappresenta le fasi/eventi/attività che hanno avuto luogo nel processo(XML conforme a schema LISTA_STD.xsd)
537        																	-- Ogni nodo è un tag Riga che contiene le seguenti colonne:
538        																	-- 1:	Identificativo univoco di ciò che è rappresentato dal nodo (ID_EVENTO come prefisso)
539        																	-- 2:	Indica il livello del nodo: 1 = fase (1° livello); 2 = attività/evento (2° livello)
540        																	-- 3: Codice che indica il tipo di nodo (da utilizzare per l'imagine del nodo): #F = Fase; #ACT = Attività; codici dei vari tipi di eventi
541        																	-- 4:	Descrizione del nodo (ovvero della fase/attività/evento, con indicazione di tempi ed esito)
542        																	-- 5: Dettagli sul nodo da mostrare come alt dell'immagine del nodo (utenti che hanno iniziato/completato; messaggio; log di sistema)
543        																	-- 6:(valori 2/1/0) Indica se il nodo va mostrato esploso (=2), se è esplodibile ma non va esploso (=1, a seconda che abbia "figli" o meno), se non è esplodibile (=0)
544        																	-- 7:(valori 1/0) Se 1 significa che il nodo matcha il filtro, se 0 no
545        																	-- 8:(valori 1/0) Se 1 indica che il nodo è selezionabile, se 0 no
546        																	-- 9: URL della maschera da richiamare quando si richiede di visualizzare l'attività (può non essere valorizzato, se ad esempio l'attività non è visibile all'utente)
547        																	-- 10: Id. del nodo padre
548        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
549        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
550        			ErrMsgOut				OUT 		VARCHAR2)						-- Messaggio d'errore
551        			return PLS_INTEGER;											-- Vale 1 se tutto è andato a buon fine, altrimenti 0
552        
553        	/****** Funzione per ricercare gli eventi (non le fasi e attività WF) accaduti nella storia di un processo/procedimento ******/
554        	function TrovaEventiProcessHistory(
555        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,-- (obblig). Codice identificativo del token di connessione
556        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,		-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
557        			IdProcessIn				IN 		DMT_PROCESSES.ID_PROCESS%type,			-- (obblig.) Id. del processo di cui mostrare gli eventi accaduti
558        			FlgPreimpostaFiltroIn		IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1 i filtri e l'ordinamento vengono settati secondo le impostazioni dell'utente di lavoro, altrimenti restano come passati in input
559        			--------- inizio filtri di ricerca ----------
560        			IdEventTypeIO			IN OUT	DMT_EVENT_TYPES.ID_EVENT_TYPE%type,			-- Id. del tipo dell'evento
561        			DesEventoIO				IN OUT	DMT_PROCESS_HISTORY.DES_EVENTO%type,		-- Descrizione evento (ricerca case-insensitive in like)
562        			FlgConMsgIO				IN OUT	PLS_INTEGER,						-- (valori 1/NULL) 1 indica che si vuole restringere la ricerca ai soli eventi con messaggio operatore associato
563        			MsgEventoIO				IN OUT	VARCHAR2,							-- Parole contenute nel messaggio operatore legato all'evento (ricerca di tipo full-text)
564        			FlgIncludiLockedIO		IN OUT	PLS_INTEGER,						-- (valori 1/NULL) Se 1 vengono inclusi anche gli eventi riservati di sistema e non modificabili/canceklabili da GUI, altrimenti no
565        			------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
566        			ColOrderByIO			IN OUT	VARCHAR2,							-- Indica il/i numeri della/e colonna dell'XML (CLOB ListaXMLOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne da 1 a 5). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
567        																		-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
568        																		-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
569        			FlgDescOrderByIO  		IN OUT	VARCHAR2,							-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
570        																		-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.
571        			FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,           	 	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
572        			NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
573           			BachSizeIO				IN OUT	PLS_INTEGER,						-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)
574        																		-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro
575        			OverFlowLimitIn			IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
576        			FlgSenzaTotIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
577        			NroTotRecOut			OUT		PLS_INTEGER,						-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
578             			NroRecInPaginaOut 		OUT   	PLS_INTEGER,                     			-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
579        			------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
580        			ListaXMLOut				OUT		NOCOPY CLOB,						-- Lista degli eventi trovati (XML conforme a schema LISTA_STD.xsd)
581        																		-- Ogni evento è un tag Riga che contiene le seguenti colonne:
582        																		-- 1:  Identificativo dell'evento (ID_EVENTO)
583        																		-- 2:  Id. del tipo di evento
584        																		-- 3:  Nome del tipo di evento
585        																		-- 4:  Descrizione evento
586        																		-- 5:  Timestamp di inizio e/o fine evento (in formato dato dal parametro di config. FMT_STD_TIMESTAMP)
587        																		-- 6:  Chi ha iniziato/finito l'evento e a nome di chi se diverso da lui stesso
588        																		-- 7:  Messaggio operatore associato all'evento
589        																		-- 8:  (valori 1/0) Se 1 indica che è un evento con documento associato
590        																		-- 9: Id. dell'unità documentaria associata all'evento
591        																		-- 10: (valori 1/0) Se 1 indica se ha eventi derivati
592        																		-- 11: (valori 1/0) Se 1 indica se è un evento derivato
593        																		-- 12: (valori 1/0) Se 1 indica che è un evento non modificabile/cancellabile dalla GUI
594        																		-- 13: (valori 1/0) Se 1 indica se ha eventi derivati o è un evento derivato
595        																		-- 14: Dettagli sugli eventi derivati o da cui è derivato
596        																		-- 15: (valori 1/0) Se 1 è un evento che è anche un'attività WF
597        																		-- 16: (valori 1/0) Se 1 è un'evento che è un'attività WF con esiti
598        																		-- 17: (valori 1/0) Se 1 indica che è un evento pubblicato, ovvero visibile dal front-office, altrimenti non è pubblicato
599        																		-- 18: Id. del responsabile di procedimento per eventi di cambio responsabile
600        																		-- 19:  Timestamp di inizio evento (in formato dato dal parametro di config. FMT_STD_TIMESTAMP)
601        																		-- 20:  Timestamp di fine evento (in formato dato dal parametro di config. FMT_STD_TIMESTAMP)
602        			FlgAbilInsOut	 		OUT 		PLS_INTEGER,            				-- (valori 1/0) Se 1 si ha abilitazione a inserimento di eventi
603        			FlgAbilUpdOut 			OUT 		PLS_INTEGER,            				-- (valori 1/0) Se 1 si ha abilitazione a modifica di eventi
604        			FlgAbilDelOut 			OUT 		PLS_INTEGER,            				-- (valori 1/0) Se 1 si ha abilitazione a cancellazione di eventi
605        			ErrContextOut			OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
606        			ErrCodeOut				OUT		PLS_INTEGER,						-- N.ro errore di uscita
607        			ErrMsgOut				OUT 		VARCHAR2,							-- Messaggio d'errore
608        			FlgSoloPubblicatiIn		IN		INTEGER DEFAULT NULL)					-- (valori 1/0/NULL) se 1 vengono estratti solo gli eventi pubblicati (FLG_PUBBLICATO=1) altrimenti tutti
609        			return PLS_INTEGER;												-- Vale 1 se tutto è andato a buon fine, altrimenti 0
610        
611        	/*********** Funzione per controllare i dati di un soggetto relativo ad un processo/procedimento 		**********/
612        	/*********** I dati vengono rielaborati e restituiti pronti per l'inserimento/aggiornamento in tabella	**********/
613        	function CtrlSoggEsterno(
614        			IdDominioIn			IN		DMT_SOGGETTI_PROD_AOO.ID_SP_AOO%type,	-- Identificativo del dominio (soggetto produttore o AOO) di lavoro (se NULL significa che il dominio è lo schema)
615        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig.) Id. del processo/procedimento cui è relativo il soggetti esterno da controllare
616        			FlgVldSoggVsRubricaIn	IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 la funzione verifica che il soggetto passato in input esista e sia individuabile univocamente in rubrica soggetti, altrimenti dà errore
617        			DatiSoggXMLIO		IN OUT	NOCOPY CLOB,					-- Dati del soggetto esterno di processo/procedimento da controllare (tag XML fatto come un tag "Riga" dello schema LISTA_STD.xsd)
618        																-- Il tag Riga può contenere le seguenti colonne
619        																-- (ATTENZIONE: per le colonne il cui tag è assente si intende, se soggetto già registrato in DB, che il campo corrispondente è invariato rispetto a com'è già in DB):
620        																-- 1:  Identificativo del record che rappresenta il soggetto, se già registrato in banca dati (univoco in tutta la banca dati)
621        																-- 2:  Ruolo del soggetto nel processo/procedimento
622        																-- 3:  Dettagli della relazione del soggetto con il processo
623        																-- 4:  Denominazione/cognome del soggetto
624        																-- 5:	 Nome del soggetto (se persona fisica)
625        																-- 6:  (valori 1/0/NULL) Indicatore di persona fisica (1) o giuridica (0 o NULL)
626        																-- 7:  Codice fiscale del soggetto
627        																-- 8:  Partita IVA del soggetto
628        																-- 9:  Data di nascita/istituzione del soggetto (nel formato del parametro di conf. FMT_STD_DATA)
629        																-- 10: (valori M/F) Sesso del soggetto (se persona fisica): M = Maschio, F = Femmina
630        																-- 11: Codice ISTAT del comune (italiano) di nascita/istituzione del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
631        																-- 12: Nome del comune italiano o della città (se estera) di nascita/istituzione del soggetto
632        																-- 13: Codice ISTAT dello stato di nascita/istituzione del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
633        																-- 14: Nome dello stato di nascita/istituzione del soggetto
634        																-- 15: Codice ISTAT dello stato di cittadinanza del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
635        																-- 16: Nome dello stato di cittadinanza del soggetto
636        																-- 17: Identificativo con cui il soggetto è registrato in rubrica soggetti (se vi è presente)
637        																-- 18: Data e ora di inizio validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida dall'avvio del procedimento
638        																-- 19: Data e ora di fine validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida fino alla conclusione del procedimento
639        																-- 20: (valori 1/0/NULL) Indicatore di soggetto di processo "locked" ovvero non modificabile/cancellabile da applicativo
640        																-- 21: Codice identificativo toponomastico dell'indirizzo a cui inviare corrispondenza al soggetto (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
641        																-- 22: Indirizzo (senza civico) a cui inviare corrispondenza al soggetto (alternativo o ridondante rispetto al campo precedente)
642        																-- 23: Civico (senza appendici, eventualmente indicate in colonna 51) dell'indirizzo a cui inviare corrispondenza al soggetto
643        																-- 24: Interno dell'indirizzo a cui inviare corrispondenza al soggetto
644        																-- 25: Scala dell'indirizzo a cui inviare corrispondenza al soggetto
645        																-- 26: Piano dell'indirizzo a cui inviare corrispondenza al soggetto
646        																-- 27: CAP dell'indirizzo a cui inviare corrispondenza al soggetto
647        																-- 28: Frazione dell'indirizzo a cui inviare corrispondenza al soggetto
648        																-- 29: Codice ISTAT del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
649        																-- 30: Nome del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto
650        																-- 31: Codice ISTAT dello stato dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
651        																-- 32: Nome dello stato dell'indirizzo a cui inviare corrispondenza al soggetto
652        																-- 33: Codice (valori da dizionario) del tipo di indirizzo (valido) presente per il soggetto nella rubrica soggetti e che costituisce l'indirizzo a cui inviare corrispondenza al soggetto
653        																-- 34: Riferimenti telefonici a cui contattare il soggetto
654        																-- 35: Riferimenti fax a cui contattare il soggetto
655        																-- 36: Indirizzo e-mail a cui contattare il soggetto
656        																-- 37: (valori 1/0) Flag di indirizzo e-mail di Posta Elettronica Certificata
657        																-- 38: (valori 1/0) Flag di indirizzo e-mail dichiarato all'Indice PA
658        																-- 39: (valori 1/0) Flag di indirizzo e-mail che è Casella Istituzionale di una PA
659        																-- 40: Note/dettagli utili sulla relazione del sogg. con il procedimento/processo (ad esempio per mettere i requisiti professionali, ESCLUSO REC )
660        																-- 41: numero REC
661        																-- 42: provincia REC
662        																-- 43: data REC
663        																-- 44: titolo di studio/professionale
664        																-- 45: Periodi delle esperienze professionali (date di inizio e fine dei periodi separate da ";"; le date sono nel formato dato dala parametro di config. FMT_STD_DATA))
665        																-- 47: Codice del soggetto in un eventuale anagrafe esterna (ACS o altro)	
666        																-- 48: Zona dell'indirizzo a cui inviare corrispondenza al soggetto
667        																-- 49: Complemento dell'indirizzo a cui inviare corrispondenza al soggetto
668        																-- 50: Tipo toponimo (i.e. via, piazza ecc) dell'indirizzo cui inviare corrispondenza al soggetto; se in input non è valorizzato in output viene ricavato dall'indirizzo in colonna 22
669        																-- 51: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo a cui inviare corrispondenza al soggetto
670        																-- 52: Codice identificativo toponomastico della sede legale/residenza (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
671        																-- 53: Indirizzo (senza civico) della sede legale/residenza (alternativo o ridondante rispetto al campo precedente)
672        																-- 54: Civico (senza appendici che vanno in colonna 67) della sede legale/residenza
673        																-- 55: Interno dell'indirizzo della sede legale/residenza
674        																-- 56: Scala dell'indirizzo della sede legale/residenza
675        																-- 57: Piano dell'indirizzo della sede legale/residenza
676        																-- 58: CAP dell'indirizzo della sede legale/residenza
677        																-- 59: Frazione dell'indirizzo della sede legale/residenza
678        																-- 60: Codice ISTAT del comune italiano dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
679        																-- 61: Nome del comune italiano dell'indirizzo della sede legale/residenza
680        																-- 62: Codice ISTAT dello stato dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
681        																-- 63: Nome dello stato dell'indirizzo della sede legale/residenza
682        																-- 64: Zona dell'indirizzo della sede legale/residenza
683        																-- 65: Complemento dell'indirizzo della sede legale/residenza
684        																-- 66: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo della sede legale/residenza; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 61
685        																-- 67: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo della sede legale/residenza		
686        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
687        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
688        			ErrMsgOut			OUT 		VARCHAR2,						-- Messaggio d'errore
689        			FlgEscludiCtrlSuCFIn	IN		PLS_INTEGER DEFAULT NULL)			-- (1/0/NULL) Se 1 non vengono fatti controlli formali sul cod. fiscale delle persone fisiche
690        			return PLS_INTEGER;										-- Vale 1 se il controllo è andato a buon fine, altrimenti 0
691        
692        	/****** Funzione per il registrare/aggiornare in banca dati i dati di uno o più soggetti esterni di un dato processo/procedimento 	******/
693        	/****** (andando in sostituzione o aggiunta dei soggetti eventualmente già presenti in DB per il dato processo) 				******/
694        	function SetSoggEsterni (
695        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
696        																-- (obblig). Codice identificativo del token di connessione
697        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
698        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig.) Id. del processo/procedimento cui sono relativi i soggetti esterni da settare
699        			FlgAppendRecIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 significa che i soggetti nell'XML in input devono essere aggiunti a quelli eventualmente già presenti in DB per il dato processo, altrimenti li sostituisconoso
700        			NroPosFirstRecIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori da 1 a n; gestito solo se FlgAppendRecIn=1) E' la posizione che deve avere il primo record-soggetto da aggiungere (se posizione già occupata da un record quello e i successivi vengono spostati dopo). Se NULL il/i record vengono aggiunti dopo l'ultimo eventualmente già presente in DB
701        			FlgVldSoggVsRubricaIn	IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 la funzione verifica che i soggetti passati nel clob in input esistano e siano individuabili univocamente in rubrica soggetti e altrimenti dà errore
702        			FlgAlimentaRubricaIn	IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 indica di registrare in rubrica soggetti i soggetti passati nel clob in input che non vi sono già presenti (in base ai criteri stabiliti per il test di esistenza)
703        			FlgCFoPIVAObblIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 significa che verrà controllato che per ciscun soggetto sia specificato almeno uno tra Codice Fiscale e Partita IVA
704        			ListaXMLIn			IN		CLOB,							-- Lista con i dati dei soggetti esterni del processo/procedimento (XML conforme a schema LISTA_STD.xsd) da sostituire o aggiungere a quelli eventualmente già presenti in DB
705        																-- Ogni soggetto è un tag Riga che può contenere le seguenti colonne
706        																-- (ATTENZIONE: per le colonne il cui tag è assente si intende, se soggetto già registrato in DB e da da modificare, che il campo corrispondente debba rimanere invariato rispetto a com'è già in DB):
707        																-- 1:  Identificativo del record, se già registrato in banca dati (univoco in tutta la banca dati)
708        																-- 2:  (obblig.) Ruolo del soggetto nel processo/procedimento
709        																-- 3:  Dettagli della relazione del soggetto con il processo
710        																-- 4:  (obblig.) Denominazione/cognome del soggetto
711        																-- 5:	 Nome del soggetto (se persona fisica)
712        																-- 6:  (valori 1/0/NULL) Indicatore di persona fisica (1) o giuridica (0 o NULL)
713        																-- 7:  Codice fiscale del soggetto
714        																-- 8: Partita IVA del soggetto
715        																-- 9: Data di nascita/istituzione del soggetto (nel formato del parametro di conf. FMT_STD_DATA)
716        																-- 10: (valori M/F) Sesso del soggetto (se persona fisica): M = Maschio, F = Femmina
717        																-- 11: Codice ISTAT del comune (italiano) di nascita/istituzione del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
718        																-- 12: Nome del comune italiano o della città (se estera) di nascita/istituzione del soggetto
719        																-- 13: Codice ISTAT dello stato di nascita/istituzione del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
720        																-- 14: Nome dello stato di nascita/istituzione del soggetto
721        																-- 15: Codice ISTAT dello stato di cittadinanza del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
722        																-- 16: Nome dello stato di cittadinanza del soggetto
723        																-- 17: Identificativo con cui il soggetto è registrato in rubrica soggetti (se vi è presente)
724        																-- 18: Data e ora di inizio validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida dall'avvio del procedimento
725        																-- 19: Data e ora di fine validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida fino alla conclusione del procedimento
726        																-- 20: (valori 1/0/NULL) Indicatore di soggetto di processo "locked" ovvero non modificabile/cancellabile da applicativo
727        																-- 21: Codice identificativo toponomastico dell'indirizzo a cui inviare corrispondenza al soggetto (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
728        																-- 22: Indirizzo (senza civico) a cui inviare corrispondenza al soggetto (alternativo o ridondante rispetto al campo precedente)
729        																-- 23: Civico (senza appendici, eventualmente indicate in colonna 51) dell'indirizzo a cui inviare corrispondenza al soggetto
730        																-- 24: Interno dell'indirizzo a cui inviare corrispondenza al soggetto
731        																-- 25: Scala dell'indirizzo a cui inviare corrispondenza al soggetto
732        																-- 26: Piano dell'indirizzo a cui inviare corrispondenza al soggetto
733        																-- 27: CAP dell'indirizzo a cui inviare corrispondenza al soggetto
734        																-- 28: Frazione dell'indirizzo a cui inviare corrispondenza al soggetto
735        																-- 29: Codice ISTAT del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
736        																-- 30: Nome del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto
737        																-- 31: Codice ISTAT dello stato dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
738        																-- 32: Nome dello stato dell'indirizzo a cui inviare corrispondenza al soggetto
739        																-- 33: Codice (valori da dizionario) del tipo di indirizzo (valido) presente per il soggetto nella rubrica soggetti e che costituisce l'indirizzo a cui inviare corrispondenza al soggetto
740        																-- 34: Riferimenti telefonici a cui contattare il soggetto
741        																-- 35: Riferimenti fax a cui contattare il soggetto
742        																-- 36: Indirizzo e-mail a cui contattare il soggetto
743        																-- 37: (valori 1/0) Flag di indirizzo e-mail di Posta Elettronica Certificata
744        																-- 38: (valori 1/0) Flag di indirizzo e-mail dichiarato all'Indice PA
745        																-- 39: (valori 1/0) Flag di indirizzo e-mail che è Casella Istituzionale di una PA
746        																-- 40: Note/dettagli utili sulla relazione del sogg. con il procedimento/processo (ad esempio per mettere i requisiti professionali, REC ecc)
747        																-- 41: numero REC
748        																-- 42: provincia REC
749        																-- 43: data REC
750        																-- 44: titolo di studio/professionale
751        																-- 45: Periodi delle esperienze professionali (date di inizio e fine dei periodi separate da ";"; le date sono nel formato dato dala parametro di config. FMT_STD_DATA))
752        																-- 46: (valori 1/0) Flag che indica se il soggetto ha svolto un percorso formativo professionalizzante		
753        																-- 47: Codice del soggetto in un eventuale anagrafe esterna (ACS o altro)	
754        																-- 48: Zona dell'indirizzo a cui inviare corrispondenza al soggetto
755        																-- 49: Complemento dell'indirizzo a cui inviare corrispondenza al soggetto
756        																-- 50: Tipo toponimo (i.e. via, piazza ecc) dell'indirizzo cui inviare corrispondenza al soggetto; se in input non è valorizzato in output viene ricavato dall'indirizzo in colonna 22
757        																-- 51: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo a cui inviare corrispondenza al soggetto
758        																-- 52: Codice identificativo toponomastico della sede legale/residenza (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
759        																-- 53: Indirizzo (senza civico) della sede legale/residenza (alternativo o ridondante rispetto al campo precedente)
760        																-- 54: Civico (senza appendici che vanno in colonna 67) della sede legale/residenza
761        																-- 55: Interno dell'indirizzo della sede legale/residenza
762        																-- 56: Scala dell'indirizzo della sede legale/residenza
763        																-- 57: Piano dell'indirizzo della sede legale/residenza
764        																-- 58: CAP dell'indirizzo della sede legale/residenza
765        																-- 59: Frazione dell'indirizzo della sede legale/residenza
766        																-- 60: Codice ISTAT del comune italiano dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
767        																-- 61: Nome del comune italiano dell'indirizzo della sede legale/residenza
768        																-- 62: Codice ISTAT dello stato dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
769        																-- 63: Nome dello stato dell'indirizzo della sede legale/residenza
770        																-- 64: Zona dell'indirizzo della sede legale/residenza
771        																-- 65: Complemento dell'indirizzo della sede legale/residenza
772        																-- 66: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo della sede legale/residenza; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 61
773        																-- 67: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo della sede legale/residenza		
774        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
775        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
776        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
777        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
778        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
779        			ErrMsgOut			OUT 		VARCHAR2,						-- Messaggio d'errore
780        			FlgEscludiCtrlSuCFIn	IN		PLS_INTEGER DEFAULT NULL)			-- (1/0/NULL) Se 1 non vengono fatti controlli formali sul cod. fiscale delle persone fisiche
781        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
782        
783        											
784        	/****		Funzione per ottenere i dati di un soggetto esterno associato ad un dato processo/procedimento	*****/
785        	/****		I dati sono restituiti come tag Riga di una lista XML conforme a schema LISTA_STD.xsd		*****/
786        	function LoadDettSoggEsternoProc (
787        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
788        																-- (obblig). Codice identificativo del token di connessione
789        			IdSoggEsternoIn		IN		DMT_PROCESS_SOGG_EST.ID_RELAZIONE%type,	-- (obblig.) Identificativo del record che rappresenta il soggetto di processo (univoco in tutta la banca dati) di cui caricare i dati
790        			ListaXMLOut			OUT		CLOB,							-- Lista con i dati del soggetto esterno del processo/procedimento (XML conforme a schema LISTA_STD.xsd)
791        																-- Vi è un solo tag Riga che contiene le seguenti colonne:
792        																-- 1:  Identificativo del record (univoco in tutta la banca dati)
793        																-- 2:  N.ro posizione del soggetto tra i soggetti esterni del processo/procedimento
794        																-- 3:  Ruolo del soggetto nel processo/procedimento
795        																-- 4:  Dettagli della relazione del soggetto con il processo
796        																-- 5:  Denominazione/cognome e nome del soggetto
797        																-- 6:  Cognome del soggetto (se persona fisica)
798        																-- 7:	 Nome del soggetto (se persona fisica)
799        																-- 8:  Indicatore si persona fisica (1) o giuridica (0)
800        																-- 9:  Codice fiscale del soggetto
801        																-- 10: Partita IVA del soggetto
802        																-- 11: Data di nascita/istituzione del soggetto (nel formato del parametro di conf. FMT_STD_DATA)
803        																-- 12: (valori M/F) Sesso del soggetto (se persona fisica): M = Maschio, F = Femmina
804        																-- 13: Codice ISTAT del comune (italiano) di nascita/istituzione del soggetto
805        																-- 14: Nome del comune italiano o della città (se estera) di nascita/istituzione del soggetto
806        																-- 15: Codice ISTAT dello stato di nascita/istituzione del soggetto
807        																-- 16: Nome dello stato di nascita/istituzione del soggetto
808        																-- 17: Codice ISTAT dello stato di cittadinanza del soggetto
809        																-- 18: Nome dello stato di cittadinanza del soggetto
810        																-- 19: Identificativo con cui il soggetto è registrato in rubrica soggetti (se vi è presente)
811        																-- 20: Data e ora di inizio validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
812        																-- 21: Data e ora di fine validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
813        																-- 22: Timestamp di creazione del soggetto di processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
814        																-- 23: Descrizione dell'utente di creazione del soggetto di processo/procedimento
815        																-- 24: Timestamp di ultima modifica del soggetto di processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
816        																-- 25: Descrizione dell'utente di ultima modifica del soggetto di processo/procedimento
817        																-- 26: (valori 1/0) Indicatore di soggetto di processo riservato dal sistema e non modificabile da applicativo
818        																-- 27: Codice identificativo toponomastico dell'indirizzo a cui inviare corrispondenza al soggetto (se censito nella toponomastica del sistema)
819        																-- 28: Indirizzo (senza civico) a cui inviare corrispondenza al soggetto (alternativo o ridondante rispetto al campo precedente). Non contiene il tipo toponimo se questo è in colonna 58
820        																-- 29: Civico (senza appendici che sono in colonna 59) dell'indirizzo a cui inviare corrispondenza al soggetto. 
821        																-- 30: Interno dell'indirizzo a cui inviare corrispondenza al soggetto
822        																-- 31: Scala dell'indirizzo a cui inviare corrispondenza al soggetto
823        																-- 32: Piano dell'indirizzo a cui inviare corrispondenza al soggetto
824        																-- 33: CAP dell'indirizzo a cui inviare corrispondenza al soggetto
825        																-- 34: Frazione dell'indirizzo a cui inviare corrispondenza al soggetto
826        																-- 35: Codice ISTAT del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
827        																-- 36: Nome del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto
828        																-- 37: Codice ISTAT dello stato dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
829        																-- 38: Nome dello stato dell'indirizzo a cui inviare corrispondenza al soggetto
830        																-- 39: Codice (valori da dizionario) del tipo di indirizzo (valido) presente per il soggetto nella rubrica soggetti e che costituisce l'indirizzo a cui inviare corrispondenza al soggetto
831        																-- 40: Riferimenti telefonici a cui contattare il soggetto
832        																-- 41: Riferimenti fax a cui contattare il soggetto
833        																-- 42: Indirizzo e-mail a cui contattare il soggetto
834        																-- 43: (valori 1/0) Flag di indirizzo e-mail di Posta Elettronica Certificata
835        																-- 44: (valori 1/0) Flag di indirizzo e-mail dichiarato all'Indice PA
836        																-- 45: (valori 1/0) Flag di indirizzo e-mail che è Casella Istituzionale di una PA
837        																-- 46: Note/dettagli utili sulla relazione del sogg. con il procedimento/processo (ad esempio per mettere i requisiti professionali, REC ecc)
838        																-- 47: Targa della provincia del comune dell'indirizzo a cui inviare corrispondenza al soggetto
839        																-- 48: Targa della provincia del comune di nascita del soggetto
840        																-- 49: numero REC
841        																-- 50: provincia REC
842        																-- 51: data REC
843        																-- 52: titolo di studio/professionale
844        																-- 53: Periodi delle esperienze professionali (date di inizio e fine dei periodi separate da ";"; le date sono nel formato dato dala parametro di config. FMT_STD_DATA))
845        																-- 54: (valori 1/0) Flag che indica se il soggetto ha svolto un percorso formativo professionalizzante		
846        																-- 55: Codice del soggetto in un eventuale anagrafe esterna (ACS o altro)	
847        																-- 56: Zona dell'indirizzo a cui inviare corrispondenza al soggetto
848        																-- 57: Complemento dell'indirizzo a cui inviare corrispondenza al soggetto
849        																-- 58: Tipo toponimo (i.e. via, piazza ecc) dell'indirizzo cui inviare corrispondenza al soggetto; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 28
850        																-- 59: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo a cui inviare corrispondenza al soggetto
851        																-- 60: Codice identificativo toponomastico della sede legale/residenza (se censito nella toponomastica del sistema)
852        																-- 61: Indirizzo (senza civico) della sede legale/residenza (alternativo o ridondante rispetto al campo precedente). Non contiene il tipo toponimo se questo è in colonna 58
853        																-- 62: Civico (senza appendici che sono in colonna 59) della sede legale/residenza. 
854        																-- 63: Interno della sede legale/residenza
855        																-- 64: Scala della sede legale/residenza
856        																-- 65 Piano della sede legale/residenza
857        																-- 66: CAP della sede legale/residenza
858        																-- 67: Frazione della sede legale/residenza
859        																-- 68: Codice ISTAT del comune italiano della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
860        																-- 69: Nome del comune italiano della sede legale/residenza
861        																-- 70: Codice ISTAT dello stato della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
862        																-- 71: Nome dello stato della sede legale/residenza
863        																-- 72: Targa della provincia della sede legale/residenza
864        																-- 73: Zona dell'indirizzo di sede legale/residenza
865        																-- 74: Complemento dell'indirizzo di sede legale/residenza
866        																-- 75: Tipo toponimo (i.e. via, piazza ecc) dell'indirizzo di sede legale/residenza
867        																-- 76: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo di sede legale/residenza
868        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
869        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
870        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
871        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
872        
873        	/****** Funzione per il aggiungere/modificare in banca dati i dati un soggetto esterno di un dato processo/procedimento 	******/
874        	/****** il soggetto viene passato come tag Riga di un XML con schema LISTA_STD.xsd								******/
875        	function IUSoggettoEsterno(
876        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
877        																-- (obblig). Codice identificativo del token di connessione
878        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
879        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig.) Id. del processo/procedimento cui sono relativi i soggetti esterni da settare
880        			FlgVldSoggVsRubricaIn	IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 la funzione verifica che i soggetti passati nel clob in input esistano e siano individuabili univocamente in rubrica soggetti e altrimenti dà errore
881        			FlgAlimentaRubricaIn	IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 indica di registrare in rubrica soggetti i soggetti passati nel clob in input che non vi sono già presenti (in base ai criteri stabiliti per il test di esistenza)
882        			FlgCFoPIVAObblIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 significa che verrà controllato che per ciscun soggetto sia specificato almeno uno tra Codice Fiscale e Partita IVA
883        			ListaXMLIn			IN		CLOB,							-- Lista con i dati del soggetto esterno del processo/procedimento (XML conforme a schema LISTA_STD.xsd) da inserire o modificare
884        																-- Il soggetto è un tag Riga che contiene le seguenti colonne (alcune sono inutlizzate, e servono solo affinchè le colonne siano le stesse restituite in caricamento della jsp):
885        																-- 1:  Identificativo del record, se soggetto già registrato in banca dati, ovvero in caso di modifica (univoco in tutta la banca dati)
886        																-- 2:  <Colonna INUTILIZZATA>
887        																-- 3:  (obblig.) Ruolo del soggetto nel processo/procedimento
888        																-- 4:  Dettagli della relazione del soggetto con il processo
889        																-- 5:  (obblig. se persona giuridica)Denominazione/cognome e nome del soggetto
890        																-- 6:  Cognome del soggetto (obblig. se persona fisica)
891        																-- 7:	 Nome del soggetto (obblig. se persona fisica)
892        																-- 8:  Indicatore di persona fisica (1) o giuridica (0 o NULL)
893        																-- 9:  Codice fiscale del soggetto
894        																-- 10: Partita IVA del soggetto
895        																-- 11: Data di nascita/istituzione del soggetto (nel formato del parametro di conf. FMT_STD_DATA)
896        																-- 12: (valori M/F/NULL) Sesso del soggetto (se persona fisica): M = Maschio, F = Femmina
897        																-- 13: Codice ISTAT del comune (italiano) di nascita/istituzione del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
898        																-- 14: Nome del comune italiano o della città (se estera) di nascita/istituzione del soggetto
899        																-- 15: Codice ISTAT dello stato di nascita/istituzione del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
900        																-- 16: Nome dello stato di nascita/istituzione del soggetto
901        																-- 17: Codice ISTAT dello stato di cittadinanza del soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
902        																-- 18: Nome dello stato di cittadinanza del soggetto
903        																-- 19: Identificativo con cui il soggetto è registrato in rubrica soggetti (se vi è presente)
904        																-- 20: Data e ora di inizio validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
905        																-- 21: Data e ora di fine validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
906        																-- 22: <Colonna INUTILIZZATA>
907        																-- 23: <Colonna INUTILIZZATA>
908        																-- 24: <Colonna INUTILIZZATA>
909        																-- 25: <Colonna INUTILIZZATA>
910        																-- 26: <Colonna INUTILIZZATA>
911        																-- 27: Codice identificativo toponomastico dell'indirizzo a cui inviare corrispondenza al soggetto (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
912        																-- 28: Indirizzo (senza civico) a cui inviare corrispondenza al soggetto (alternativo o ridondante rispetto al campo precedente)
913        																-- 29: Civico (senza appendici che vanno in colonna 59) dell'indirizzo a cui inviare corrispondenza al soggetto
914        																-- 30: Interno dell'indirizzo a cui inviare corrispondenza al soggetto
915        																-- 31: Scala dell'indirizzo a cui inviare corrispondenza al soggetto
916        																-- 32: Piano dell'indirizzo a cui inviare corrispondenza al soggetto
917        																-- 33: CAP dell'indirizzo a cui inviare corrispondenza al soggetto
918        																-- 34: Frazione dell'indirizzo a cui inviare corrispondenza al soggetto
919        																-- 35: Codice ISTAT del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
920        																-- 36: Nome del comune italiano dell'indirizzo a cui inviare corrispondenza al soggetto
921        																-- 37: Codice ISTAT dello stato dell'indirizzo a cui inviare corrispondenza al soggetto (viene considerato solo se è valorizzata anche la colonna successiva)
922        																-- 38: Nome dello stato dell'indirizzo a cui inviare corrispondenza al soggetto
923        																-- 39: Codice (valori da dizionario) del tipo di indirizzo (valido) presente per il soggetto nella rubrica soggetti e che costituisce l'indirizzo a cui inviare corrispondenza al soggetto
924        																-- 40: Riferimenti telefonici a cui contattare il soggetto
925        																-- 41: Riferimenti fax a cui contattare il soggetto
926        																-- 42: Indirizzo e-mail a cui contattare il soggetto
927        																-- 43: (valori 1/0) Flag di indirizzo e-mail di Posta Elettronica Certificata
928        																-- 44: (valori 1/0) Flag di indirizzo e-mail dichiarato all'Indice PA
929        																-- 45: (valori 1/0) Flag di indirizzo e-mail che è Casella Istituzionale di una PA
930        																-- 46: Note/dettagli utili sulla relazione del sogg. con il procedimento/processo (ad esempio per mettere i requisiti professionali, REC ecc)
931        																-- 47: <Colonna INUTILIZZATA>
932        																-- 48: <Colonna INUTILIZZATA>
933        																-- 49: numero REC
934        																-- 50: provincia REC
935        																-- 51: data REC
936        																-- 52: titolo di studio/professionale
937        																-- 53: Periodi delle esperienze professionali (date di inizio e fine dei periodi separate da ";"; le date sono nel formato dato dala parametro di config. FMT_STD_DATA))
938        																-- 54: (valori 1/0) Flag che indica se il soggetto ha svolto un percorso formativo professionalizzante		
939        																-- 55: Codice del soggetto in un eventuale anagrafe esterna (ACS o altro)	
940        																-- 56: Zona dell'indirizzo a cui inviare corrispondenza al soggetto
941        																-- 57: Complemento dell'indirizzo a cui inviare corrispondenza al soggetto
942        																-- 58: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo cui inviare corrispondenza al soggetto; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 28
943        																-- 59: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo a cui inviare corrispondenza al soggetto
944        																-- 60: Codice identificativo toponomastico della sede legale/residenza (se censito nella toponomastica del sistema; viene considerato solo se è valorizzata anche la colonna successiva)
945        																-- 61: Indirizzo (senza civico) della sede legale/residenza (alternativo o ridondante rispetto al campo precedente)
946        																-- 62: Civico (senza appendici che vanno in colonna 75) della sede legale/residenza
947        																-- 63: Interno dell'indirizzo della sede legale/residenza
948        																-- 64: Scala dell'indirizzo della sede legale/residenza
949        																-- 65: Piano dell'indirizzo della sede legale/residenza
950        																-- 66: CAP dell'indirizzo della sede legale/residenza
951        																-- 67: Frazione dell'indirizzo della sede legale/residenza
952        																-- 68: Codice ISTAT del comune italiano dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
953        																-- 69: Nome del comune italiano dell'indirizzo della sede legale/residenza
954        																-- 70: Codice ISTAT dello stato dell'indirizzo della sede legale/residenza (viene considerato solo se è valorizzata anche la colonna successiva)
955        																-- 71: Nome dello stato dell'indirizzo della sede legale/residenza
956        																-- 72: Zona dell'indirizzo della sede legale/residenza
957        																-- 73: Complemento dell'indirizzo della sede legale/residenza
958        																-- 74: Tipo toponimo (i.e. via, piazza ecc) dell'ndirizzo della sede legale/residenza; se in input non è valorizzato viene ricavato dall'indirizzo in colonna 61
959        																-- 75: Appendici (esponente, bis/ter, colore ecc) del N.ro civico dell'indirizzo della sede legale/residenza
960        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,		-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
961        																			-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
962        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
963        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
964        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
965        			ErrMsgOut			OUT 		VARCHAR2,						-- Messaggio d'errore
966        			FlgEscludiCtrlSuCFIn	IN		PLS_INTEGER DEFAULT NULL)			-- (1/0/NULL) Se 1 non vengono fatti controlli formali sul cod. fiscale delle persone fisiche
967        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
968        
969        	/****** Funzione per il eliminare dalla banca dati un soggetti esterno relativo ad un dato processo/procedimento 	******/
970        	/****** Il soggetto viene individuato attraverso il suo id. ID_RELAZIONE							******/
971        	function DSoggettoEsterno (
972        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
973        																-- (obblig). Codice identificativo del token di connessione
974        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
975        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type DEFAULT NULL,		
976        																-- Id. del processo/procedimento cui sono relativi i soggetti esterni da cancellare
977        			IdSoggEsternoIn		IN		DMT_PROCESS_SOGG_EST.ID_RELAZIONE%type,	-- (obblig.) Identificativo del record che rappresenta il soggetto di processo (univoco in tutta la banca dati) da eliminare
978        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
979        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
980        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
981        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
982        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
983        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
984        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
985        
986        	/***** Funzione per ottenere le annotazioni di un processo *****/										
987        	function GetNote(
988        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,	-- (obblig). Codice identificativo del token di connessione
989        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,		-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
990        			IdProcessIn			IN 		DMT_PROCESSES.ID_PROCESS%type,			-- (obblig.) Id. del processo di cui mostrare le note
991        			NoteOut			    OUT     DMT_PROCESSES.NOTE%type,				-- Annotazioni
992        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
993        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
994        			ErrMsgOut				OUT 		VARCHAR2)						-- Messaggio d'errore
995        			return PLS_INTEGER;											-- Vale 1 se tutto è andato a buon fine, altrimenti 0
996        				
997        	/******* Funzione per ricercare le unità documentarie relative ad un dato processo *******/
998        	function TrovaProcessUD (
999        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1000        																-- (obblig). Codice identificativo del token di connessione
1001        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1002        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig.) Id. del processo/procedimento cui sono relative le unità documentarie da trovare
1003        			FlgTpOperSuUDIn		IN		PLS_INTEGER DEFAULT NULL,			-- Flag del tipo di operazione che deve essere possibile sulle UD da estrarre:
1004        																-- NULL = sola Visualizzazione
1005        																-- 1 = Gestione (modifica, cancellazione ecc.) da parte dell'utente di lavoro
1006        																-- 2 = Firma da parte dell'utente di lavoro
1007        			ActivityNameIn		IN		DMT_PROCESS_HISTORY.ACTIVITY_NAME_WF%type DEFAULT NULL,
1008        																-- Nome identificativo dell'attività WF (ACTIVITY_NAME nel caso di Orcale WF) dell'iter per cui serve estrarre la lista delle UD
1009        																-- Da valorizzare solo nel caso di processo/proced. guidato da WF
1010        			FlgFmtEstremiRegIO	IN OUT	VARCHAR2,						-- Formato con cui mostrare gli estremi di registrazione/numerazione dei documenti trovati:
1011        																-- Valori possibili:
1012        																-- <CATEGORIA> = Descrizione della categoria di registrazione/numerazione
1013        																-- <SIGLA> = Sigla di registrazione/numerazione
1014        																-- <ANNO> = Anno di registrazione/numerazione
1015        																-- <NRO> = N.ro di registrazione/numerazione
1016        																-- <DATA> = Data di registrazione (nel formato dato dal parametro di config. FMT_STD_DATA del sogg. prod. /AOO di appartenenza dell'unità documentaria)
1017        																-- <ORA> = Orario di registrazione (nel formato HH24:MI)
1018        																-- Può anche essere una concatenazione dei valori precedenti (tutto ciò che è fuori dalle angle brackets si intende stringa fissa di separazione)
1019        																-- ad es: <NRO>/<ANNO>; <SIGLA>/<ANNO>/<NRO> del <DATA>
1020        			FlgPreimpostaFiltroIn	IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1 i filtri, l'ordinamento e FlgFmtEstremiRegIO vengono settati secondo le impostazioni dell'utente di lavoro, altrimenti restano come passati in input
1021        			--------------- inizio filtri di ricerca-------------------
1022        			CondSuTipoDocIO		IN OUT	VARCHAR2,						-- 1° filtro di ricerca: se valorizzato la lista viene ristretta alle UD con documenti il cui tipo (ID_DOC_TYPE) soddisfa il filtro
1023        																-- deve essere valorizzato con stringhe tipo:
1024        																--	'<ID_DOC_TYPE>' (si intende come se fosse '=<ID_DOC_TYPE>')
1025        																--	'=<ID_DOC_TYPE>'
1026        																--	'in (<ID_DOC_TYPE_1>, <ID_DOC_TYPE_2>, ...., <ID_DOC_TYPE_n>)'
1027        																--	'!=<ID_DOC_TYPE>'
1028        																--	'not in (<ID_DOC_TYPE_1>, <ID_DOC_TYPE_2>, ...., <ID_DOC_TYPE_n>)'
1029        																-- o una loro concatenazione con ' AND '
1030        																-- dove <ID_DOC_TYPE_n> è l'id. di un tipo di documento
1031        			FlgAcqProdIO		IN OUT	VARCHAR2,						-- (valori A/P) 2° filtro di ricerca: se valorizzato a P la lista è ristretta ai documenti prodotti dal sogg. prod./AOO (in uscita/interni), se A a quelli acquisiti (in entrata)
1032        			CodRuoloInProcIO		IN OUT	DMT_PROCESS_UD.COD_RUOLO_DOC%type,		-- 3° filtro di ricerca: Codice del ruolo del documento (o meglio dell'unità doc. di appartenenza) nel processo (documento di avvio, intermedio, atto finale ecc.). Valori codificati in apposita entrata di dizionario
1033        			DesRuoloInProcIO		IN OUT	VARCHAR2,						-- 4° filtro di ricerca: Ruolo del documento (o meglio dell'unità doc. di appartenenza) nel processo (documento di avvio, intermedio, atto finale ecc.). Valori possibili da apposita entrata di dizionario
1034        			CodStatoInProcIO		IN OUT	DMT_PROCESS_UD.COD_STATO_UD_IN_PROC%type,	-- 5° filtro di ricerca: Codice dello stato del documento (o meglio dell'unità doc. di appartenenza) nel processo. Valori codificati in apposita entrata di dizionario
1035        			DesStatoInProcIO		IN OUT	VARCHAR2,						-- 6° filtro di ricerca: Stato del documento (o meglio dell'unità doc. di appartenenza) nel processo. Valori possibili da apposita entrata di dizionario
1036        			AnnoRegIO			IN OUT	PLS_INTEGER,					-- 7° filtro di ricerca: Anno di registrazione/numerazione del documento
1037        			NroRegIO			IN OUT	PLS_INTEGER,					-- 8° filtro di ricerca: N.ro di registrazione/numerazione del documento
1038        			OggettoDocIO		IN OUT	DMT_DOCUMENTS.DES_OGG%type,			-- 9° filtro di ricerca: parola/e contenute nell'oggetto del documento (il primario dell'UD) (ricerca di tipo CONTAINS)
1039        			IdUDIO			IN OUT	DMT_UNITA_DOC.ID_UD%TYPE, 			-- 10° filtro di ricerca: Identificativo dell'unità documentaria da ricercare
1040        			IdDocIO			IN OUT	DMT_DOCUMENTS.ID_DOC%TYPE, 			-- 11° filtro di ricerca: Identificativo di un documento che appartiene all'unità documentaria da ricercare
1041        			------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1042        			ColOrderByIO		IN OUT	VARCHAR2,						-- Indica il/i numeri della/e colonna dell'XML (CLOB ListaXMLOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne da 1 a 13). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1043        																-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1044        																-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1045        			FlgDescOrderByIO  	IN OUT	VARCHAR2,						-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1046        																-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.
1047        			FlgSenzaPaginazioneIn 	IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1048        			NroPaginaIO      		IN OUT	PLS_INTEGER,                  		-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1049           			BachSizeIO			IN OUT	PLS_INTEGER,					-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)
1050        																-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro
1051        			OverFlowLimitIn		IN		PLS_INTEGER DEFAULT NULL,			-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1052        			FlgSenzaTotIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1053        			NroTotRecOut		OUT		PLS_INTEGER,					-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1054             		NroRecInPaginaOut 	OUT   	PLS_INTEGER,                  	   	-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1055        			------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1056        			ListaXMLOut				OUT		NOCOPY CLOB,				-- Lista delle UD trovate (XML conforme a schema LISTA_STD.xsd)
1057        																-- Ogni UD è un tag Riga che può contenere le seguenti colonne:
1058        																-- 1:  Identificativo dell'unità documetaria
1059        																-- 2:  Identificativo del documento primario dell'UD
1060        																-- 3:  N.ro ordine dell'UD tra quelle del processo/procedimento
1061        																-- 4:  Identificativo del tipo del documento primario
1062        																-- 5:	 Descrizione del tipo del documento primario
1063        																-- 6:  Estremi con cui mostrare l'UD nel dettaglio di un evento cui sia collegata
1064        																-- 7:  Estremi di registrazione a Prot. Gen. (nel formato richiesto con FlgFmtEstremiRegIO)
1065        																-- 8:  Data e ora di registrazione a Prot. Gen. (nel formato dato dal parametro di config. FMT_STD_TIMESTMP)
1066        																-- 9:  Estremi di registrazione a Repertorio (nel formato richiesto con FlgFmtEstremiRegIO)
1067        																-- 10: Data e ora di registrazione a Repertorio (nel formato dato dal parametro di config. FMT_STD_TIMESTMP)
1068        																-- 11: Estremi di altra numerazione che non sia nè un protocollo nè un repertorio (nel formato richiesto con FlgFmtEstremiRegIO)
1069        																-- 12: Data e ora di numerazione che non sia nè un protocollo nè un repertorio (nel formato dato dal parametro di config. FMT_STD_TIMESTMP)
1070        																-- 13: Descrizione/oggetto del documento primario
1071        																-- 14: Ruolo dell'UD nel processo
1072        																-- 15: Stato dell'UD nel processo
1073        																-- 16: Annotazioni sulla relazione dell'UD con il processo
1074        																-- 17: N.ro ultima versione elettronica del doc. primario che è valida visibile all'utente. Se NULL significa che non c'è vers. elettronica valida visibile all'utente di lavoro.
1075        																-- 18: Nome con cui mostrare il file di ultima versione elettronica del doc. primario che è valida e visibile all'utente
1076        																-- 19: N.ro di documemti dell'UD che hanno versione elettronica valida e visibile all'utente
1077        																-- 20: Indicazione di chi e da quando sta bloccando l'UD
1078        																-- 21: (valori 1/0) Indica se l'utente di lavoro ha le abilitazioni per modificare l'UD (tiene conto anche del fatto che la relazione processo-UD sia locked)
1079        																-- 22: (valori 1/0) Indica se l'utente di lavoro ha le abilitazioni per cancellare l'UD (tiene conto anche del fatto che la relazione processo-UD sia locked)
1080        																-- 23: (valori 1/0) Indica se l'utente di lavoro ha le abilitazioni per firmare il documento primario dell'UD. 
1081        																-- 24: (valori 1/0) Indica se l'utente di lavoro non ha ancora firmato e può firmare il documento primario dell'UD(tenuto anche conto, qualora la firma debba essere digitale, che vi sia il file). Se l'utente ha firmato digitalmente ma fuori dal sistema il file può risultargli ancora da firmare.
1082        																-- 25: Timestamp di associazione dell'UD al processo (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
1083        																-- 26: Descrizione dell'utente di associazione dell'UD al processo
1084        																-- 27: Timestamp di creazione dell'UD (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
1085        																-- 28: Descrizione dell'utente di creazione dell'UD
1086        																-- 29: Timestamp di ultima modifica di metadati e/o versioni elettroniche dell'UD (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
1087        																-- 30: Descrizione dell'utente di ultima modifica di metadati e/o versioni elettroniche dell'UD 
1088        																-- 31: (valori A/P) Indica se UD acquisita o prodotta
1089        			FlgAbilInsOut	 		OUT 		PLS_INTEGER ,            		-- (valori 1/0) Se 1 si ha abilitazione a inserimento di UD
1090        			FlgAbilUpdOut 			OUT 		PLS_INTEGER ,            		-- (valori 1/0) Se 1 si ha abilitazione a modifica di UD
1091        			FlgAbilDelOut 			OUT 		PLS_INTEGER,            		-- (valori 1/0) Se 1 si ha abilitazione a cancellazione di UD
1092        			ErrContextOut			OUT		VARCHAR2,					-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1093        			ErrCodeOut				OUT		PLS_INTEGER,				-- N.ro errore di uscita
1094        			ErrMsgOut				OUT 		VARCHAR2)					-- Messaggio d'errore
1095        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1096        	
1097        	/****** funzione per caricare i dati di un'unità documentaria legata ad un processo/procedimento (quelli previsti nelle GUI di gestione/visualizzazione processi/procedimenti) ******/
1098        	function LoadDettProcessUD(
1099        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1100        																	-- (obblig). Codice identificativo del token di connessione
1101        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1102        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type, 		-- (obblig) Identificativo del processo/procedimento
1103        			IdUDIO   				IN OUT   	DMT_UNITA_DOC.ID_UD%type, 			-- (obblig.) Identificativo dell'unità documentaria di cui caricare il dettaglio
1104        			IdDocPrimarioOut			OUT		DMT_DOCUMENTS.ID_DOC%type,			-- Id. del documento primario dell'UD
1105        			SiglaProtOut			OUT		VARCHAR2,						-- Sigla di protocollo
1106        			AnnoProtOut				OUT		PLS_INTEGER,					-- Anno di protocollo
1107        			NroProtOut				OUT		PLS_INTEGER,					-- N.ro di protocollo
1108        			DtProtOut				OUT		VARCHAR2,						-- Data di protocollo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1109        			FlgProtRichiestaOut		OUT		PLS_INTEGER,					-- (valori 1/NULL) Se 1 indica che la protocollazione è stata richiesta dal sistema e quindi non si può richiedere nuovamente
1110        			IdTipoDocPrimarioOut		OUT		DMT_DOC_TYPES.ID_DOC_TYPE%type,		-- Id. del tipo del documento primario
1111        			NomeTipoDocPrimarioOut		OUT		DMT_DOC_TYPES.NOME_DOC_TYPE%type,		-- Nome del tipo del documento primario
1112        			NroLastVerPrimarioOut		OUT		PLS_INTEGER,					-- N.ro dell'eventuale ultima versione elettronica del doc. primario visibile all'utente
1113        			DisplayFilenamePrimarioOut	OUT		VARCHAR2,						-- Nome con cui mostrare il file corrispondente all'eventuale ultima versione elettronica del doc. primario visibile all'utente
1114        			OggettoOut				OUT		DMT_DOCUMENTS.DES_OGG%type, 			-- Oggetto del documento primario
1115        			MittDestOut				OUT		VARCHAR2,						-- Mittente/i o destinatario/i dell'unità documentaria (se più di uno separati da ;)
1116        			FlgMittDestOut			OUT		VARCHAR2,						-- (valori M/D/NULL) Indica cosa rappresenta l'output precedente: M=Mittenti, D=Destinatari
1117        			EstremiProcessOut		OUT		VARCHAR2,						-- Estremi del procedimento/processo di appartenenza
1118        			RowidOut				OUT		VARCHAR2,						-- Rowid del record del documento primario
1119        			AttributiAddOut			OUT		NOCOPY CLOB,					-- Lista degli eventuali ulteriori attributi con cui sono caratterizzati l'unità documentaria e il suo doc. primario (XML conforme a schema LISTA_STD.xsd)
1120        																	-- Ogni attributo è un tag "Riga" che contiene le seguenti colonne:
1121        																	-- 1: N.ro (valori da 1 a n) del riquadro (fieldset) in cui mostrare l'attributo
1122        																	-- 2: Nome identificativo dell'attributo (ATTR_NAME)
1123        																	-- 3: Label del campo con cui rappresentare l'attributo 
1124        																	-- 4: Tipo di attributo. Valori: DATE, DATETIME, TEXT, TEXT-AREA, CHECK, INTEGER, EURO, DECIMAL, COMBO-BOX, LISTA
1125        																	-- 5: N.ro massimo di caratteri/cifre
1126        																	-- 6: Larghezza del campo con cui rappresentare l'attributo (size)
1127        																	-- 7: Valore dell'attributo
1128        																	-- 8: Label del riquadro (fieldset) in cui mostrare l'attributo
1129        																	-- 9: (valori 1/0) 1 indica che l'attributo è obbligatorio, 0 che è facoltativo
1130        																	-- 10: Altezza (in nro righe) del campo con cui rappresentare l'attributo (se TEXT-AREA)
1131        																	-- 11:(valori 1/0) 1 indica se l'attributo è modificabile, 0 che è in sola visualizzazione   
1132        			FlgMostraAltriAttrOut	OUT		PLS_INTEGER,					-- (valori 1/0) Se 1 nella GUI vanno mostrati gli attributi addizionali (ce ne sono di visibile all'utente), se 0 no
1133        			FlgTipoProvOut			OUT		DMT_DOC_TYPES.FLG_TIPO_PROV%type,   -- Tipo di provenienza del doc primario della UD			
1134        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1135        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
1136        			ErrMsgOut				OUT 	VARCHAR2)						-- Messaggio d'errore
1137        			return PLS_INTEGER;											-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1138        
1139        	/******* funzione per associare/modificare l'associazione di un'unità documentaria ad un processo/procedimento (non nel senso di associazione quale processo/procedimento sull'UD) 		******/
1140        	/******* se il processo è relativo ad un folder cerca di inserire l'UD nel folder se non gli appartiene già, salvo che CodStatoUDInProcIn = DEF_COD_STATO_DOC_BOZZA						******/	
1141        	function IUAssociazioneUDVsProc(
1142        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1143        																	-- (obblig). Codice identificativo del token di connessione
1144        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1145        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type, 		-- (obblig) Identificativo del processo/procedimento cui associare l'unità documentaria.
1146        																	-- Se l'unità è già associata si va in modifica dell'associazione già esistente
1147        			IdUDIn				IN		DMT_UNITA_DOC.ID_UD%type,			-- Id. dell'unità documentaria
1148        			NroOrdineVsProcIn			IN		PLS_INTEGER DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
1149        																	-- N.ro che indica la posizione dell'UD tra tutte quelle associate al processo/procedimento. Se n.ro ordine già associato quelli >= shiftano avanti di 1.
1150        																	-- Se NULL il n.ro d'ordine assegnato è l'ultimo+1
1151        			FlgAcqProdIn			IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1152        																	-- (valori A/P/NULL) Indica se l'unità doc. è stata acquisita (A) o prodotta (P) nel processo/procedimento. 
1153        			CodRuoloDocInProcIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1154        																	-- Codice che indica il ruolo dell'unità documentaria nel processo (ad es. doc. di avvio, documento finale, ecc). Valori possibili codificati in dizionario.
1155        			CodStatoUDInProcIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1156        																	-- Codice che indica lo stato dell'unità documentaria nel processo. Valori possibili codificati in dizionario.
1157        			NoteAssociazioneIn   		IN		DMT_PROCESS_UD.NOTE%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1158        																	-- Motivazioni/dettagli sull'associazione dell'unità documentaria al processo                
1159        			FlgLockedIn				IN		PLS_INTEGER DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
1160        																	-- (valori 1/0/NULL) Se 1 indica che l'associazione è riservata dal sistema e non cancellabile/modificabile da GUI      
1161        			AttributiAddIn			IN		CLOB DEFAULT NULL,				-- XML contenente nomi e valori degli attributi dinamici dell'associazione che sono da aggiornare (conforme allo schema SezioneCache.xsd) 
1162        																	-- Gli attributi già presenti in DB e per i quali non c'è corrispondente nell'XML restano invariati
1163        																	-- Per tutti gli attributi vale quanto segue:
1164        																	-- Un attributo da settare è un tag "Variabile" dell'XML il cui tag "Nome" contiene il nome identificativo dell'attributo (ATTR_NAME di DMT_ATTRIBUTES_DEF)
1165        																	-- Un attributo da settare è una variabile con tag "ValoreSemplice" se è un attributo a singolo valore e non strutturato (cioè con tipo diverso da COMPLEX)
1166        																	-- altrimenti è una variabile con tag "Lista" che ha un'unica colonna con "Nro" pari a 1 se l'attributo non è strutturato, che ha invece tante colonne quanti gli attributi componenti (ordinate in base al loro NRO_ORD_IN_SUP) se l'attributo è complesso 
1167        																	-- Nel caso di variabili con tag "Lista" i valori specificati nell'XML si aggiungono o sostituiscono quelli già presenti in DB a seconda che nell'XML sia presente o meno una variabile con tag "Nome" pari a #Append_<Nome attributo> e tag "ValoreSemplice" pari a 1  
1168        																	-- In particolare se non sono specificati valori nell'XML (tag Lista vuoto) e se i valori non sono da aggiungere significa che tutti i valori dell'attributo già presenti in DB vanno rimossi
1169        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1170        																	-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1171        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1172        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1173        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
1174        			ErrMsgOut				OUT 		VARCHAR2)						-- Messaggio d'errore
1175        			return PLS_INTEGER;											-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1176        
1177        	/******* funzione per eliminare l'associazione di un'unità documentaria ad un processo/procedimento (non nel senso di associazione quale processo/procedimento sull'UD) 		******/
1178        	/******* se il processo è relativo ad un folder NON cerca anche di togliere l'UD dal folder se gli appartiene già 				 							******/
1179        	function DAssociazioneUDVsProc(
1180        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1181        																	-- (obblig). Codice identificativo del token di connessione
1182        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1183        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type, 		-- (obblig) Identificativo del processo/procedimento cui associare l'unità documentaria.
1184        																	-- Se l'unità è già associata si va in modifica dell'associazione già esistente
1185        			IdUDIn				IN		DMT_UNITA_DOC.ID_UD%type,			-- Id. dell'unità documentaria
1186        			MotiviIn				IN		DMT_ACTIVITIES.NOTE%type,			-- Motivi della disassociazione
1187        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1188        																	-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1189        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1190        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1191        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
1192        			ErrMsgOut				OUT 		VARCHAR2)						-- Messaggio d'errore
1193        			return PLS_INTEGER;											-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1194        			
1195        	/*********** funzione per settare (anche a NULL) l'oggetto (folder, unità documentaria o sua copia) cui è relativo un dato processo/procedimento ********/
1196        	function SetObjProcessFor(
1197        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1198        																	-- (obblig). Codice identificativo del token di connessione
1199        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1200        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type, 		-- (obblig) Identificativo del processo/procedimento
1201        			FlgTpObjProcessOnIn		IN		VARCHAR2 DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1202        																	-- Indica il tipo di oggetto cui si riferisce il processo. Valori possibili:
1203        																	-- C	=	Copia di unità documentaria
1204        																	-- U	=	Unità documentaria
1205        																	-- F	=	Folder
1206        																	-- NULL = Processo non relativo a singola copia, unità doc. o folder
1207        			IdObjProcessOnIn			IN		INTEGER,						-- Id. dell'eventuale copia/unità documentaria/folder cui si riferisce il processo (può essere valorizzato solo se lo è FlgTpObjProcessOnIn)
1208        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1209        																	-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1210        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1211        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1212        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
1213        			ErrMsgOut				OUT 		VARCHAR2)						-- Messaggio d'errore
1214        			return PLS_INTEGER;											-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1215        			
1216        	/******* funzione per ottenere l'id. del folder cui è relativo un processo/procedimento	******/
1217        	function GetProcIdFolder(
1218        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type 		-- (obblig) Identificativo del processo/procedimento 
1219        			) return DMT_FOLDER.ID_FOLDER%type;									-- Id. del folder cui è relativo il processo (NULL in caso di errore o se è un processo non relativo a folder) 
1220        		
1221        
1222        	function GetEstremiUDXDettEvento(
1223        			IdUDIn				IN 		DMT_UNITA_DOC.ID_UD%type 			-- (obblig.) Identificativo dell'unità documentaria di cui restituire gli estremi
1224        			) return VARCHAR2;											-- Estremi con cui mostrare l'unità doc. nel dettaglio di un evento cui sia/debba essere collegata
1225        	
1226        	function GetEstremiUDXDettEvento(			
1227        			IdUDIn				IN 		DMT_UNITA_DOC.ID_UD%type, 			-- (obblig.) Identificativo dell'unità documentaria di cui restituire gli estremi
1228        			EstremiUDOut			OUT		VARCHAR2						-- Estremi con cui mostrare l'unità doc. nel dettaglio di un evento cui sia/debba essere collegata
1229        			) return PLS_INTEGER;											-- 1 in caso di estremi popolati, altrimenti 0
1230        	
1231        	/******* funzione per controllare la correttezza formale degli estremi di protocollo da dare ad un unità doc. 							*******/
1232        	/******* verifica anche se in DB esiste già un'unità doc. con gli estremi di protocollo indicati nel qual caso ne restituisce l'identificativo		*******/
1233        	function CtrlEstremiProt ( 
1234        			CodIdConnectionTokenIn		IN	    	DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1235        																	-- (obblig). Codice identificativo del token di connessione
1236        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1237        			AnnoRegIn				IN		PLS_INTEGER,					-- Anno di protocollo
1238        			DataRegIn 				IN		VARCHAR2,						-- Data di protocollo (nel formato dato dal parametro di config. FMT_STD_DATA o FMT_STD_TIMESTAMP)
1239        			NumRegIn				IN		PLS_INTEGER,					-- N.ro di protocollo
1240        			IdUDOut				OUT		DMT_UNITA_DOC.ID_UD%type,			-- Id. dell'eventuale unità documentaria già presente in DB che ha gli estremi di protocollo immessi
1241        			IdDocPrimarioOut			OUT		DMT_DOCUMENTS.ID_DOC%type,			-- Id. del documento primario dell'UD IdUDOut
1242        			NroLastVerPrimarioOut		OUT		PLS_INTEGER,					-- N.ro dell'eventuale ultima versione elettronica del doc. primario visibile all'utente
1243        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1244        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
1245        			ErrMsgOut				OUT 		VARCHAR2)						-- Messaggio d'errore
1246        			return PLS_INTEGER;											-- Vale 1 se il controllo è andato a buon fine, altrimenti 0
1247        			
1248        
1249        		
1250        	/****** Funzione per il registrare/aggiornare in banca dati i soggetti interni coinvolti in un dato processo/procedimento 	******/
1251        	/****** (andando in sostituzione o aggiunta dei soggetti eventualmente già presenti in DB per il dato processo) 			******/
1252        	function SetSoggInterni (
1253        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1254        																-- (obblig). Codice identificativo del token di connessione
1255        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1256        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig.) Id. del processo/procedimento cui sono relativi i soggetti interni da settare
1257        			RuoloSoggettiIn		IN		DMT_PROCESS_SOGG_INT.RUOLO_SOGG_IN_PROC%type,	--Ruolo di tutti soggetti da settare
1258        																			-- Se specificato la funzione aggiorna SOLO soggetti col dato ruolo, altrimenti tutti
1259        			FlgAppendRecIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 significa che i soggetti nell'XML in input devono essere aggiunti a quelli eventualmente già presenti in DB per il dato processo, altrimenti li sostituisconoso
1260        			NroPosFirstRecIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori da 1 a n; gestito solo se FlgAppendRecIn=1) E' la posizione che deve avere il primo record-soggetto da aggiungere (se posizione già occupata da un record quello e i successivi vengono spostati dopo). Se NULL il/i record vengono aggiunti dopo l'ultimo eventualmente già presente in DB
1261        			ListaXMLIn			IN		CLOB,							-- Lista con i dati dei soggetti interni coinvolti nel processo/procedimento (XML conforme a schema LISTA_STD.xsd) da sostituire o aggiungere a quelli eventualmente già presenti in DB
1262        																-- Ogni soggetto è un tag Riga che può contenere le seguenti colonne
1263        																-- 1: Identificativo del record, se già registrato in banca dati (univoco in tutta la banca dati)
1264        																-- 2: Ruolo del soggetto nel processo/procedimento (responsabile, UO competente ecc)
1265        																--		Obblig se RuoloSoggettiIn NON è valorizzato
1266        																-- 3:  Dettagli della relazione del soggetto con il processo
1267        																-- 4: (obblig.) Indicatore del tipo di soggetto
1268        																--	Valori possibili:
1269        																-- 		UT 	= Utente
1270        																--		SV	= Scrivania virtuale
1271        																--		UO	= Unità organizzativa (vale a dire tutte le scrivanie virtuali ad essa afferenti)
1272        																--		G	= Gruppo
1273        																--		R	= Ruolo amministrativo contestualizzato ovvero i soggetti che hanno un certo ruolo amministrativo (eventualmente rispetto ad una certa UO o un dato livello della struttura organizzativa/tipo di UO o entrambi)
1274        																-- 5: Identificativo del soggetto
1275        																--		è un ID_UO di DMT_STRUTTURA_ORG se colonna 1=UO,
1276        																--		è un ID_GRUPPO di DMT_GRUPPI se colonna 1 =G
1277        																--		è un ID_USER di DMT_USERS se colonna 1 =UT
1278        																--		è un ID_SCRIVANIA di DMT_SCRIVANIE_VIRTUALI se colonna 1 =SV
1279        																--		è un ID_RUOLO_AMM di DMT_RUOLI_AMM se colonna 1 =R
1280        																-- 6: Denominazione/nome del soggetto(se trattasi di UO può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1281        																-- 7: Identificativo della UO cui appartiene la scrivania che rappresenta il soggetto
1282        																-- 8: Nri livello della UO che rappresenta il soggetto o a cui appartiene la scrivania che rappresenta il soggetto (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
1283        																-- 9: Denominazione della UO cui appartiene la scrivania che rappresenta il soggetto (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1284        																-- 10: Codice che identifica nell'applicazione esterna da cui ci si connette l'utente che rappresenta il soggetto o quello che occupa la scrivania che rappresenta il soggetto
1285        																-- 11: Denominazione dell'utente che occupa la scrivania che rappresenta il soggetto
1286        																-- 12: (valore 1) Indica che il destinatario del permesso, se UO, sono anche tutte le sue sotto-UO
1287        																-- 13: (valori interi da 1 a n) Livello della struttura organizzativa in cui si espleta il ruolo amministrativo che rappresenta il soggetto
1288        																-- 14: Se colonna 1 =R: Codice del tipo di unità organizzativa in cui si espleta il ruolo amministrativo che rappresenta il soggetto (alternativo alla colonna 10)
1289        																--	 Se colonna 1 =UT o SV: Username (delle credenziali locali) dell'utente che rappresenta il soggetto o che occupa la scrivania che rappresenta il soggetto
1290        																-- 15: Se colonna 1 =R: Descrizione del tipo di unità organizzativa (es: settore, servizio, ecc) in cui si espleta il ruolo amministrativo che rappresenta il soggetto (alternativo alla colonna 10)
1291        																--	 Se colonna 1 =UT o SV: N.ro di matricola dell'utente che rappresenta il soggetto o che occupa la scrivania che rappresenta il soggetto  
1292        																-- 16: Identificativo della UO in cui si espleta il ruolo amministrativo che rappresenta il soggetto o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che rappresenta il soggetto
1293        																-- 17: Denominazione/nome della UO in cui si espleta il ruolo amministrativo destinatario della copia o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che rappresenta il soggetto (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1294        																-- 18: Nri livello della UO in cui si espleta il ruolo amministrativo che rappresenta il soggetto o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che rappresenta il soggetto (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
1295        																-- 19:(valore 1) Indica che il ruolo amministrativo che rappresenta il soggetto si espleta anche nelle sotto-UO della/e UO rintracciate tramite i valori delle 3 colonne precedenti
1296        																-- 20: Data e ora di inizio validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida dall'avvio del procedimento
1297        																-- 21: Data e ora di fine validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida fino alla conclusione del procedimento
1298        																-- 22: (valori 1/0/NULL) Indicatore di soggetto di processo "locked" ovvero non modificabile/cancellabile da applicativo
1299        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1300        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1301        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1302        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1303        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
1304        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
1305        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1306        	
1307        	/****** Funzione per ottenere la lista dei soggetti interni coinvolti in un dato processo/procedimento 	******/
1308        	function GetListaSoggInterni (
1309        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1310        																-- (obblig). Codice identificativo del token di connessione
1311        			IdUserLavoroIn		IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1312        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,			-- (obblig.) Id. del processo/procedimento cui sono relativi i soggetti interni da settare
1313        			RestringiARuoliIn	IN		VARCHAR2 DEFAULT NULL,					-- Serve a restringere la lista ai soggetti con il/i ruoli specificati
1314        																				-- Se i ruoli sono più di uno vanno separati con ;
1315        			ListaXMLOut			OUT		NOCOPY CLOB,							-- Lista con i dati dei soggetti interni coinvolti nel processo/procedimento (XML conforme a schema LISTA_STD.xsd) da sostituire o aggiungere a quelli eventualmente già presenti in DB
1316        																				-- Ogni soggetto è un tag Riga con le seguenti colonne
1317        																				-- 1: Identificativo del record (univoco in tutta la banca dati)
1318        																				-- 2: Ruolo del soggetto nel processo/procedimento (responsabile, UO competente ecc)
1319        																				-- 3:  Dettagli della relazione del soggetto con il processo
1320        																				-- 4: Indicatore del tipo di soggetto
1321        																				--	Valori possibili:
1322        																				-- 		UT 	= Utente
1323        																				--		SV	= Scrivania virtuale
1324        																				--		UO	= Unità organizzativa (vale a dire tutte le scrivanie virtuali ad essa afferenti)
1325        																				--		G	= Gruppo
1326        																				--		R	= Ruolo amministrativo contestualizzato ovvero i soggetti che hanno un certo ruolo amministrativo (eventualmente rispetto ad una certa UO o un dato livello della struttura organizzativa/tipo di UO o entrambi)
1327        																				-- 5: Identificativo del soggetto
1328        																				--		è un ID_UO di DMT_STRUTTURA_ORG se colonna 1=UO,
1329        																				--		è un ID_GRUPPO di DMT_GRUPPI se colonna 1 =G
1330        																				--		è un ID_USER di DMT_USERS se colonna 1 =UT
1331        																				--		è un ID_SCRIVANIA di DMT_SCRIVANIE_VIRTUALI se colonna 1 =SV
1332        																				--		è un ID_RUOLO_AMM di DMT_RUOLI_AMM se colonna 1 =R
1333        																				-- 6: Denominazione/nome del soggetto(se trattasi di UO può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1334        																				-- 7: Identificativo della UO cui appartiene la scrivania che rappresenta il soggetto
1335        																				-- 8: Nri livello della UO che rappresenta il soggetto o a cui appartiene la scrivania che rappresenta il soggetto (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
1336        																				-- 9: Denominazione della UO cui appartiene la scrivania che rappresenta il soggetto (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1337        																				-- 10: Codice che identifica nell'applicazione esterna da cui ci si connette l'utente che rappresenta il soggetto o quello che occupa la scrivania che rappresenta il soggetto
1338        																				-- 11: Denominazione dell'utente che occupa la scrivania che rappresenta il soggetto
1339        																				-- 12: (valore 1) Indica che il destinatario del permesso, se UO, sono anche tutte le sue sotto-UO
1340        																				-- 13: (valori interi da 1 a n) Livello della struttura organizzativa in cui si espleta il ruolo amministrativo che rappresenta il soggetto
1341        																				-- 14: Se colonna 1 =R: Codice del tipo di unità organizzativa in cui si espleta il ruolo amministrativo che rappresenta il soggetto (alternativo alla colonna 10)
1342        																				--	 Se colonna 1 =UT o SV: Username (delle credenziali locali) dell'utente che rappresenta il soggetto o che occupa la scrivania che rappresenta il soggetto
1343        																				-- 15: Se colonna 1 =R: Descrizione del tipo di unità organizzativa (es: settore, servizio, ecc) in cui si espleta il ruolo amministrativo che rappresenta il soggetto (alternativo alla colonna 10)
1344        																				--	 Se colonna 1 =UT o SV: N.ro di matricola dell'utente che rappresenta il soggetto o che occupa la scrivania che rappresenta il soggetto  
1345        																				-- 16: Identificativo della UO in cui si espleta il ruolo amministrativo che rappresenta il soggetto o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che rappresenta il soggetto
1346        																				-- 17: Denominazione/nome della UO in cui si espleta il ruolo amministrativo destinatario della copia o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che rappresenta il soggetto (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1347        																				-- 18: Nri livello della UO in cui si espleta il ruolo amministrativo che rappresenta il soggetto o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che rappresenta il soggetto (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
1348        																				-- 19:(valori 1/0) Indica che il ruolo amministrativo che rappresenta il soggetto si espleta anche nelle sotto-UO della/e UO rintracciate tramite i valori delle 3 colonne precedenti
1349        																				-- 20: Data e ora di inizio validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida dall'avvio del procedimento
1350        																				-- 21: Data e ora di fine validità della relazione del soggetto con il processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP). Se non specificata la relazione si intende valida fino alla conclusione del procedimento
1351        																				-- 22: (valori 1/0) Indicatore di soggetto di processo "locked" ovvero non modificabile/cancellabile da applicativo
1352        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1353        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
1354        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
1355        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1356        			
1357        	/******* funzione che aggiorna lo scadenziaro a seguito della creazione, modifica o cancellazione di un evento di processo ******/
1358        	function AggScadDopoOperSuEvento(
1359        			FlgOperazioneSuEvtIn	IN		VARCHAR2,						-- (obblig.) Indica l'operazione sull'evento a seguito della quale viene invocata la funzione.
1360        																-- Valori ammessi:	
1361        																--		I = Insert
1362        																--		U = Update
1363        																--		D = Delete
1364        			EventoRecOldIn		IN		DMT_PROCESS_HISTORY%rowtype,			-- Record dell'evento prima della modifica o cancellazione (valorizzato solo se la funzione viene chiamata dopo la modifica o cancellazione di un evento)
1365        			EventoRecIn			IN		DMT_PROCESS_HISTORY%rowtype,			-- Record dell'evento creato o come è dopo la modifica (valorizzato solo se la funzione viene chiamata dopo la creazione o modifica di un evento)
1366        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1367        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1368        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1369        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1370        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
1371        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
1372        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1373        
1374        	/******* funzione che aggiorna lo scadenziaro a seguito di aggiunta, modifica o cancellazione di un documento in un processo ******/
1375        	function AggScadDopoOperSuDoc(
1376        			FlgOperazioneSuDocIn	IN		VARCHAR2,						-- (obblig.) Indica l'operazione sul documento a seguito della quale viene invocata la funzione.
1377        																-- Valori ammessi:	
1378        																--		AP 	= Aggiunta in un procedimento
1379        																--		U 	= Modifica
1380        																--		D	= Cancellazione
1381        																--		DP 	= Eliminazione da procedimento
1382        																--		AE 	= Associazione ad evento di procedimento
1383        																--		DE	= Disassociazione da evento di procedimento
1384        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig. se FlgOperazioneSuDocIn=AP o DP o AE o DE) Id. del processo in cui è stato aggiunto o da cui è stato tolto il documento o al cui evento è stato associato
1385        			CodTipoEventoIn		IN		DMT_PROCESS_HISTORY.COD_TIPO_EVENTO%type,	-- (obblig. se FlgOperazioneSuDocIn=AE o DE) Cod. che indica i tipo dell'evento cui è stato associato o da cui è stato scollegato il documento
1386        			UDRecOldIn			IN		DMT_UNITA_DOC%rowtype,				-- Record dell'unità documentaria prima della modifica o cancellazione(valorizzato solo se la funzione viene chiamata dopo la modifica o cancellazione di un documento)
1387        			DocRecOldIn			IN		DMT_DOCUMENTS%rowtype,				-- Record del documento primario dell'unità documentaria prima della modifica o cancellazione (valorizzato solo se la funzione viene chiamata dopo la modifica o cancellazione di un documento)
1388        			UDRecIn			IN		DMT_UNITA_DOC%rowtype,				-- Record dell'unità documentaria (dopo la modifica; va valorizzato sempre tranne che se FlgOperazioneSuDocIn=D)
1389        			DocRecIn			IN		DMT_DOCUMENTS%rowtype,				-- Record del documento primario dell'unità documentaria (dopo la modifica; va valorizzato sempre tranne che se FlgOperazioneSuDocIn=D)
1390        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1391        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1392        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1393        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1394        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
1395        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
1396        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1397        	
1398        	/******* funzione che aggiorna lo scadenziaro a seguito del completamento di un'attività workflow o dell'inizio o fine di una fase workflow ******/
1399        	function AggScadDopoAttFaseWF(
1400        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig.) Id. del processo in cui si è completata l'attività o è iniziata/finita la fase
1401        			FlgAttFaseIn		IN		VARCHAR2,						-- (obblig.) Indica se l'aggiornamento dello scadenziario è per un'Attività (=A) o una Fase (=F)
1402        			CIAttFaseIn			IN		VARCHAR2,						-- (obblig.) Identificativo dell'attività o fase (ACTIVITY_NAME nel caso di Oracle Workflow)
1403        			FlgInizioFineFaseIn	IN		VARCHAR2 DEFAULT NULL,				-- (obblig. se FlgAttFaseIn=F) Indica se l'aggiornamento dello scadenziario è per l'inizio (=I) o la fine (=F) della fase
1404        			TsComplAtt_IFFaseIn	IN		DATE,							-- (obblig.) Timestamp di completamento dell'attività o di inizio/fine della fase
1405        			DesEsitoAttfaseIn		IN		VARCHAR2,						-- Esito con cui è stata completata l'attività o finita la fase (meaning nel caso di Oracle Workflow)
1406        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1407        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1408        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1409        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1410        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
1411        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
1412        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1413        		
1414        	/******* funzione che aggiorna lo scadenziaro a seguito dell'aggiornamento degli attributi custom di un dato processo/procedimento******/
1415        	function AggScadDopoSetAttrCustom(
1416        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,		-- (obblig.) Id. del processo in cui si è completata l'attività o è iniziata/finita la fase
1417        			AttributiOldIn		IN		DMT_PROCESSES.ALTRI_ATTRIBUTI%type,		-- Valori degli attributi custom del processo prima dell'aggiornamento
1418        			AttributiIn			IN		DMT_PROCESSES.ALTRI_ATTRIBUTI%type,		-- Valori degli attributi custom del processo dopo l'aggiornamento
1419        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1420        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1421        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1422        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1423        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
1424        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
1425        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1426        
1427        	/******* serve ad aggiornare ad intervalli fissi lo scadenziario inserendovi le scadenze dei processi definite come scadenze a date prefissate *******/
1428        	function AggScadConScadADateFisse(
1429        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1430        																-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1431        			FlgAutoCommitIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1432        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1433        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
1434        			ErrMsgOut			OUT 		VARCHAR2)						-- Messaggio d'errore
1435        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1436        
1437        	/******** funzione per ottenere la durata effettiva (cioè tenuto conto di interruzioni e sospensioni) di un procedimento 	********/
1438        	/******** a partire dai dati contenuti nel record del procedimento										********/
1439        	function GetDurataEffProc(
1440        			TsAvvioIn			IN		DMT_PROCESSES.TS_AVVIO%type,
1441        			DtDecorrenzaIn		IN		DMT_PROCESSES.DT_DECORRENZA%type,
1442        			TsFineIn			IN		DMT_PROCESSES.TS_FINE%type,
1443        			DtChiusuraTerminiIn	IN		DMT_PROCESSES.DT_CHIUSURA_TERMINI%type,
1444        			FlgStatoIn			IN		DMT_PROCESSES.FLG_STATO%type,
1445        			DtInizioSospInterrIn	IN		DMT_PROCESSES.DT_INIZIO_SOSP_INTERR%type,
1446        			DtFineInterrIn		IN		DMT_PROCESSES.DT_FINE_INTERR%type,
1447        			GGDurataSospConcluseIn	IN		DMT_PROCESSES.GG_DURATA_SOSP_CONCLUSE%type
1448        			) return NUMBER;											-- durata del processo espressa in giorni
1449        
1450        	/******* funzione per ricercare processi/procedimenti (legati o meno a documenti e/o folder) 									******/
1451        	/******* Tra i filtri di ricerca vi è quello per ricercare solo i processi guidati dal motore workflow su cui si ha qualche attività da fare	******/
1452        	function TrovaProcessi(
1453        			CodIdConnectionTokenIn		IN	    	DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1454        																	-- (obblig). Codice identificativo del token di connessione
1455        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1456        			FlgPreimpostaFiltroIn		IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1 i filtri e l'ordinamento vengono settati secondo le impostazioni dell'utente di lavoro, altrimenti restano come passati in input
1457        			MatchByIndexerIn			IN		CLOB DEFAULT NULL,				-- Lista delle unità documentarie, folder e processi trovati dal searcher di Lucene (XML conforme a schema LISTA_STD.xsd)
1458        																	-- Ogni oggetto di Lucene trovato è un tag Riga che contiene le seguenti colonne: 
1459        																	-- 1: identificativo delloggetto trovato
1460        																	-- 2: valore attributo LISTA_ID_PROCESSI_COLLEGATI delloggetto
1461        																	-- 3: valore attributo ID_UD delloggetto trovato (se trattasi di doc o sua versione)
1462        			FlgIndexerOverflowIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 significa che il searcher di Lucene ha trovato un numero di processi diversi superiore ad un limite massimo consentito.
1463        																	-- Nel caso il flag valga 1 largomento precedente può essere vuoto o se non lo è il suo contenuto viene comunque ignorato
1464        			Flg2ndCallIn			IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 indica che si tratta della seconda chiamata alla stored che viene fatta a seguito di una ricerca sottomessa. 
1465        																	-- Può essere 1 solo se MatchByIndexerIn contiene degli oggetti.
1466        																	-- E' un flag che serve per velocizzare la ricerca: infatti quando è 1 i filtri vengono ignorati in quanto si considera che il set restituito dall'indicizzatore sia già fatto di oggetti soddisfacenti tutti i filtri; la chiamata alla stored serve solo per verificare l'accesso agli oggetti restituiti dall'indicizzatore, ordinare ed eventualmente paginare il risultato e calcolare tutti i dati degli oggetti da restituire.
1467        			FlgFmtEstremiRegIO		IN OUT	VARCHAR2,						-- Formato con cui mostrare gli estremi di registrazione/numerazione dei documenti associati ai processi trovati:
1468        																	-- Valori possibili:
1469        																	-- <CATEGORIA> = Descrizione della categoria di registrazione/numerazione
1470        																	-- <SIGLA> = Sigla di registrazione/numerazione
1471        																	-- <ANNO> = Anno di registrazione/numerazione
1472        																	-- <NRO> = N.ro di registrazione/numerazione
1473        																	-- <DATA> = Data di registrazione (nel formato dato dal parametro di config. FMT_STD_DATA del sogg. prod. /AOO di appartenenza dell'unità documentaria)
1474        																	-- <ORA> = Orario di registrazione (nel formato HH24:MI)
1475        																	-- Può anche essere una concatenazione dei valori precedenti (tutto ciò che è fuori dalle angle brackets si intende stringa fissa di separazione)
1476        																	-- ad es: <NRO>/<ANNO>; <SIGLA>/<ANNO>/<NRO> del <DATA>
1477        			CriteriAvanzatiIO			IN OUT	NOCOPY CLOB,					-- XML contenente nomi e valori dei filtri sui processi (conforme allo schema SezioneCache.xsd). 
1478        																	-- Ogni filtro è un tag "Variabile" dell'XML
1479        																	-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1480        																	-- I nomi dei filtri possibili sono:
1481        																	--	UseridProponente		Userid del proponente dei processi/procedimenti (chi li ha inseriti) 
1482        																	--							Serve a restringere la ricerca ai soli processi/procedimenti inseriti dal dato proponente
1483        																	--  ProfiloProponente		(viene considerato solo se valorizzato anche UseridProponente) Profilo attivato dal proponente quando ha inserito il processo/procedimento
1484        																	--							Serve a restringere la ricerca ai soli processi/procedimenti inseriti dal dato proponente con il dato profilo
1485        																	--  SezioneHomeProponente	Valori ammessi: ULTIMI = Ultimi processi/procedimenti
1486        																	--											BOZZE  = Solo processi/procedimenti in bozza
1487        																	--											IN_ITER	= Processi/procedimenti in corso
1488        																	--											CON_SCAD = Processi/procedimenti con scadenze
1489        																	--											ARCHIVIO = Processi/procedimenti conclusi/archiviati
1490        																	--							Il filtro può essere valorizzato solo se sono valorizzati UseridProponente e ProfiloProponente
1491        																	--	SoloProcessiLavorabili		(valore fisso 1) Se presente significa che si vogliono solo i processi guidati dal motore di workflow e su cui si ha qualche attività da fare
1492        																	--	CodApplicazione			Codice dell'applicazione "proprietaria" dei processi. Se il filtro non è presente o  non è valorizzato e se l'utente è connesso da un'applicazione esterna si filtra per quella
1493        																	--	CodIstanzaAppl			Codice dell'istanza di applicazione "proprietaria" dei processi. Se il filtro non è presente o  non è valorizzato e se l'utente è connesso da un'applicazione esterna si filtra per l'eventuale specifica istanza di appl. esterna da cui è connesso
1494        																	--	IdProcess				Id. dell'unico procedimento da estrarre
1495        																	--	IdProcessType			Identificativo del tipo di processo (viene considerato solo se l'argomento successivo è anch'esso valorizzato e se i due filtri sono compatibili)
1496        																	--	NomeProcessType			Nome (o parte di esso) del tipo di processo (ricerca case-insensitive in like)
1497        																	--	CITypeFlussoWF			Identificativo del tipo di flusso workflow associato al processo (ricerca esatta)
1498        																	--	CIProvProcess			Codice identificativo del processo (o parte di esso) in un eventuale sistema di provenienza (ricerca case-insensitive in like senza forzare % finale)
1499        																	--	Oggetto      			Parola/frase contenuta nell'oggetto del processo (ricerca di tipo CONTAINS)
1500        																	--	DtAvvioDa				Estremo inferiore dell'intervallo di ricerca sulla data di avvio del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1501        																	--	DtAvvioA				Estremo superiore dell'intervallo di ricerca sulla data di avvio del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1502        																	--	DtDecorrenzaDa			Estremo inferiore dell'intervallo di ricerca sulla data di decorrenza dei termini del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1503        																	--	DtDecorrenzaA			Estremo superiore dell'intervallo di ricerca sulla data di decorrenza dei termini del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1504        																	--	DtFineDa				Estremo inferiore dell'intervallo di ricerca sulla data di fine del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1505        																	--	DtFineA				Estremo superiore dell'intervallo di ricerca sulla data di fine del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1506        																	--	DtChiusuraTerminiDa		Estremo inferiore dell'intervallo di ricerca sulla data di chiusura dei termini del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1507        																	--	DtChiusuraTerminiA		Estremo superiore dell'intervallo di ricerca sulla data di chiusura dei termini del processo (nel formato dato dal parametro di conf. FMT_STD_DATA)
1508        																	--	FlgStatoProc			Indica lo stato del processo; valori possibili: I=Interrotto; S=Sospeso; E=In corso presso ente/soggetto esterno; C = Concluso; A=In corso e in nessuno degli stati precedenti
1509        																	--	TipoEsitoProc			Tipo di esito con cui si è concluso il processo; valori possibili: P = Positivo; N = Negativo; A = Archiviato
1510        																	--	DesEsitoProc			Esito descrittivo del processo (ricerca case-insensitive in like senza forzare % finale)
1511        																	--	FlgAvvioUserLav			(valore fisso 1) Se presente si ricercano solo i processi avviati dall'utente di lavoro
1512        																	--	WfNameFaseCorr			Nome identificativo della fase (=sotto-processo) in corso nell'iter del processo qualora sia guidato dal motore workflow (ricerca esatta)
1513        																	--	WfNameAttEseg			Nome identificativo di un'attività che deve essere eseguibile dall'utente di lavoro sui processi (guidati dal motore workflow) da ricercare (ricerca esatta)
1514        																	--	@CriteriIterSvolto		Lista con i criteri relativi all'iter già svolto sul processo (XML conforme a schema LISTA_STD.xsd). Se più di uno vengono applicati in AND.
1515        																	-- 						Ogni criterio relativo ad un evento dell'iter è un tag Riga che contiene le seguenti colonne:
1516        																							--	1) (valori F/AE) Indica se ciò che deve essersi già svolto o almeno iniziato è una fase (F) o un'attività WF/evento (AE)
1517        																							--	2) Nome identificativo della fase o dell'attività WF (preceduto da A;) o del tipo dell'evento (ID_EVENT_TYPE preceduto da E;)
1518        																							--	3) Descrizione della fase/attività/evento (o suo inizio; ricerca case insenstive in like)
1519        																							--	4) (valori 1/0/NULL) Se 1 indica che la fase/evento può essere anche solo iniziato (se durativo), altrimenti deve essersi verificato/concluso
1520        																							--	5) (gestito solo se non è una fase) Nome identificativo della fase in cui deve essersi verificato/iniziato l'evento/attività
1521        																							--	6) Data a partire dalla quale deve essersi verificato/concluso l'evento (nel formato dato dal parametro di conf. FMT_STD_DATA)
1522        																							--	7) Data entro la quale deve essersi verificato/concluso l'evento (nel formato dato dal parametro di conf. FMT_STD_DATA)
1523        																							--	8) Data a partire dalla quale deve essere iniziato l'evento (nel formato dato dal parametro di conf. FMT_STD_DATA)
1524        																							--	9) Data entro la quale deve essere iniziato l'evento (nel formato dato dal parametro di conf. FMT_STD_DATA)
1525        																							--	10) Identificativo dell'utente che ha completato o a nome di cui è stato completato l'evento (viene considerato solo se il campo successivo è anch'esso valorizzato e se i due sono compatibili)
1526        																							--	11) Descrizione dell'utente che ha completato o a nome di cui è stato completato l'evento (ricerca case insensitive in like)
1527        																							--	12) Identificativo dell'utente che ha iniziato o a nome di cui è stato iniziato l'evento (viene considerato solo se il campo successivo è anch'esso valorizzato e se i due sono compatibili)
1528        																							--	13) Descrizione dell'utente che ha iniziato o a nome di cui è stato iniziato l'evento (ricerca case insensitive in like)
1529        																	--	@CriteriIterNonSvolto		Lista con i criteri relativi a ciò che non deve ancora aver avuto luogo nell'iter del processo (XML conforme a schema LISTA_STD.xsd). Se più di uno vengono applicati in AND.
1530        																	-- 						Ogni criterio relativo ad un evento che non ha ancora avuto luogo nell'iter è un tag Riga che contiene le seguenti colonne:
1531        																							--	1) (obblig.; valori F/AE) Indica se ciò che non deve essersi già verificato e/o iniziato è una fase (F) o un'attività WF/evento (AE)
1532        																							--	2) Nome identificativo della fase o dell'attività WF (preceduto da A;) o del tipo dell'evento (ID_EVENT_TYPE preceduto da E;)
1533        																							--	3) (valori 1/0/NULL) Se 1 indica che la fase/evento non deve essere neppure iniziato (se durativo), se 0 o NULL che non deve essersi verificato/concluso
1534        																							--	4) (gestito solo se non è una fase) Nome identificativo della fase in cui non deve essersi verificata/iniziata l'attività/evento
1535        																	--	TpScad				Non è un vero filtro di ricerca: serve per indicare il tipo di scadenza cui sono relativi i due filtri successivi; può avere valore:
1536        																	-- 							#TERMINI = scadenza dei termini del processo in base alla durata prevista
1537        																	-- 							(solo qualora il tipo di processo sia indicato) descrizione di una scadenza censita nello scadenziario, ovvero uno dei valori del campo DES_SCADENZA della tabella DMT_PROCESS_TYPE_SCAD
1538        																	-- 							#ANY = una qualsiasi scadenza
1539        																	--	ScadEntroNGG			N.ro giorni entro cui si verificherà la scadenza TpScad sui processi da ricercare
1540        																	--	ScadDaMinNGG			(in OR rispetto al filtro precedente): Nro di giorni minimo da cui deve essere trascorsa la scadenza TpScad sui processi da ricercare
1541        																	--	FlgNoScadConEvtFin		(valori 1/0) Se 1 le scadenze vanno considerate solo laddove l'evento di fine della scadenza non sia mai avvenuto, se 0 solo laddove l'evento di fine sia accaduto
1542        																	--	NoteProc				Parola/frase contenuta nelle note del processo (ricerca di tipo CONTAINS)
1543        																	--	@SoggettiInt			Lista con i criteri relativi ai soggetti interni del processo (XML conforme a schema LISTA_STD.xsd). Se più di uno vengono applicati in AND.
1544        																	-- 						Ogni criterio relativo ad un soggetto è un tag Riga che contiene le seguenti colonne:
1545        																							--	1) Ruolo del soggetto nel processo (ricerca esatta)
1546        																							--	2) (obblig) Indicatore del tipo di soggetto; valori possibili: UO = Unità operativa; UT = Utente; G = Gruppo; R = Ruolo amministrativo contestualizzato; SV = Scrivania virtuale
1547        																							--	3) Identificativo del soggetto interno
1548        																							--	4) Descrizione/denominazione del soggetto interno (se trattasi di UO può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1549        																							--	5) Nri livello della UO che costituisce il soggetto interno o della UO a cui appartiene la scrivania che costituisce il soggetto interno (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
1550        																							--	6) Denominazione della UO cui appartiene la scrivania che costituisce il soggetto interno (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1551        																							--	7) Codice che identifica nell'applicazione esterna da cui ci si connette l'utente che costituisce il soggetto interno o quello che occupa la scrivania che costituisce il soggetto interno
1552        																							--	8) Denominazione dell'utente che occupa la scrivania che costituisce il soggetto interno
1553        																							--	9) (valori interi da 1 a n) Livello della struttura organizzativa in cui si espleta il ruolo amministrativo che costituisce il soggetto interno
1554        																							--	10) Codice del tipo di unità organizzativa in cui si espleta il ruolo amministrativo che costituisce il soggetto interno (alternativo alla colonna 9)
1555        																							--	11) Descrizione del tipo di unità organizzativa (es: settore, servizio, ecc) in cui si espleta il ruolo amministrativo che costituisce il soggetto interno (alternativo alla colonna 9)
1556        																							--	12) Identificativo della UO in cui si espleta il ruolo amministrativo che costituisce il soggetto interno o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che costituisce il soggetto interno
1557        																							--	13) Denominazione/nome della UO in cui si espleta il ruolo amministrativo che costituisce il soggetto interno o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che costituisce il soggetto interno (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
1558        																							--	14) Nri livello della UO in cui si espleta il ruolo amministrativo che costituisce il soggetto interno o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo che costituisce il soggetto interno (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
1559        																							--	15) Data a cui devono essere validi i soggetti interni che devono soddisfare il criterio (nel formato dato dal parametro di conf. FMT_STD_DATA); se non valorizzata il criterio si applica a tutti i soggetti interni, indipendentemente dal periodo di validità--	FlgAssUserLav		IN OUT	PLS_INTEGER,					-- (valori 1/0/NULL) 1=Solo processi relativi a unità documentaria/folder attualmente assegnati all'utente di lavoro (ovvero ad una sua scrivania)
1560        																	--	IdUserAss				Identificativo dell'utente assegnatario dell'unità documentaria/folder cui è relativo il processo (viene considerato solo se l'argomento successivo è anch'esso valorizzato e se i due filtri sono compatibili)
1561        																	--	DesUserAss				Descrizione dell'utente attuale assegnatario dell'unità documentaria/folder cui è relativo il processo (ricerca case-insensitive in like)
1562        																	--	@SoggettiEst			Lista con i criteri relativi ai soggetti esterni del processo (XML conforme a schema LISTA_STD.xsd). Se più di uno vengono applicati in AND.
1563        																	-- 						Ogni criterio relativo ad un soggetto è un tag Riga che contiene le seguenti colonne:
1564        																							--	1) Ruolo del soggetto nel processo (ricerca esatta)
1565        																							--	2) Identificativo del soggetto nella rubrica soggetti
1566        																							--	3) Denominazione del soggetto (quella storicizzata sul processo) (ricerca case-insensitive in like)
1567        																							--	4) Codice fiscale del soggetto (quello storicizzato sul processo) (ricerca case-insensitive in like)
1568        																							--	5) Partita IVA del soggetto (quella storicizzata sul processo) (ricerca case-insensitive in like)
1569        																							--	6) Data di nascita del soggetto (quella storicizzata sul processo) (nel formato dato dal parametro di conf. FMT_STD_DATA)
1570        																							--	7) Data a cui devono essere validi i soggetti esternii che devono soddisfare il criterio (nel formato dato dal parametro di conf. FMT_STD_DATA); se non valorizzata il criterio si applica a tutti i soggetti esterni, indipendentemente dal periodo di validità
1571        																							--	8) Identificativo del soggetto in un anagrafe esterna (ACS)
1572        																	--	@UDProc				-- Lista con i criteri relativi alle unità documentarie coinvolte dal processo (XML conforme a schema LISTA_STD.xsd). Se più di uno vengono applicati in AND.
1573        																	-- 						Ogni criterio relativo ad un'unità è un tag Riga che contiene le seguenti colonne:
1574        																							--	1) Codice del ruolo dell'unità documentaria nel processo (ricerca esatta)
1575        																							--	2) Descrizione del ruolo dell'unità documentaria nel processo (ricerca esatta)
1576        																							--	3) Identificativo dell'unità documentaria
1577        																							--	4) Codice della categoria di una registrazione/numerazione dell'unità documentaria (ricerca esatta)
1578        																							--	5) Sigla di una registrazione/numerazione dell'unità documentaria (ricerca esatta)
1579        																							--	6) Anno di una registrazione/numerazione dell'unità documentaria
1580        																							--	7) N.ro di una registrazione/numerazione dell'unità documentaria
1581        																							--	8) Nome dell'unità documentaria (ricerca case-insensitive in like)
1582        																	--	@FolderProc				Lista con i criteri relativi ai folder coinvolti dal processo (XML conforme a schema LISTA_STD.xsd). Se più di uno vengono applicati in AND.
1583        																	-- 						Ogni criterio relativo ad un folder è un tag Riga che contiene le seguenti colonne:
1584        																							--	1) Codice della natura della relazione del folder col processo (ricerca esatta)
1585        																							--	2) Descrizione della natura della relazione del folder col processo (ricerca esatta)
1586        																							--	2) Identificativo del folder
1587        																							--	3) Percorso + nome del folder (percorso comprensivo del nome della libreria di appartenenza)
1588        			CriteriPersonalizzatiIO		IN OUT 	NOCOPY CLOB,					-- Criteri di ricerca sugli attributi custom dei processi (XML conforme a schema LISTA_STD.xsd). Se più di uno vengono applicati in AND.
1589        																	-- Ogni criterio è un tag Riga che può contenere le seguenti colonne:
1590        																	--	1) Nome (ATTR_NAME) dell'attributo cui è relativo il criterio
1591        																	--	2) (obblig.) Operatore logico. Valori possibili:
1592        																	--		"uguale" (ricerca esatta) 
1593        																	--		"simile a (case-sensitive)" (ricerca case-sensitive in like)
1594        																	--		"simile a (case-insensitive)" (ricerca case-insensitive in like e che ignora i caratteri quali spazi, ., ecc)
1595        																	--		"maggiore" (se attributo numerico o data)
1596        																	--		"maggiore o uguale" (se attributo numerico o data)
1597        																	--		"minore" (se attributo numerico o data)
1598        																	--		"minore o uguale" (se attributo numerico o data)
1599        																	--		"tra" (se attributo numerico o data)
1600        																	--		"non valorizzato"
1601        																	--		"valorizzato"
1602        																	--		"spuntato" (se attributo di tipo casella di spunta)
1603        																	--		"non spuntato" (se attributo di tipo casella di spunta)
1604        																	--	3) 1° valore di confronto (obblig. e gestito solo se l'operatore non ha uno dei seguenti valori: valorizzato, non valorizzato, spuntato, non spuntato) (se l'attributo è numerico deve avere la virgola come separatore dei decimali, se è di tipo data deve essere in uno dei formato dati dai parametri di conf. FMT_STD_DATA e FMT_STD_TIMESTAMP)
1605        																	--	4) 2° valore di confronto (obblig. e gestito solo se l'operatore è "tra") (se l'attributo è numerico deve avere la virgola come separatore dei decimali, se è di tipo data deve essere in uno dei formato dati dai parametri di conf. FMT_STD_DATA e FMT_STD_TIMESTAMP)
1606        																	--	5) Label dell''attributo cui è relativo il criterio (se sotto-attributo di complesso <label del complesso> - <label del sotto-attributo>
1607        			------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1608        			ColOrderByIO			IN OUT	VARCHAR2,						-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne da 1 a 6 e per le colonne 14, 22, 23, 29, 50, da 51 a 58). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1609        																	-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1610        																	-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1611        			FlgDescOrderByIO  		IN OUT	VARCHAR2,						-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1612        																	-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.			
1613        			FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1614        			NroPaginaIO      			IN OUT	PLS_INTEGER,                  		-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1615           			BachSizeIO				IN OUT	PLS_INTEGER,					-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)  
1616        																	-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro				
1617        			OverFlowLimitIn			IN		PLS_INTEGER DEFAULT NULL,			-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1618        			FlgSenzaTotIn			IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1619        			NroTotRecOut			OUT		PLS_INTEGER,					-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1620             			NroRecInPaginaOut 		OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1621        			------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1622        			FlgBatchSearchIn			IN		PLS_INTEGER,					-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1623        																	-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema. 
1624        			ColToReturnIn			IN		VARCHAR2 DEFAULT NULL,				-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
1625        																	-- Se la stringa è vuota saranno presenti tutte le colonne.
1626        																	-- La colonna 1 sarà presente comunque.
1627        																	-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
1628        			AttoriToReturnIn			IN		VARCHAR2 DEFAULT NULL,				-- Stringa con i nomi identificativi degli attori dei processi che si vuole siano mostrati nelle colonne 20 e 21 della lista di output per ciascun processo/procedimento)
1629        																	-- Se più di uno i nomi dei vari attori desiderati vanno separati con |*|
1630        																	-- Se l'argomento è vuoto e le colonne 20 e/o 21 sono richieste tutti gli attori esterni e interni del processo verranno mostrati nelle colonne														
1631        			AttrCustomToReturnIn		IN		VARCHAR2 DEFAULT NULL,				-- Stringa con i nomi identificativi degli attributi custom dei processi che si vuole siano mostrati nella colonna 42 della lista di output per ciascun processo/procedimento)
1632        																	-- Se più di uno i nomi dei vari attributi desiderati vanno separati con |*|
1633        																	-- Se l'argomento è vuoto e la colonna 42 è richiesta tutti gli attributi custom del processo verranno mostrati nella colonna
1634        			ResultOut				OUT		NOCOPY CLOB,					-- Lista dei processi/procedimenti trovati (XML conforme a schema LISTA_STD.xsd)
1635        																	-- Ogni processo/procedimento è un tag Riga che contiene le seguenti colonne:
1636        																	-- 	1) Identificativo del processo (ID_PROCESS)
1637        																	-- 	2) Codice che identifica il processo/procedimento nel sistema/applicativo proprietario
1638        																	--	   Se questo non è valorizzato ed è un processo su unità doc. o folder prende gli estremi dell'unità doc. o folder
1639        																	-- 	3) Descrizione del tipo di processo/procedimento
1640        																	-- 	4) Oggetto del processo/procedimento
1641        																	-- 	5) Data e ora di avvio (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
1642        																	-- 	6) Data di decorrenza (nel formato dato dal parametro di conf. FMT_STD_DATA)
1643        																	--	7) Dati dell'eventuale processo padre
1644        																	-- 	8) Estremi (categoria/sigla/anno/n.ro + data e ora) di registrazione/numerazione dell'unità documentaria cui è relativo il processo
1645        																	--	9) Dati identificativi del folder cui è relativo il processo
1646        																	--	10) Stato del processo: In bozza, Interrotto; Sospeso; In corso presso ente/soggetto esterno; Concluso; In corso (ovvero in nessuno degli stati precedenti)
1647        																	-- 	11) Estremi (categoria/sigla/anno/n.ro + data e ora) di registrazione/numerazione dell'unità documentaria che ha dato avvio al processo/procedimento
1648        																	-- 	12) Estremi (categoria/sigla/anno/n.ro + data e ora) di registrazione/numerazione dell'unità documentaria che sancisce l'esito del processo/procedimento
1649        																	-- 	13) Descrizione della fase corrente (se processo in corso guidato dal motore workflow)
1650        																	-- 	14) Data di scadenza dei termini (in formato pari al valore del parametro di config. FMT_STD_DATA)
1651        																	--	15) (valori 1/0) Se 1 significa che i termini sono scaduti
1652        																	--	16) Ultima attività/evento che ha avuto luogo nell'iter del processo (descrizione e data)
1653        																	--	17) Messaggio apposto sull'ultima attività/evento che ha avuto luogo nell'iter del processo
1654        																	--	18) Note del processo/procedimento
1655        																	--	19) Denominazioni dei soggetti esterni (validi) del processo/procedimento che hanno un ruolo definito come "principale" nel dato tipo di proc.
1656        																	-- 	20) Dati degli attori esterni del processo/procedimento (eventualmente solo quelli richiesti in AttoriToReturnIn)
1657        																	-- 	21) Dati degli attori interni del processo/procedimento (eventualmente solo quelli richiesti in AttoriToReturnIn)
1658        																	-- 	22) Data chiusura termini del processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_DATA)
1659        																	-- 	23) Data e ora fine del processo/procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
1660        																	-- 	24) Tipo esito: Positivo, Negativo, Archiviato
1661        																	-- 	25) Esito descrittivo del processo/procedimento
1662        																	-- 	26) Id. del folder cui è relativo il processo
1663        																	-- 	27) Id. dell'unità documentaria cui è relativo il processo
1664        																	-- 	28) Id. della copia di unità documentaria cui è relativo il processo
1665        																	-- 	29) Durata effettiva del processo/procedimento in giorni (al netto di sospensioni e interruzioni)
1666        																	-- 	30) Giorni complessi di interruzione dei termini
1667        																	-- 	31) Giorni complessi di sospensione dei termini
1668        																	--	32) N.ro di sospensioni
1669        																	-- 	33) Durata complessiva delle fasi esterne (in giorni)
1670        																	-- 	34) (valori 1/0) Flag che indica presenza di scadenze prossime (entro un n.ro di giorni dato dal parametro di config. SCAD_SU_PROC_A_MENO_DI_GG)
1671        																	--	35) Dettagli sulle scadenze prossime
1672        																	-- 	36) (valori 1/0) Flag che indica presenza di scadenze sforate
1673        																	--	37) Dettagli sulle scadenze sforate
1674        																	-- 	38) (valori 1/0) Flag che indica che al processo/procedimento è associato un flusso modellato nel workflow
1675        																	-- 	39) Tipo del flusso workflow associato al processo/procedimento 
1676        																	--	40) Cod. identificativo dell'istaza di workflow associata al processo/procedimento 
1677        																	-- 	41) Id. del processo/procedimento padre
1678        																	--	42) Dati degli attributi custom del processo/procedimento (eventualmente solo quelli richiesti in AttrCustomToReturnIn)
1679        																	--	43) (valori 1/0) Flag che indica che per l'utente sono richieste notifiche sul processo/procedimento
1680        																	--	44) Estremi delle notifiche richieste per l'utente sul processo/procedimento
1681        																	--	45) (valori 1/0) Flag che indica che per l'utente ci sono notifiche sul processo/procedimento
1682        																	--	46) Estremi delle notifiche che ci sono per l'utente sul processo/procedimento
1683        																	--	47) Id. del tipo di processo
1684        																	-- 	48) Azioni possibili sul record. E' una stringa di 1(=consentita) o 0(=non consentita) in cui ogni posizione corrisponde ad un'azione:
1685        																	--	 1:  Creazione di endo-procedimento, ovvero di processo derivato 
1686        																	--	 2:  Modifica
1687        																	--	 3:  Eliminazione
1688        																	--	 4:  Selezione (per la finalità FinalitaIn)
1689        																	--  49) Dati salienti del procedimento per identificarlo in una lista di link a procedimenti
1690        																	--  50) Data e ora di inserimento del procedimento (nel formato dato dal parametro di conf. FMT_STD_TIMESTAMP)
1691        																	--	51) N.ro di bozza assegnato al procedimento quando creato da front-office
1692        																	--	52) Anno del N° bozza assegnato al procedimento quando creato da front-office
1693        																	--	53) N.ro di pratica assegnato al procedimento quando avviato
1694        																	--	54) Anno del N° pratica (se numerazione a rinnovo annuale/periodico)
1695        																	--	55) N.ro di serie (specifico della tipologia del procedimento) assegnato al procedimento quando avviato
1696        																	--	56) Anno del N°di serie (se numerazione a rinnovo annuale/periodico)
1697        																	--	57) N.ro di registro eventualmente assegnato al procedimento quando confermato procedibile
1698        																	--	58) Anno del N° di registro (se numerazione a rinnovo annuale/periodico)
1699        																	--  59) Id. del richiedente del procedimento
1700        																	--  60) ID_UD dell'unità documentaria che ha dato avvio al processo/procedimento
1701        																	--  61) Id. del richiedente del procedimento nell'anagrafica di provenienza
1702        																	--  62) ID_DOC del documento corrispondente all'attestato di avvio procedimento
1703        																	-- ATTENZIONE: Se FlgIndexerOverflowIn è pari a 1, qualora la stored non vada a sua volta in overflow, dato che il resultset trovato dalla stored dovrà essere ripassato al searcher di Lucene esso non è paginato indipendentemente dal fatto che lapposito input lo richieda. 
1704        																	--		   Inoltre nel caso di FlgIndexerOverflowIn pari a 1 dato che dopo il nuovo passaggio per il searcher di Lucene si renderà necessaria una nuova chiamata alla stored solo le prime 2 colonne del clob sono valorizzate sicuramente
1705        			ErrContextOut			OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1706        			ErrCodeOut				OUT		PLS_INTEGER,					-- N.ro errore di uscita
1707        			ErrMsgOut				OUT 		VARCHAR2,						-- Messaggio d'errore
1708        			FinalitaIn				IN		VARCHAR2 DEFAULT NULL)				-- Motivo per cui viene chiamata la pagina popolata attraverso questa funzione. Valori ammessi:
1709        																	-- COLLEGA_A_UD = Per selezionare il processo da associare ad un'unità documentaria 
1710        																	-- COLLEGA_A_FOLDER = Per selezionare il processo da associare ad una cartella/fascicolo
1711        			return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1712        	
1713        	/*********** aggiorna nella tabella DMT_INFO_X_INDEXER l'attributo dei nominativi esterni del processo in input ******/
1714        	/*********** aggiorna l'attributo anche per l'eventuale unità documentaria o folder associato al processo		******/
1715        	procedure SetAttrNomEstProcXIndexer(
1716        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type);		-- (obblig) Id. del processo di cui aggiornare l'attributo "NOMINATIVI ESTERNI" per l'indicizzatore esterno
1717        
1718        		
1719        	/******* funzione per ottenere come xml conforma allo schema SezioneCache.xsd i dati da riportare nei modelli pdf e Open Office della pratica ******/
1720        	function GetDatiXModelliPratica(
1721        			CodIdConnectionTokenIn		IN	    	DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1722        																							-- (obblig). Codice identificativo del token di connessione
1723        			IdUserLavoroIn				IN			DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1724        			IdProcessIn					IN			DMT_PROCESSES.ID_PROCESS%type,			-- (obblig) Id. del processo corrispondente alla pratica
1725        			DatiModelliXMLOut			OUT			NOCOPY CLOB,							-- XML conforme allo schema SezioneCache.xsd con i dati da inettare nei modelli Open Office/pdf
1726        																							-- Nota: solo i nomi della variabili che matchano con quelli dei campi compilabili presenti nel modello vengono iniettati nel modello stesso
1727        			ErrContextOut			OUT				VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1728        			ErrCodeOut				OUT				PLS_INTEGER,							-- N.ro errore di uscita
1729        			ErrMsgOut				OUT 			VARCHAR2,								-- Messaggio d'errore
1730        			AttributiAddIn			IN				CLOB DEFAULT NULL)						-- XML contenente nomi e valori degli attributi da iniettare nel modello (conforme allo schema SezioneCache.xsd)
1731        			return PLS_INTEGER;																-- vale 1 se tutto è andato a buon fine, altrimenti 0
1732        
1733        	/******** funzione per ottenere le informazioni con cui compilare le maschere degli allegati dell'istanza di una pratica o di un quadro specifico o della richiesta integrazioni ******/
1734        	function GetInfoAllegIstRichIntPratica(
1735        			CodIdConnectionTokenIn		IN	    	DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1736        																							-- (obblig). Codice identificativo del token di connessione
1737        			IdUserLavoroIn				IN			DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1738        			IdProcessIn					IN			DMT_PROCESSES.ID_PROCESS%type,			-- (obblig) Id. del processo corrispondente alla pratica
1739        			AllegatiDiIn				IN			VARCHAR2,								-- (obblig.) Serve ad indicare se gli allegati di cui estrarre le informazioni sono quelli di:
1740        																							--	ISTANZA:				quelli dell'istanza della pratica
1741        																							--  RICHIESTA_INTEGRAZIONI_<n>:	quelli della richiesta di integrazioni n° N
1742        			QuadroPraticaIn				IN			VARCHAR2 DEFAULT NULL,					-- Serve ad indicare il quadro pratica cui devono appartenere gli allegati di cui estrarre le informazioni
1743        			DatiAllegatiXMLOut			OUT			NOCOPY CLOB,							-- XML lista conforme allo schema ListaStd.xsd con i dati degli allegati da inserire/inseriti
1744        																							-- Ogni tipo di allegato (nodo di livello 1) e ogni allegato (nodo di livello 2) è un tag Riga e contiene:
1745        																							-- 1: Livello nodo: 1 = Tipo di allegato, 2 = file allegato del dato tipo
1746        																							-- 2: Id. del tipo allegato
1747        																							-- 3: Nome del tipo allegato
1748        																							-- 4: Flag 1/0/-1: 1 indica che ci sono file del tipo, 0 che non ce ne sono e non è obbligatorio, -1 che non ci sono file ed è obbligatorio metterli
1749        																							-- 5: N.ro file del dato tipo
1750        																							-- 6: Nome del file allegato
1751        																							-- 7: URI del file allegato
1752        																							-- 8: Flag 1/0 file firmato
1753        																							-- 9: Mimetype del file
1754        																							-- 10:Flag 1/0 file pdf o convertibile in pdf
1755        																							-- 11: ID_DOC del documento allegato
1756        																							-- 12: ID_UD del documento allegato
1757        																							-- 13: Dimensione dell'allegato (in bytes)
1758        																							-- 14: Impronta del file
1759        																							-- 15: Algoritmo calcolo impronta
1760        																							-- 16: Encoding impronta (hex o base64)
1761        																							-- 17: Data e ora di inserimento del file
1762        																							-- 18: Massimo n.ro di documenti del dato tipo consentiti. Se non valorizzato significa "unlimited"
1763        																							-- 19: Quadro a cui si riferiscono gli allegati del dato tipo
1764        																							-- 20: Descrizione di dettaglio del tipo di allegato
1765        																							-- 21: Prescrizioni sull'integrazione richiesta
1766        			ErrContextOut				OUT			VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1767        			ErrCodeOut					OUT			PLS_INTEGER,							-- N.ro errore di uscita
1768        			ErrMsgOut					OUT 		VARCHAR2)								-- Messaggio d'errore
1769        			return PLS_INTEGER;																-- vale 1 se tutto è andato a buon fine, altrimenti 0
1770        
1771        	/***** Funzione per ottenere l'albero di oggetti di dominio (OST nel caso di SIRA) legati ad un dato evento/task di procedimento (anche ancora da svolgere) ******/
1772        	function LoadProcObjTree(
1773        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1774        																					-- (obblig). Codice identificativo del token di connessione
1775        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1776        			IdProcessIn				IN		DMT_PROCESS_TYPE_EVENTS.ID_EVENT_TYPE%type,
1777        																					-- (obblig.) Id. del procedimento
1778        			IdTipoEventoIn			IN		DMT_PROCESS_TYPE_EVENTS.ID_EVENT_TYPE%type,
1779        																					-- (obblig.) Id. del tipo di evento/task di procedimento
1780        			IdEventoIO				IN OUT	DMT_PROCESS_HISTORY.ID_EVENTO%type,	
1781        																					-- Id. dell'evento/task di procedimento
1782        																					-- Se in input non è valorizzato viene caricato l'albero di oggetti di dominio definiti per l'ultimo evento/task del tipo indicato, o se questo non c'è, per l'ultimo task che ha caratterizzato oggetti di dominio nel dato procedimento
1783        																					-- Se in input era non valorizzato in output è l'id. dell'ultimo evento del dato tipo (se esistente)
1784        			TreeXmlOut				OUT		NOCOPY CLOB,							-- Lista XML standard che rappresenta l'albero di oggetti di dominio
1785        																					-- Ogni oggetto di dominio e nodo dell'albero è un tag Riga che contiene le seguenti colonne:
1786        																					-- 1:	Indica il livello del nodo (valori da 1 a n)
1787        																					-- 2:	Identificativo univoco del nodo
1788        																					-- 3:	Nome/descrizione del nodo
1789        																					-- 4:	Identificativo del nodo immediatamente superiore
1790        																					-- 5: 	(valori I/M) Indica se oggetto di dominio inserito (I) o modificato (M) nel dato procedimento. Può non essere valorizzato nel caso di oggetto di dominio non ancora caratterizzato nel dato procedimento 
1791        																					-- 6:	(valori 2/1/-1/0) Indica se il nodo va mostrato esploso (=2), se è esplodibile (ha "figli" in n.ro inferiore ad un limite stabilito) ma non va esploso (=1), se ha "filgli" ma non è esplodibile in quanto questi superano il limite stabilito (=-1), se non è esplodibile (=0)
1792        																					-- 7: 	Id. del tipo di oggetto di dominio (può essere non valorizzato se non è censito in DMT_PROC_OBJ_TYPES o non associato al tipo del procedimento: in questo caso l'oggetto di dominio non è modificabile)
1793        																					-- 8: 	Id. della caratterizzazione dell'oggetto di dominio già salvata nel dato task/evento (ID_PROC_OBJ_CAR, può non essere valorizzato)
1794        																					-- 9: 	Id. della caratterizzazione dell'oggetto di dominio già salvata in un precedente task/evento dello stesso procedimento (può non essere valorizzato)
1795        																					-- 10:	Rowid del record della caratterizzazione dell'oggetto di dominio già salvata nel dato task/evento (può non essere valorizzato)
1796        																					-- 11:	Cod. della macro-categoria dell'oggetto di dominio nel sistema di provenienza (cod. natura nel caso di OST SIRA)
1797        																					-- 12:	Cod. della tipo dell'oggetto di dominio nel sistema di provenienza (cod. categoria nel caso di OST SIRA)
1798        																					-- 13:  Cod. che identifica in cartografia la geometria corrispondente all'oggetto di dominio (ID_UBICAZIONE nel caso di SIRA)			
1799        																					-- 14:  Id. dell'oggetto di dominio nel sistema in cui è censito (IdOst nel caso di OST SIRA)
1800        																					-- 15:  Id. della caratterizzazione dell'oggetto di dominio nel sistema in cui è censito (IdCCOst nel caso di OST SIRA)
1801        																					-- 16:  Nro di nodi figli
1802        																					-- 17:  (valori 1/0) Se 1 indica che è un OST selezionato nella dichiarazione dello stato di fatto																		
1803        																					-- 18: Descrizione della categoria dell'oggetto di dominio
1804        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1805        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
1806        			ErrMsgOut				OUT 	VARCHAR2								-- Messaggio d'errore
1807        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1808        	
1809        	/***** Funzione per inserire o aggiornare una caratterizzaione di un oggetto di dominio legata ad un evento/task di procedimento ******/
1810        	function IUProcObj(
1811        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1812        																					-- (obblig). Codice identificativo del token di connessione
1813        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1814        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type DEFAULT NULL,
1815        																					-- Id. del procedimento in cui creare/modificare un oggetto di dominio
1816        																					-- E' obbligatorio se sia IdEventoIO che IdProcObjCarIO sono nulli in input
1817        			IdTipoEventoIn			IN		DMT_PROCESS_TYPE_EVENTS.ID_EVENT_TYPE%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
1818        																					-- Id. del tipo di evento (uno tra quelli censiti in DMT_EVENT_TYPES) (deve essere un tipo evento previsto per il dato tipo di processo/procedimento)
1819        																					-- E' obbligatorio solo se IdEventoIn non è valorizzato, ovvero se anche l'evento è da creare
1820        			IdEventoIO				IN OUT		DMT_PROCESS_HISTORY.ID_EVENTO%type,	-- Id. dell'evento/task di processo cui è relativo l'oggetto di dominio da aggiornare/inserire
1821        																					-- Se in input è NULL l'evento/task viene inserito e il suo Id. restituito in output
1822        			IdProcObjCarIO			IN OUT	DMT_PROCESS_OBJECTS.ID_PROC_OBJ_CAR%type,
1823        																					-- In input è l'identificativo della caratterizzazione di oggetto di dominio da aggiornare, e se non valorizzato significa che la caratterizzazione è da inserire
1824        																					-- In output è l'identificativo della caratterizzazione inserita
1825        			IdProcObjTyIn			IN		DMT_PROCESS_OBJECTS.ID_PROC_OBJ_TYPE%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
1826        																					-- (obblig. se ProvCIProcObjTyIn non valorizzato) Id. del tipo di oggetto di dominio (uno tra quelli censiti in DMT_PROC_OBJ_TYPES) (deve essere un tipo oggetto di dominio previsto per il dato tipo di procedimento)
1827        			ProvCIProcObjTyIn		IN		DMT_PROC_OBJ_TYPES.PROV_CI_PROC_OBJ_TYPE%type DEFAULT NULL,
1828        																					-- (obblig. se IdProcObjTyIn non valorizzato) Codice identificativo della tipologia dell'oggetto in un possibile sistema di provenienza. E' la categoria di OST nel caso di oggetto ambientali del SIRA
1829        			DesProcObjCarIn			IN		DMT_PROCESS_OBJECTS.LABEL%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1830        																					-- Descrizione sintetica della caratterizzazione dell'oggett di dominio
1831        			ProvCIProcObjIn			IN		DMT_PROCESS_OBJECTS.PROV_CI_PROC_OBJ%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1832        																					-- Id. nel sistema di provenienza dell'oggetto di dominio (es. ID_OST nel caso di OST di SIRA)
1833        			ProvCIProcObjCarIn		IN		DMT_PROCESS_OBJECTS.PROV_CI_PROC_OBJ_CAR%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1834        																					-- Id. nel sistema di provenienza della caratterizzazione dell'oggetto di dominio (es. ID_CCOST nel caso di OST di SIRA)
1835        			CIGeolocalizzazioneIn	IN		DMT_PROCESS_OBJECTS.CI_GEOLOCALIZZAZIONE%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1836        																					-- Cod. che identifica in cartografia la geometria corrispondente all'oggetto di dominio (se georeferenziato)
1837        			IdProcObjCarPrecIn		IN		DMT_PROCESS_OBJECTS.ID_PROC_OBJ_CAR_PREC%type DEFAULT dmpk_utility.GetValConfigParamNumber(1, NULL, 'NUM_VAL_NO_UPD'),
1838        																					-- Identificativo di una precedente caratterizzazione dello stesso oggetto di dominio in altro task di procedimento
1839        			AttributiAddIn			IN		CLOB DEFAULT NULL,						-- XML contenente nomi e valori degli attributi dinamici da aggiornare (conforme allo schema SezioneCache.xsd) 
1840        																					-- Gli attributi già presenti in DB e per i quali non c'è corrispondente nell'XML restano invariati
1841        																					-- Per tutti gli attributi vale quanto segue:
1842        																					-- Un attributo da settare è un tag "Variabile" dell'XML il cui tag "Nome" contiene il nome identificativo dell'attributo (ATTR_NAME di DMT_ATTRIBUTES_DEF)
1843        																					-- Un attributo da settare è una variabile con tag "ValoreSemplice" se è un attributo a singolo valore e non strutturato (cioè con tipo diverso da COMPLEX)
1844        																					-- altrimenti è una variabile con tag "Lista" che ha un'unica colonna con "Nro" pari a 1 se l'attributo non è strutturato, che ha invece tante colonne quanti gli attributi componenti (ordinate in base al loro NRO_ORD_IN_SUP) se l'attributo è complesso 
1845        																					-- Nel caso di variabili con tag "Lista" i valori specificati nell'XML si aggiungono o sostituiscono quelli già presenti in DB a seconda che nell'XML sia presente o meno una variabile con tag "Nome" pari a #Append_<Nome attributo> e tag "ValoreSemplice" pari a 1  
1846        																					-- In particolare se non sono specificati valori nell'XML (tag Lista vuoto) e se i valori non sono da aggiungere significa che tutti i valori dell'attributo già presenti in DB vanno rimossi
1847        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1848        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1849        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1850        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1851        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
1852        			ErrMsgOut				OUT 	VARCHAR2								-- Messaggio d'errore
1853        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1854        
1855        	/***** Funzione per aggiornare solo ProvCIProcObjIn e ProvCIProcObjCarIn di un oggetto di dominio legato ad un evento/task di procedimento ******/
1856        	function IUProcObj_Ligth(
1857        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1858        																					-- (obblig). Codice identificativo del token di connessione
1859        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1860        			IdProcObjCarIn			IN 		DMT_PROCESS_OBJECTS.ID_PROC_OBJ_CAR%type,
1861        																					-- E' l'identificativo della caratterizzazione di oggetto di dominio da aggiornare, e se non valorizzato significa che la caratterizzazione è da inserire
1862        			ProvCIProcObjIn			IN		DMT_PROCESS_OBJECTS.PROV_CI_PROC_OBJ%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1863        																					-- Id. nel sistema di provenienza dell'oggetto di dominio (es. ID_OST nel caso di OST di SIRA)
1864        			ProvCIProcObjCarIn		IN		DMT_PROCESS_OBJECTS.PROV_CI_PROC_OBJ_CAR%type DEFAULT dmpk_utility.GetValConfigParamText(1, NULL, 'STR_VAL_NO_UPD'),
1865        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1866        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1867        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1868        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1869        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
1870        			ErrMsgOut				OUT 	VARCHAR2								-- Messaggio d'errore
1871        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1872        
1873        	/************* funzione per ottenere i dati di un oggetto di procedimento esistente o ancora da creare (di tipo specificato in input) 	**********/
1874        	/************* NOn restituisce gli attributi custom																						**********/
1875        	function LoadDettProcObj(
1876        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1877        																					-- (obblig). Codice identificativo del token di connessione
1878        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si sta lavorando. Se non valorizzato è l'utente connesso
1879        			IdProcObjCarIn			IN 		DMT_PROCESS_OBJECTS.ID_PROC_OBJ_CAR%type DEFAULT NULL,
1880        																					-- (obblig. se nè IdProcObjTyIn nè ProvCIProcObjTyIn sono valorizzati) Identificativo della caratterizzazione di oggetto di dominio di cui ricavare i dati
1881        			IdProcObjTyIn			IN		DMT_PROCESS_OBJECTS.ID_PROC_OBJ_TYPE%type DEFAULT NULL,
1882        																					-- (obblig. se nè IdProcObjCarIn nè ProvCIProcObjTyIn sono valorizzati) Id. del tipo di oggetto di dominio (uno tra quelli censiti in DMT_PROC_OBJ_TYPES) 
1883        			ProvCIProcObjTyIn		IN		DMT_PROC_OBJ_TYPES.PROV_CI_PROC_OBJ_TYPE%type DEFAULT NULL,
1884        																					-- (obblig. se nè IdProcObjCarIn nè IdProcObjTyIn sono valorizzati) Codice identificativo della tipologia dell'oggetto in un possibile sistema di provenienza. E' la categoria di OST nel caso di oggetto ambientali del SIRA
1885        			ProcObjDataOut			OUT		NOCOPY CLOB,							-- XML conforme a schema SezioneCache.xsd con i dati dell'oggetto di procedimento
1886        																					-- Contiene le variabili semplici:
1887        																						-- ID_PROC_OBJ_TYPE Identificativo del tipo dell'oggetto
1888        																						-- NOME_PROC_OBJ_TYPE	Nome del tipo dell'oggetto
1889        																						-- DES_PROC_OBJ_TYPE	Descrizione estesa del tipo dell'oggetto
1890        																						-- PROV_CI_PROC_OBJ_MACROTYPE Codice identificativo, in un possibile sistema di provenienza, della marco-tipologia in cui ricade la tipologia dell'oggetto. E' la natura di OST nel caso di oggetto ambientale del SIRA
1891        																						-- PROV_CI_PROC_OBJ_TYPE Codice identificativo della tipologia dell'oggetto in un possibile sistema di provenienza. E' la categoria di OST nel caso di oggetto ambientali del SIRA
1892        																						-- LABEL Etichetta/descrizione dell'oggetto
1893        																						-- PROV_CI_PROC_OBJ	Identificativo dell'oggetto in un eventuale sistema di provenienza (nel caso di oggetto ambientali SIRA è l'IdOst)
1894        																						-- PROV_CI_PROC_OBJ_CAR Identificativo della caratterizzazione dell'oggetto di dominio in un eventuale sistema di provenienza (nel caso degli oggetto ambientalo SIRA è l'IdCcost)
1895        																						-- TIPO_GEOMETRIA Tipo di geometria - PUNTO, LINEA, POLIGONO - dell'oggetto se geolocalizzato/localizzabile
1896        																						-- CI_GEOLOCALIZZAZIONE Identificativo univoco della geometria che corrisponde all'oggetto in cartografia (se oggetto georeferenziato; nel caso di oggetto ambientale del SIRA è l'IdUbicazione)
1897        																						-- ID_PROC_OBJ_CAR_PREC Identificativo univoco di una precedente caratterizzazione dello stesso oggetto
1898        																					-- e le variabili lista:
1899        																						-- @RelazioniVsProcObj con le relazioni con altri OST (possibili o già definite) 
1900        																							-- Ogni riga della lista contiene le colonne:
1901        																							--	1:	Natura della relazione
1902        																							--	2:  Id. del tipo di OST collegato/da collegare
1903        																							--	3:  Categoria dell'OST collegato/da collegare
1904        																							--	4:  IdOst dell'OST collegato (potrebbe non essere valorizzato)
1905        																							--	5:  IdProcObjCar dell'OST collegato (potrebbe non essere valorizzato)
1906        																							--	6:  Descrizione OST collegato
1907        																							--	7:  Dettagli sul motivo della relazione
1908        																						-- @SceltaRelazioniVsProcObj che serve per aggiungere ulteriori righe di relazioni con altri OST. 
1909        																							-- Ogni riga della lista contiene le colonne:
1910        																							--	1:	Natura della relazione
1911        																							--	2:  Id. del tipo di OST da collegare (NON sempre valorizzato)
1912        																							--	3:  Categoria dell'OST da collegare (sempre valorizzato)
1913        																							--  4:  Lista di possibili oggetti da collegare. 
1914        																							--		Per ogni oggetto sono riportati Id interno di Auriga, Id. esterno (IdOST in SIRA2), descrizione. I 3 campi sono separati da |*|
1915        																							--		Ogni oggetto è separato dal successivo da |**|
1916        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1917        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
1918        			ErrMsgOut				OUT 	VARCHAR2								-- Messaggio d'errore
1919        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1920        
1921        	/*** Funzione per eliminare una caratterizzazione di oggetto di dominio in un procedimento 		***/
1922        	/*** Si può specificare se l'eliminazione deve essere fisica o solo logica (annullamento)		***/
1923        	/*** Se non lo si specifica il sistema fa quella fisica se possibile, se no quella logica		***/
1924        	function DelProcObj(
1925        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1926        																					-- (obblig). Codice identificativo del token di connessione
1927        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1928        			IdProcObjCarIn			IN 		DMT_PROCESS_OBJECTS.ID_PROC_OBJ_CAR%type DEFAULT NULL,
1929        			FlgCancFisicaIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL): Se 1 si richiede la cancellazione fisica; se 0 l'annullamento logico; se non è valorizzato quella possibile delle 2. 		
1930        																					-- Identificativo della caratterizzazione di oggetto di dominio da eliminare
1931        			MotiviIn				IN		DMT_PROCESS_OBJECTS.MOTIVI_ANN%type,	-- Motivi della cancellazione/annullamento
1932        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1933        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1934        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1935        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1936        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
1937        			ErrMsgOut				OUT 		VARCHAR2							-- Messaggio d'errore
1938        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1939        			
1940        	-----serve ad ottenere come XML SezioneCache le variabili di un procedimento utili all'esecuzione/visualizzazione dei task di front-office e back-office
1941        	function GetDatiProcXAtt(
1942        			IdProcessIn			IN				DMT_PROCESSES.ID_PROCESS%type,	-- (obblig.) Id. del procedimento
1943        			IdUserIn			IN				DMT_USERS.ID_USER%type DEFAULT NULL)	-- Id. dell'utente collegato
1944        		return	CLOB;															-- XML SezioneCache con i dati del procedimento utili all'esecuzione delle attività
1945        	
1946        	------ analoga alla precedente salvo che l'XML è restituito come output e non come return value e che NON rilancia eccezioni come può fare invece la precedente
1947        	function GetDatiProcXAtt_J(
1948        			IdProcessIn			IN				DMT_PROCESSES.ID_PROCESS%type,	-- (obblig.) Id. del procedimento
1949        			XMLDatiProcOut		OUT				NOCOPY CLOB,					-- XML SezioneCache con i dati del procedimento utili all'esecuzione delle attività
1950        			IdUserIn			IN				DMT_USERS.ID_USER%type DEFAULT NULL)	-- Id. dell'utente collegato
1951        		return	PLS_INTEGER;													-- restituisce 1 se tutto ok, 0 in caso di errore												
1952        
1953        	/***** Funzione per estrarre la lista delle attività di un procedimento nel front-office													*****/
1954        	/***** Vengono estratte tutte le attività, anche quelle non disponibili 	  																*****/
1955        	/***** Consente anche di estrarre solo le sotto-attività di un dato gruppo di attività e/o appartenenti ad una data attività complessa		*****/
1956        	function GetListaAttProcFO(
1957        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1958        																					-- (obblig). Codice identificativo del token di connessione
1959        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si sta lavorando. Se non valorizzato è l'utente connesso
1960        
1961        			IdProcessIn				IN		DMT_PROCESSES.ID_PROCESS%type,			-- (obblig.) Identificativo del processo di cui estrarre la lista attività
1962        			CIDGruppoAttIn			IN		VARCHAR2 DEFAULT NULL,					-- Cod. identificativo del gruppo dei task da estrarre
1963        			IdTipoEventoAppIn		IN		DMT_EVENT_TYPES.ID_EVENT_TYPE%type DEFAULT NULL,
1964        																					-- Id. del tipo evento del task complesso di appartenenza dei task da estrarre
1965        			ListaAttivitaOut		OUT		NOCOPY CLOB,							-- Lista delle attività e loro raggruppamenti (XML conforme a schema LISTA_STD.xsd)
1966        																					-- Ogni gruppo di attività e singola attività è un tag Riga che contiene le seguenti colonne:
1967        																					-- 1) INSTANCE_ID 	Id. univoco di un'eventuale istanza del task workflow corrispondente al record che risulti eseguibile
1968        																					--					Nel caso di Activiti è l'ID_ di ACT_HI_TASKINST
1969        																					-- 2) <non utilizzata>
1970        																					-- 3) ACTIVITY_NAME 	Internal name che identifica l'attività nel disegno del flusso workflow
1971        																					--						Nel caso di record che rappresenta una fase/gruppo o se l'attività NON è modellata nel flusso WF NON è valorizzata
1972        																					--						Nel caso di Activiti è TASK_DEF_KEY_ dell'attività (attribute id del BPMN)
1973        																					-- 4) Nome con cui mostrare l'attività o gruppo di attività
1974        																					-- 5) (valori 1/0) Se 1 significa che l'attività è eseguibile dall'utente di lavoro
1975        																					-- 6) <non utilizzata>
1976        																					-- 7) (valori 1/0) Se 1 significa che l'utente di lavoro può accedere alla consultazione dei dati gestiti nella maschera dell'attività
1977        																					-- 8) (valori 1/0/-1) Se 1 significa che l'attività è già stata svolta in precedenza, se -1 che non è stata svolta ed è da svolgere, se 0 che non è stata svolta ma non è ancora da svolgere
1978        																					-- 9)  <non utilizzata>
1979        																					-- 10) <non utilizzata>
1980        																					-- 11) rowid del record della DMT_PROCESS_HISTORY da cui recuperare gli attributi custom dell'attività
1981        																					-- 12) Id. evento (PK della DMT_PROCESS_HISTORY) dell'ultimo evento salvato corrispondente alla data attività
1982        																					-- 13) (valori G/AS/AC) Se G il record rappresenta un gruppo di attività, se AS una singola attività senza sotto-attività, se AC un'attività con sotto-attività
1983        																					-- 14) Id. del tipo evento corrispondente all'attività (se colonna 13 = AS o AC) o cod. identificativo del gruppo di attività (se colonna 13=G)
1984        																					-- 15) Nome dell'eventuale gruppo di attività di appartenenza
1985        																					-- 16) Nome dell'eventuale attività complessa di appartenenza
1986        																					-- 17) Entry-point corrispondente alla GUI specifica del task. Se non valorizzato e se colonna 14 = AS significa che è un task con maschera dinamica
1987        																					-- 18) Spiegazione del significato dell'attività / gruppo di attività
1988        																					-- 19) Id. del tipo documento associato al task
1989        																					-- 20) Nome del tipo documento associato al task
1990        																					-- 21) URI del modello (se uno solo) associato al tipo di documento corrispondente al task
1991        																					-- 22) Mimetype del modello (se uno solo) associato al tipo di documento corrispondente al task
1992        																					-- 23) ID_DOC del documento associato al task
1993        																					-- 24) URI dell'ultima versione del documento associato al task
1994        																					-- 25) Mimetype dell'ultima versione del documento associato
1995        																					-- 26) Nome file dell'ultima versione del documento associato al task
1996        																					-- 27) (flag 1/0) Se 1 signgifica che per visualizzare il task va chiamata la Call_ExecAtt (valorizzata solo se colonna 13=AS)
1997        																					-- 28)	Icona specifica dell'attività/fase
1998        																					-- 29) ID_UD dell'unità documentaria associata al task
1999        																					-- 30) Flag 1/0: se 1 indica che è un'attività di sola visualizzazione di quanto fatto in back-office
2000        																					-- 31) Tipo del modello (indica che generatore usare)
2001        			DatiProcXAttOut			OUT		NOCOPY CLOB,							-- XML conforme a schema SezioneCache.xsd che restituise una serie di dati del procedimenti
2002        																					-- necessari alla visualizzazione/salvataggio delle maschere delle attività
2003        																					-- I dati restituiti corrispondono alle seguenti variabili:
2004        																					-- GPA_ID_UL	Id. dell'unità locale
2005        																					-- GPA_NOME_UL	Nome dell'unità locale
2006        																					-- GPA_ID_GEOM_AREA_INTERV_VIA	Id. che identifica la geometria dell'area di intervento in cartografia (IdUbicazione in SIRA)
2007        																					-- ID_UD_ISTANZA Id. UD dell'istanza firmata
2008        																					-- URI_RIC_AVVIO Id. doc della ricevuta di avvio procedimento
2009        																					-- EMAIL_PROPONENTE Indirizzo e-mail del proponente
2010        																					-- #IdDefProcFlow id. del tipo di flusso WF associato al processo
2011        																					-- #IdInstProcFlow id. dell'istanza di flusso WF associato al processoErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2012        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2013        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
2014        			ErrMsgOut				OUT 	VARCHAR2,								-- Messaggio d'errore
2015        			FlgNoDatiProcIn		IN		PLS_INTEGER DEFAULT NULL					-- Se 1 DatiProcXAttOut non viene valorizzato
2016        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
2017        
2018        	/***** Funzione per estrarre la lista delle scadenze/appuntamenti di uno specifico procedimento o di tutti quelli che coinvolgono l'utente di lavoro	*****/
2019        	function GetListaScadenze(
2020        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
2021        																					-- (obblig). Codice identificativo del token di connessione
2022        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si sta lavorando. Se non valorizzato è l'utente connesso
2023        			FiltriIn				IN		CLOB,									-- XML con i filtri per estrarre le scadenze (xml conforme a SezioneCache.xsd)
2024        																					-- Tra i filtri possibili:
2025        																					-- FlgFrontBack				(obblig.; valori F/B) Indica se la richiesta delle scadenze viene dal front-office o dal back-office
2026        																					-- ProfiloUtnteFO			(obblig. se FlgFrontBack = F) Indica il profilo attivato dall'utente di front-office che richiede la lista di scadenze
2027        																					-- IdProcess				Id. dello specifico processo/procedimento cui devono essere relative le scadenze
2028        																					-- IdProcessype				Id. dello specifico tipo di processo/procedimento cui devono essere relative le scadenze
2029        																					-- ScadDal					Estremo inferiore - data senza ora - dell'intervallo temporale a cui restringere la ricerca delle scadenze
2030        																					-- ScadAl					Estremo superiore - data senza ora - dell'intervallo temporale a cui restringere la ricerca delle scadenze
2031        																					-- TpScad					Non è un vero filtro di ricerca: serve per indicare il tipo di scadenza cui sono relativi i due filtri successivi; può avere valore:
2032        																					-- 								#TERMINI = scadenza dei termini del processo in base alla durata prevista
2033        																					-- 								(solo qualora il tipo di processo o processo sia indicato) descrizione di una scadenza censita nello scadenziario, ovvero uno dei valori del campo DES_SCADENZA della tabella DMT_PROCESS_TYPE_SCAD
2034        																					-- ScadEntroNGG				N.ro giorni entro cui si verificherà la scadenza TpScad sui processi da ricercare
2035        																					-- ScadDaMinNGG				(in OR rispetto al filtro precedente): Nro di giorni minimo da cui deve essere trascorsa la scadenza TpScad sui processi da ricercare
2036        																					-- FlgNoScadConEvtFin		(valori 1/0) Se 1 le scadenze vanno considerate solo laddove l'evento di fine della scadenza non sia mai avvenuto, se 0 solo laddove l'evento di fine sia accaduto															
2037        			ListaScadenzeOut			OUT		NOCOPY CLOB,						-- Lista delle scadenze (XML conforme a schema LISTA_STD.xsd)
2038        																					-- Ogni scadenza/appuntamento è un tag Riga che contiene le seguenti colonne:
2039        																					-- 1) Data della scadenza/appuntamento (nel formato dato dal parametro FMT_STD_DATA)
2040        																					-- 2) Ora della scadenza/appuntamento (può non essere valorizzata; se lo è ha il formato HH24:MI)
2041        																					-- 3) Id. del processo/procedimento cui è relativa la scadenza
2042        																					-- 4) Estremi della scadenza
2043        																					-- 5) Estremi del procedimento/processo cui è relativa la scadenza
2044        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2045        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
2046        			ErrMsgOut				OUT 	VARCHAR2								-- Messaggio d'errore
2047        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
2048        	
2049        	/****** funzione per recuperare i dati degli oggetti di processo di un dato processo/procedimento come xml unico 							*****/
2050        	/****** la sezione recupera la versione della caratterizzazione degli oggetti relativa all'ultimo evento in cui sono stati caratterizzati   ****/
2051        	function GetProcObjXML(
2052        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,	--(obblig.) Id. del processo / procedimento di cui tirar fuori gli oggetti (la versione nell'evento più recente)
2053        			IdTipoEventoIn		IN		INTEGER,						-- Id. del tipo evento da cui si richiama la funzione
2054        			XMLProbObjOut		OUT		NOCOPY CLOB,					-- Parametri da passare al metodo Store di StorageUtil per archiviare il file su SharePoint. 
2055        																		-- E' un xml conforme allo schema SezioneCacheEstesa.xsd  
2056        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2057        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
2058        			ErrMsgOut			OUT 	VARCHAR2)						-- Messaggio d'errore
2059        			return PLS_INTEGER;											-- Vale 1 se il fascicolo è stato individuato univocamente, altrimenti 0
2060        
2061        	---#####anche funz. singole, in cui posso settare anche il n.ro ordine (se già occupato quelli con n.ro >= shiftano avanti)
2062        	---serve funz. che controlli dati del doc. (ad es. spacchettando i mitt/dest)
2063        	---serve funz. di dettaglio doc....
2064        	----quando setto/modifico date di UD associata a evento...devo agire su evento...?? Creo anche eventi ???
2065        	---se un evento non ha tipo doc. associato posso agganciargli doc. di qualsiasi tipo...
2066        	
2067        	---- funzione per ottenere dati e file per la pubblicazione via ftp nel caso di processo di iter atti
2068        	---- usata da Mauriziano che mette un xml e una cartella per ogni pubblicazione
2069        	---- e da Aosta che mette su ftp solo il file dell'atto (l'xml con tutte le pubblicazioni viene generato a parte in modalità schedulata)
2070        	function GetDatiInvioPubblViaFtp(
2071        			IdProcessIn			IN		DMT_PROCESSES.ID_PROCESS%type,	--(obblig.) Id. del processo di iter atti di cui pubblicare dispositivo e allegati
2072        			XMLPubblicazioneOut	OUT		NOCOPY CLOB,					-- XML da mettere sull'ftp con i dati di pubblicazione
2073        			NomeXMLOut			OUT		VARCHAR2,						-- Nome con cui salvare sul ftp il file XML
2074        			NomeCartellaOut		OUT		VARCHAR2,						-- Nome della cartella ftp in cui salvare i file da pubblicare 
2075        																		-- Se non esiste è da creare (può essere un percorso con i valri livelli separati da /)
2076        			FileDaPubblicareOut	OUT		NOCOPY CLOB,					-- XML - conforme a schema ListaSdd.xsd - con i dati dei file da pubblicare
2077        																		-- Ogni file è un tag Riga che contiene le colonne:
2078        																		-- 1: URI del file
2079        																		-- 2: Nome del file
2080        																		-- 3: (valori 1/0) Se 1 indica che il file va timbrato
2081        																		-- 4: ID_UD per generare il timbro
2082        																		-- 5: Mimetype del file
2083        			UserIdAccessoFtpOut	 OUT		VARCHAR2,					-- Userid con cui si accede al ftp se non è fissa 
2084        																		-- Se NULL la userid è determinata dal file di properties
2085        			PasswordAccessoFtpOut	 OUT		VARCHAR2,				-- Password con cui si accede al ftp se non è fissa 
2086        																		-- Se NULL la password è determinata dal file di properties
2087        			NomeDirAccessoFtpOut OUT		VARCHAR2,					-- Nome della cartella in cui si accede al ftp se non è fissa 
2088        																		-- Se NULL la cartella è determinata dal file di properties
2089        			ErrContextOut		OUT		VARCHAR2,						-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2090        			ErrCodeOut			OUT		PLS_INTEGER,					-- N.ro errore di uscita
2091        			ErrMsgOut			OUT 	VARCHAR2)						-- Messaggio d'errore
2092        			return PLS_INTEGER;											-- Vale 1 se tutto andato a buon fine, altrimenti 0
2093        	
2094        	-------------è la procedura schedulata con job Oracle che avvia i procedimenti di controllo reg. amministrativa
2095        	procedure AvviaIterControlloRegAmm;
2096        	
2097        	-------------è la procedura schedulata con job Oracle che avvia i procedimenti di visura SUE (derivante da pratiche dello sportello elixForms)
2098        	procedure AvviaIterVisuraSUE;
2099        	
2100        	------------è la procedura schedulata con job Oracle che avvia i procedimenti di TSO
2101        	procedure AvviaIterTSO;
2102        	
2103        	-------------è la procedura schedulata con job Oracle che avvia i procedimenti istanza RRL dello SVU di Comune Reggio Calabria
2104        	procedure AvviaIterIstanzaRRL;
2105        	
2106        	------------ funzione per sapere come impostare nel dettaglio atto la visibilità/se editabile o meno/preimpostazione dei flag legati alla UO - proponente o competente - passata in input
2107        	function GetOpzUOInDettAtto(
2108        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
2109        																					-- (obblig). Codice identificativo del token di connessione
2110        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si sta lavorando. Se non valorizzato è l'utente connesso
2111        			IdUOIn					IN		INTEGER,								-- Id. UO della struttura per cui ricavare come impostare la visibilità/se editabile o meno/preimpostazione  
2112        			XMLOpzOut				OUT		NOCOPY CLOB,							-- XML secondo tracciato SezioneCache.xsd contiene le info su come impostare/far vedere i flag legati alla UO proponente/competente
2113        																					-- Contiene le variabili:
2114        																					-- TASK_RESULT_2_VISTO_DIR_SUP_1.Visibilita  	(1/0)
2115        																					-- TASK_RESULT_2_VISTO_DIR_SUP_1.Editabile		(1/0)
2116        																					-- TASK_RESULT_2_VISTO_DIR_SUP_1.ValoreDefault	(1/NULL)
2117        																					-- TASK_RESULT_2_VISTO_DIR_SUP_2.Visibilita  	(1/0)
2118        																					-- TASK_RESULT_2_VISTO_DIR_SUP_2.Editabile		(1/0)
2119        																					-- TASK_RESULT_2_VISTO_DIR_SUP_2.ValoreDefault	(1/NULL)
2120        																					-- TASK_RESULT_2_VISTO_RESP_UFF.Visibilita  	(1/0)
2121        																					-- TASK_RESULT_2_VISTO_RESP_UFF.Editabile		(1/0)
2122        																					-- TASK_RESULT_2_VISTO_RESP_UFF.ValoreDefault	(1/NULL)
2123        																					-- TASK_RESULT_2_VISTO_DIR_SUP_1.ValoriSelectScrivanie : lista con 2 colonne 1) id scrivania; 2) decodifica scrivania
2124        																					-- TASK_RESULT_2_VISTO_DIR_SUP_1.ValoreDefaultSelectScrivanie
2125        																					-- TASK_RESULT_2_VISTO_DIR_SUP_2.ValoriSelectScrivanie : lista con 2 colonne 1) id scrivania; 2) decodifica scrivania
2126        																					-- TASK_RESULT_2_VISTO_DIR_SUP_2.ValoreDefaultSelectScrivanie
2127        																					-- TASK_RESULT_2_VISTO_RESP_UFF.ValoriSelectScrivanie : lista con 2 colonne 1) id scrivania; 2) decodifica scrivania
2128        																					-- TASK_RESULT_2_VISTO_RESP_UFF.ValoreDefaultSelectScrivanie
2129        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2130        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
2131        			ErrMsgOut				OUT 	VARCHAR2)								-- Messaggio d'errore
2132        			return PLS_INTEGER;														-- Vale 1 se tutto andato a buon fine, altrimenti 0
2133        
2134        	----- funzione per tracciare che è stato chiuso il dettaglio di un processo/atto o la maschera di uno specifico task del processo/atto
2135        	function LogChiusuraTaskDettProc(
2136        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
2137        																					-- (obblig). Codice identificativo del token di connessione
2138        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si sta lavorando. Se non valorizzato è l'utente connesso
2139        			IdProcessIn				IN 		INTEGER,								-- Id. del processo di cui si chiude il dettaglio
2140        			FlgRollBckFullIn		IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
2141        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
2142        			FlgAutoCommitIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
2143        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2144        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
2145        			ErrMsgOut				OUT 	VARCHAR2)								-- Messaggio d'errore
2146        			return PLS_INTEGER;														-- Vale 1 se tutto andato a buon fine, altrimenti 0
2147        			
2148        	---- funzione per controllare se per un RdA di ADSP c'è capienza sul singolo capitolo/conto che si sta compilando da GUI o su tutti quelli già inseriti se non si specifica un particolare capitolo/conto
2149        	function CtrlDispCAPContabileRdA_ADSP(
2150        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
2151        																					-- (obblig) Codice identificativo del token di connessione
2152        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si sta lavorando. Se non valorizzato è l'utente connesso
2153        			IdUDIn					IN 		INTEGER,								-- Id. UD della propsta di RdA su cui fare la verifica
2154        			KeyCapitoloContoIn		IN		VARCHAR2 DEFAULT NULL,					-- (obblig) Chiave del singolo Cdc/capitolo/conto di contabilità da verificare
2155        																					-- Va inserito solo se si sta facendo la verifica quando si compila/modifica un movimemto da GUI
2156        			ListaKeyContImpAllocOut	OUT 	NOCOPY CLOB,							-- Lista xml con una riga per ogni Cdc/capitolo/conto
2157        																					-- solo quello in input in KeyCapitoloContoIn se valorizzato, altrimenti tutti quelli già salvati sui dati contabili della proposta se KeyCapitoloContoIn NON è valorizzato
2158        																					-- Ogni riga contiene 2 colonne:
2159        																					-- 1) Chiave del Cdc/capitolo/conto di contabilità
2160        																					-- 2) Importo allocato sul Cdc/capitolo/conto di col 1 da tutti gli RdA in iter, non trasformati in decreti e che comportano nuovi impegni in contabilità
2161        																					--	  L'importo è in notazione italiana con , per i decimali
2162        																					--	  Se KeyCapitoloContoIn è vuoto la somma tiene conto anche dell'importo dell'RdA corrente su Cdc/capitolo/conto, se KeyCapitoloContoIn è valorizzato invece no (perchè il dato a DB potrebbe essere in corso di variazione nella GUI)
2163        			ListaAttiConcorrentiOut	OUT		NOCOPY CLOB,							-- Lista xml std con gli RdA/decreti in iter che impattano su stesso cdc/capitolo/conto
2164        																					-- Ogni riga è una proposta di atto e contiene:
2165        																					-- 1) Id. UD della proposta
2166        																					-- 2) ID. process della proposta
2167        																					-- 3) Estremi della proposta
2168        																					-- 4) Oggetto della proposta
2169        																					-- 5) Importo allocato su cdc/capitolo/conto da parte della proposta (in notazione italiana con , per i decimali)
2170        			ErrContextOut			OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
2171        			ErrCodeOut				OUT		PLS_INTEGER,							-- N.ro errore di uscita
2172        			ErrMsgOut				OUT 	VARCHAR2)								-- Messaggio d'errore
2173        			return PLS_INTEGER;														-- Vale 1 se tutto andato a buon fine, altrimenti 0
2174        
2175        		
2176        			
2177        END DMPK_PROCESSES;