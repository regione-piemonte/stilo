/* * SPDX-License-Identifier: AGPL-3.0-or-later * * C Copyright 2023 Regione Piemonte * */

// Generated 2-feb-2017 16.02.31 by Hibernate Tools 3.5.0.Final

import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MailboxMessage generated by hbm2java
 */
@Entity
@Table(name = "MAILBOX_MESSAGE")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class MailboxMessage implements java.io.Serializable {

	private static final long serialVersionUID = 6492148932849080873L;
	private MailboxMessageId id;
	private Mailbox mailbox;
	private String status;
	private String urlMime;
	private Blob datamail;
	private Date dateDischarged;
	private String statusMessage;
	private Long messageUid;
	private Long mailboxUidValidity;
	private Set<MailboxMessageOperation> mailboxMessageOperations = new HashSet<MailboxMessageOperation>(0);

	public MailboxMessage() {
	}

	public MailboxMessage(MailboxMessageId id, Mailbox mailbox, String status, Date dateDischarged) {
		this.id = id;
		this.mailbox = mailbox;
		this.status = status;
		this.dateDischarged = dateDischarged;
	}

	public MailboxMessage(MailboxMessageId id, Mailbox mailbox, String status, String urlMime, Blob datamail, Date dateDischarged, String statusMessage,
			Long messageUid, Long mailboxUidValidity, Set<MailboxMessageOperation> mailboxMessageOperations) {
		this.id = id;
		this.mailbox = mailbox;
		this.status = status;
		this.urlMime = urlMime;
		this.datamail = datamail;
		this.dateDischarged = dateDischarged;
		this.statusMessage = statusMessage;
		this.messageUid = messageUid;
		this.mailboxUidValidity = mailboxUidValidity;
		this.mailboxMessageOperations = mailboxMessageOperations;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "messageId", column = @Column(name = "MESSAGE_ID", nullable = false, length = 400)),
			@AttributeOverride(name = "idMailbox", column = @Column(name = "ID_MAILBOX", nullable = false, length = 40)) })
	public MailboxMessageId getId() {
		return this.id;
	}

	public void setId(MailboxMessageId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_MAILBOX", nullable = false, insertable = false, updatable = false)
	public Mailbox getMailbox() {
		return this.mailbox;
	}

	public void setMailbox(Mailbox mailbox) {
		this.mailbox = mailbox;
	}

	@Column(name = "STATUS", nullable = false, length = 30)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "URL_MIME", length = 300)
	public String getUrlMime() {
		return this.urlMime;
	}

	public void setUrlMime(String urlMime) {
		this.urlMime = urlMime;
	}

	@Column(name = "DATAMAIL")
	public Blob getDatamail() {
		return this.datamail;
	}

	public void setDatamail(Blob datamail) {
		this.datamail = datamail;
	}

	@Column(name = "DATE_DISCHARGED", nullable = false, length = 7)
	public Date getDateDischarged() {
		return this.dateDischarged;
	}

	public void setDateDischarged(Date dateDischarged) {
		this.dateDischarged = dateDischarged;
	}

	@Column(name = "STATUS_MESSAGE")
	public String getStatusMessage() {
		return this.statusMessage;
	}

	public void setStatusMessage(String statusMessage) {
		this.statusMessage = statusMessage;
	}

	@Column(name = "MESSAGE_UID", precision = 15, scale = 0)
	public Long getMessageUid() {
		return this.messageUid;
	}

	public void setMessageUid(Long messageUid) {
		this.messageUid = messageUid;
	}

	@Column(name = "MAILBOX_UID_VALIDITY", precision = 15, scale = 0)
	public Long getMailboxUidValidity() {
		return this.mailboxUidValidity;
	}

	public void setMailboxUidValidity(Long mailboxUidValidity) {
		this.mailboxUidValidity = mailboxUidValidity;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mailboxMessage")
	public Set<MailboxMessageOperation> getMailboxMessageOperations() {
		return this.mailboxMessageOperations;
	}

	public void setMailboxMessageOperations(Set<MailboxMessageOperation> mailboxMessageOperations) {
		this.mailboxMessageOperations = mailboxMessageOperations;
	}

}
