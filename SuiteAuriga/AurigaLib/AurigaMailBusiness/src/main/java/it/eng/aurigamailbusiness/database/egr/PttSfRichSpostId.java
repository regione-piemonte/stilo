/* * SPDX-License-Identifier: AGPL-3.0-or-later * * C Copyright 2023 Regione Piemonte * */

// Generated 22-set-2016 12.14.09 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * PttSfRichSpostId generated by hbm2java
 */
@Embeddable
public class PttSfRichSpostId implements java.io.Serializable {

	private BigDecimal idRichiesta;
	private int idFascicolo;
	private int numSottofasc;

	public PttSfRichSpostId() {
	}

	public PttSfRichSpostId(BigDecimal idRichiesta, int idFascicolo,
			int numSottofasc) {
		this.idRichiesta = idRichiesta;
		this.idFascicolo = idFascicolo;
		this.numSottofasc = numSottofasc;
	}

	@Column(name = "ID_RICHIESTA", nullable = false, precision = 22, scale = 0)
	public BigDecimal getIdRichiesta() {
		return this.idRichiesta;
	}

	public void setIdRichiesta(BigDecimal idRichiesta) {
		this.idRichiesta = idRichiesta;
	}

	@Column(name = "ID_FASCICOLO", nullable = false, precision = 8, scale = 0)
	public int getIdFascicolo() {
		return this.idFascicolo;
	}

	public void setIdFascicolo(int idFascicolo) {
		this.idFascicolo = idFascicolo;
	}

	@Column(name = "NUM_SOTTOFASC", nullable = false, precision = 5, scale = 0)
	public int getNumSottofasc() {
		return this.numSottofasc;
	}

	public void setNumSottofasc(int numSottofasc) {
		this.numSottofasc = numSottofasc;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof PttSfRichSpostId))
			return false;
		PttSfRichSpostId castOther = (PttSfRichSpostId) other;

		return ((this.getIdRichiesta() == castOther.getIdRichiesta()) || (this
				.getIdRichiesta() != null && castOther.getIdRichiesta() != null && this
				.getIdRichiesta().equals(castOther.getIdRichiesta())))
				&& (this.getIdFascicolo() == castOther.getIdFascicolo())
				&& (this.getNumSottofasc() == castOther.getNumSottofasc());
	}

	public int hashCode() {
		int result = 17;

		result = 37
				* result
				+ (getIdRichiesta() == null ? 0 : this.getIdRichiesta()
						.hashCode());
		result = 37 * result + this.getIdFascicolo();
		result = 37 * result + this.getNumSottofasc();
		return result;
	}

}
