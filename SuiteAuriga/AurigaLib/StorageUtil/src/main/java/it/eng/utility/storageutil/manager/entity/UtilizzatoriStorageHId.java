/* * SPDX-License-Identifier: AGPL-3.0-or-later * * C Copyright 2023 Regione Piemonte * */

// Generated 29-mar-2012 15.55.01 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * UtilizzatoriStorageHId generated by hbm2java
 */
@Embeddable
public class UtilizzatoriStorageHId implements java.io.Serializable {

	private String idUtilizzatore;
	private Date tsFinoAl;

	public UtilizzatoriStorageHId() {
	}

	public UtilizzatoriStorageHId(String idUtilizzatore, Date tsFinoAl) {
		this.idUtilizzatore = idUtilizzatore;
		this.tsFinoAl = tsFinoAl;
	}

	@Column(name = "id_utilizzatore", nullable = false, length = 150)
	public String getIdUtilizzatore() {
		return this.idUtilizzatore;
	}

	public void setIdUtilizzatore(String idUtilizzatore) {
		this.idUtilizzatore = idUtilizzatore;
	}

	@Column(name = "ts_fino_al", nullable = false, length = 19)
	public Date getTsFinoAl() {
		return this.tsFinoAl;
	}

	public void setTsFinoAl(Date tsFinoAl) {
		this.tsFinoAl = tsFinoAl;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof UtilizzatoriStorageHId))
			return false;
		UtilizzatoriStorageHId castOther = (UtilizzatoriStorageHId) other;

		return ((this.getIdUtilizzatore() == castOther.getIdUtilizzatore()) || (this
				.getIdUtilizzatore() != null
				&& castOther.getIdUtilizzatore() != null && this
				.getIdUtilizzatore().equals(castOther.getIdUtilizzatore())))
				&& ((this.getTsFinoAl() == castOther.getTsFinoAl()) || (this
						.getTsFinoAl() != null
						&& castOther.getTsFinoAl() != null && this
						.getTsFinoAl().equals(castOther.getTsFinoAl())));
	}

	public int hashCode() {
		int result = 17;

		result = 37
				* result
				+ (getIdUtilizzatore() == null ? 0 : this.getIdUtilizzatore()
						.hashCode());
		result = 37 * result
				+ (getTsFinoAl() == null ? 0 : this.getTsFinoAl().hashCode());
		return result;
	}

}
