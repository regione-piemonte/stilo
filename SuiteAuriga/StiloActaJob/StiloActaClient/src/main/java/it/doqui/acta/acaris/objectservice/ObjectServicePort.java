/* * SPDX-License-Identifier: AGPL-3.0-or-later * * C Copyright 2023 Regione Piemonte * */
package it.doqui.acta.acaris.objectservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import it.doqui.acta.acaris.archive.EnumDocumentObjectType;
import it.doqui.acta.acaris.archive.EnumFolderObjectType;
import it.doqui.acta.acaris.archive.EnumRelationshipObjectType;
import it.doqui.acta.acaris.common.AcarisContentStreamType;
import it.doqui.acta.acaris.common.ChangeTokenType;
import it.doqui.acta.acaris.common.EnumStreamId;
import it.doqui.acta.acaris.common.NavigationConditionInfoType;
import it.doqui.acta.acaris.common.ObjectIdType;
import it.doqui.acta.acaris.common.ObjectResponseType;
import it.doqui.acta.acaris.common.PagingResponseType;
import it.doqui.acta.acaris.common.PrincipalIdType;
import it.doqui.acta.acaris.common.PropertiesType;
import it.doqui.acta.acaris.common.PropertyFilterType;
import it.doqui.acta.acaris.common.PropertyType;
import it.doqui.acta.acaris.common.QueryConditionType;
import it.doqui.acta.acaris.common.QueryableObjectType;
import it.doqui.acta.acaris.common.SimpleResponseType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ObjectServicePort", targetNamespace = "objectservice.acaris.acta.doqui.it")
@XmlSeeAlso({
    it.doqui.acta.acaris.archive.ObjectFactory.class,
    it.doqui.acta.acaris.common.ObjectFactory.class
})
public interface ObjectServicePort {


    /**
     * 
     * @param repositoryId
     * @param typeId
     * @param principalId
     * @param properties
     * @param folderId
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectIdType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "createFolder", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateFolder")
    @ResponseWrapper(localName = "createFolderResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateFolderResponse")
    public ObjectIdType createFolder(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "typeId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumFolderObjectType typeId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "properties", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertiesType properties,
        @WebParam(name = "folderId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType folderId)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param repositoryId
     * @param principalId
     * @param objectId
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "getProperties", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.GetProperties")
    @ResponseWrapper(localName = "getPropertiesResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.GetPropertiesResponse")
    public ObjectResponseType getProperties(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType objectId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "filter", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param identifiers
     * @param repositoryId
     * @param principalId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.common.ObjectResponseType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "getPropertiesMassive", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.GetPropertiesMassive")
    @ResponseWrapper(localName = "getPropertiesMassiveResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.GetPropertiesMassiveResponse")
    public List<ObjectResponseType> getPropertiesMassive(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "identifiers", targetNamespace = "")
        List<ObjectIdType> identifiers,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param contentStream
     * @param repositoryId
     * @param typeId
     * @param principalId
     * @param properties
     * @param folderId
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectIdType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "createDocument", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateDocument")
    @ResponseWrapper(localName = "createDocumentResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateDocumentResponse")
    public ObjectIdType createDocument(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "typeId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumDocumentObjectType typeId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "properties", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertiesType properties,
        @WebParam(name = "folderId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType folderId,
        @WebParam(name = "contentStream", targetNamespace = "archive.acaris.acta.doqui.it")
        AcarisContentStreamType contentStream)
        throws AcarisException
    ;

    /**
     * 
     * @param contentStream
     * @param repositoryId
     * @param associativeObjectTypeId
     * @param associativeObjectProperties
     * @param typeId
     * @param principalId
     * @param properties
     * @param folderId
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectIdType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "createAssociativeDocument", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateAssociativeDocument")
    @ResponseWrapper(localName = "createAssociativeDocumentResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateAssociativeDocumentResponse")
    public ObjectIdType createAssociativeDocument(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "typeId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumDocumentObjectType typeId,
        @WebParam(name = "associativeObjectTypeId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumFolderObjectType associativeObjectTypeId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "properties", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertiesType properties,
        @WebParam(name = "associativeObjectProperties", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertiesType associativeObjectProperties,
        @WebParam(name = "folderId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType folderId,
        @WebParam(name = "contentStream", targetNamespace = "archive.acaris.acta.doqui.it")
        AcarisContentStreamType contentStream)
        throws AcarisException
    ;

    /**
     * 
     * @param targetObjectId
     * @param repositoryId
     * @param typeId
     * @param principalId
     * @param sourceObjectId
     * @param properties
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectIdType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "createRelationship", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateRelationship")
    @ResponseWrapper(localName = "createRelationshipResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CreateRelationshipResponse")
    public ObjectIdType createRelationship(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "typeId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumRelationshipObjectType typeId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "properties", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertiesType properties,
        @WebParam(name = "sourceObjectId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType sourceObjectId,
        @WebParam(name = "targetObjectId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType targetObjectId)
        throws AcarisException
    ;

    /**
     * 
     * @param streamId
     * @param repositoryId
     * @param documentId
     * @param principalId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.common.AcarisContentStreamType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "contentStream", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "getContentStream", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.GetContentStream")
    @ResponseWrapper(localName = "getContentStreamResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.GetContentStreamResponse")
    public List<AcarisContentStreamType> getContentStream(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "documentId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType documentId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "streamId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumStreamId streamId)
        throws AcarisException
    ;

    /**
     * 
     * @param streamId
     * @param contentStream
     * @param repositoryId
     * @param documentId
     * @param principalId
     * @param changeToken
     * @return
     *     returns it.doqui.acta.acaris.common.SimpleResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "addRenditionStream", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.AddRenditionStream")
    @ResponseWrapper(localName = "addRenditionStreamResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.AddRenditionStreamResponse")
    public SimpleResponseType addRenditionStream(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "documentId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType documentId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "changeToken", targetNamespace = "archive.acaris.acta.doqui.it")
        ChangeTokenType changeToken,
        @WebParam(name = "streamId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumStreamId streamId,
        @WebParam(name = "contentStream", targetNamespace = "archive.acaris.acta.doqui.it")
        List<AcarisContentStreamType> contentStream)
        throws AcarisException
    ;

    /**
     * 
     * @param repositoryId
     * @param principalId
     * @param changeToken
     * @param objectId
     * @param properties
     * @return
     *     returns it.doqui.acta.acaris.common.SimpleResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "updateProperties", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.UpdateProperties")
    @ResponseWrapper(localName = "updatePropertiesResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.UpdatePropertiesResponse")
    public SimpleResponseType updateProperties(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType objectId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "changeToken", targetNamespace = "archive.acaris.acta.doqui.it")
        ChangeTokenType changeToken,
        @WebParam(name = "properties", targetNamespace = "archive.acaris.acta.doqui.it")
        List<PropertyType> properties)
        throws AcarisException
    ;

    /**
     * 
     * @param contentStream
     * @param repositoryId
     * @param documentId
     * @param principalId
     * @param changeToken
     * @return
     *     returns it.doqui.acta.acaris.common.SimpleResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "setContentStream", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.SetContentStream")
    @ResponseWrapper(localName = "setContentStreamResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.SetContentStreamResponse")
    public SimpleResponseType setContentStream(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "documentId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType documentId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "changeToken", targetNamespace = "archive.acaris.acta.doqui.it")
        ChangeTokenType changeToken,
        @WebParam(name = "contentStream", targetNamespace = "archive.acaris.acta.doqui.it")
        AcarisContentStreamType contentStream)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param maxItems
     * @param navigationLimits
     * @param criteria
     * @param repositoryId
     * @param principalId
     * @param skipCount
     * @param target
     * @return
     *     returns it.doqui.acta.acaris.common.PagingResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "query", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.Query")
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.QueryResponse")
    public PagingResponseType query(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "target", targetNamespace = "")
        QueryableObjectType target,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter,
        @WebParam(name = "criteria", targetNamespace = "")
        List<QueryConditionType> criteria,
        @WebParam(name = "navigationLimits", targetNamespace = "")
        NavigationConditionInfoType navigationLimits,
        @WebParam(name = "maxItems", targetNamespace = "")
        Integer maxItems,
        @WebParam(name = "skipCount", targetNamespace = "")
        Integer skipCount)
        throws AcarisException
    ;

    /**
     * 
     * @param associativeProperties
     * @param sourceFolderId
     * @param repositoryId
     * @param targetFolderId
     * @param associativeObjectId
     * @param principalId
     * @throws AcarisException
     */
    @WebMethod
    @RequestWrapper(localName = "moveDocument", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.MoveDocument")
    @ResponseWrapper(localName = "moveDocumentResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.MoveDocumentResponse")
    public void moveDocument(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "associativeObjectId", targetNamespace = "archive.acaris.acta.doqui.it", mode = WebParam.Mode.INOUT)
        Holder<ObjectIdType> associativeObjectId,
        @WebParam(name = "sourceFolderId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType sourceFolderId,
        @WebParam(name = "targetFolderId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType targetFolderId,
        @WebParam(name = "associativeProperties", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertiesType associativeProperties)
        throws AcarisException
    ;

    /**
     * 
     * @param repositoryId
     * @param principalId
     * @param objectId
     * @return
     *     returns it.doqui.acta.acaris.common.SimpleResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "closeFolder", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CloseFolder")
    @ResponseWrapper(localName = "closeFolderResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.archive.CloseFolderResponse")
    public SimpleResponseType closeFolder(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType objectId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId)
        throws AcarisException
    ;

}
