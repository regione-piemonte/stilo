/* * SPDX-License-Identifier: AGPL-3.0-or-later * * C Copyright 2023 Regione Piemonte * */
package it.doqui.acta.acaris.repositoryservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RepositoryService", targetNamespace = "repositoryservice.acaris.acta.doqui.it", wsdlLocation = "http://tst-applogic.reteunitaria.piemonte.it/actasrv/repositoryWS?wsdl")
public class RepositoryService
    extends Service
{

    private final static URL REPOSITORYSERVICE_WSDL_LOCATION;
    private final static WebServiceException REPOSITORYSERVICE_EXCEPTION;
    private final static QName REPOSITORYSERVICE_QNAME = new QName("repositoryservice.acaris.acta.doqui.it", "RepositoryService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://tst-applogic.reteunitaria.piemonte.it/actasrv/repositoryWS?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        REPOSITORYSERVICE_WSDL_LOCATION = url;
        REPOSITORYSERVICE_EXCEPTION = e;
    }

    public RepositoryService() {
        super(__getWsdlLocation(), REPOSITORYSERVICE_QNAME);
    }

    public RepositoryService(WebServiceFeature... features) {
        super(__getWsdlLocation(), REPOSITORYSERVICE_QNAME, features);
    }

    public RepositoryService(URL wsdlLocation) {
        super(wsdlLocation, REPOSITORYSERVICE_QNAME);
    }

    public RepositoryService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, REPOSITORYSERVICE_QNAME, features);
    }

    public RepositoryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RepositoryService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RepositoryServicePort
     */
    @WebEndpoint(name = "RepositoryServicePort")
    public RepositoryServicePort getRepositoryServicePort() {
        return super.getPort(new QName("repositoryservice.acaris.acta.doqui.it", "RepositoryServicePort"), RepositoryServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RepositoryServicePort
     */
    @WebEndpoint(name = "RepositoryServicePort")
    public RepositoryServicePort getRepositoryServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("repositoryservice.acaris.acta.doqui.it", "RepositoryServicePort"), RepositoryServicePort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (REPOSITORYSERVICE_EXCEPTION!= null) {
            throw REPOSITORYSERVICE_EXCEPTION;
        }
        return REPOSITORYSERVICE_WSDL_LOCATION;
    }

}
