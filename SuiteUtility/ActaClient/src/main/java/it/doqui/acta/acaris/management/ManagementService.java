
package it.doqui.acta.acaris.management;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ManagementService", targetNamespace = "managementservice.acaris.acta.doqui.it", wsdlLocation = "http://tst-applogic.reteunitaria.piemonte.it/actasrv/managementWS?wsdl")
public class ManagementService
    extends Service
{

    private final static URL MANAGEMENTSERVICE_WSDL_LOCATION;
    private final static WebServiceException MANAGEMENTSERVICE_EXCEPTION;
    private final static QName MANAGEMENTSERVICE_QNAME = new QName("managementservice.acaris.acta.doqui.it", "ManagementService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://tst-applogic.reteunitaria.piemonte.it/actasrv/managementWS?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MANAGEMENTSERVICE_WSDL_LOCATION = url;
        MANAGEMENTSERVICE_EXCEPTION = e;
    }

    public ManagementService() {
        super(__getWsdlLocation(), MANAGEMENTSERVICE_QNAME);
    }

    public ManagementService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MANAGEMENTSERVICE_QNAME, features);
    }

    public ManagementService(URL wsdlLocation) {
        super(wsdlLocation, MANAGEMENTSERVICE_QNAME);
    }

    public ManagementService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MANAGEMENTSERVICE_QNAME, features);
    }

    public ManagementService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ManagementService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ManagementServicePort
     */
    @WebEndpoint(name = "ManagementServicePort")
    public ManagementServicePort getManagementServicePort() {
        return super.getPort(new QName("managementservice.acaris.acta.doqui.it", "ManagementServicePort"), ManagementServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ManagementServicePort
     */
    @WebEndpoint(name = "ManagementServicePort")
    public ManagementServicePort getManagementServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("managementservice.acaris.acta.doqui.it", "ManagementServicePort"), ManagementServicePort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MANAGEMENTSERVICE_EXCEPTION!= null) {
            throw MANAGEMENTSERVICE_EXCEPTION;
        }
        return MANAGEMENTSERVICE_WSDL_LOCATION;
    }

}
