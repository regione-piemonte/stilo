
package it.doqui.acta.acaris.backoffice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BackOfficeServicePort", targetNamespace = "backofficeservice.acaris.acta.doqui.it")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BackOfficeServicePort {


    /**
     * 
     * @param idAOO
     * @param idNodo
     * @param repositoryId
     * @param idStruttura
     * @param idUtente
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.backoffice.PrincipalResponseType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "principal", targetNamespace = "")
    @RequestWrapper(localName = "getPrincipal", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetPrincipal")
    @ResponseWrapper(localName = "getPrincipalResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetPrincipalResponse")
    public List<PrincipalResponseType> getPrincipal(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "idUtente", targetNamespace = "")
        CodiceFiscaleType idUtente,
        @WebParam(name = "idAOO", targetNamespace = "")
        IdAOOType idAOO,
        @WebParam(name = "idStruttura", targetNamespace = "")
        IdStrutturaType idStruttura,
        @WebParam(name = "idNodo", targetNamespace = "")
        IdNodoType idNodo)
        throws AcarisException
    ;

    /**
     * 
     * @param idAOO
     * @param idNodo
     * @param repositoryId
     * @param idStruttura
     * @param clientApplicationInfo
     * @param idUtente
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.backoffice.PrincipalExtResponseType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "principal", targetNamespace = "")
    @RequestWrapper(localName = "getPrincipalExt", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetPrincipalExt")
    @ResponseWrapper(localName = "getPrincipalExtResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetPrincipalExtResponse")
    public List<PrincipalExtResponseType> getPrincipalExt(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "idUtente", targetNamespace = "")
        CodiceFiscaleType idUtente,
        @WebParam(name = "idAOO", targetNamespace = "")
        IdAOOType idAOO,
        @WebParam(name = "idStruttura", targetNamespace = "")
        IdStrutturaType idStruttura,
        @WebParam(name = "idNodo", targetNamespace = "")
        IdNodoType idNodo,
        @WebParam(name = "clientApplicationInfo", targetNamespace = "")
        ClientApplicationInfo clientApplicationInfo)
        throws AcarisException
    ;

    /**
     * 
     * @param date
     * @param filter
     * @param path
     * @param maxItems
     * @param depth
     * @param rootNodeId
     * @param repositoryId
     * @param principalId
     * @param skipCount
     * @return
     *     returns it.doqui.acta.acaris.backoffice.PagingResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objects", targetNamespace = "")
    @RequestWrapper(localName = "getDescendants", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetDescendants")
    @ResponseWrapper(localName = "getDescendantsResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetDescendantsResponse")
    public PagingResponseType getDescendants(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "path", targetNamespace = "")
        EnumBackOfficeNavigationPathType path,
        @WebParam(name = "rootNodeId", targetNamespace = "")
        ObjectIdType rootNodeId,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date,
        @WebParam(name = "depth", targetNamespace = "")
        Integer depth,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter,
        @WebParam(name = "maxItems", targetNamespace = "")
        Integer maxItems,
        @WebParam(name = "skipCount", targetNamespace = "")
        Integer skipCount)
        throws AcarisException
    ;

    /**
     * 
     * @param date
     * @param filter
     * @param rootNodeId
     * @param repositoryId
     * @param principalId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.backoffice.ObjectResponseType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objects", targetNamespace = "")
    @RequestWrapper(localName = "getObjectParents", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetObjectParents")
    @ResponseWrapper(localName = "getObjectParentsResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetObjectParentsResponse")
    public List<ObjectResponseType> getObjectParents(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "rootNodeId", targetNamespace = "")
        ObjectIdType rootNodeId,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param date
     * @param filter
     * @param ruolo
     * @param repositoryId
     * @param principalId
     * @param objectId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.backoffice.RelazioniStrutturaPropertiesType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "")
    @RequestWrapper(localName = "getRelazioniStruttura", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetRelazioniStruttura")
    @ResponseWrapper(localName = "getRelazioniStrutturaResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetRelazioniStrutturaResponse")
    public List<RelazioniStrutturaPropertiesType> getRelazioniStruttura(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "objectId", targetNamespace = "")
        ObjectIdType objectId,
        @WebParam(name = "ruolo", targetNamespace = "")
        EnumRuoloInGerarchiaType ruolo,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param repositoryId
     * @param principalId
     * @param objectId
     * @return
     *     returns it.doqui.acta.acaris.backoffice.ObjectResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "getProperties", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetProperties")
    @ResponseWrapper(localName = "getPropertiesResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetPropertiesResponse")
    public ObjectResponseType getProperties(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "objectId", targetNamespace = "")
        ObjectIdType objectId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param identifiers
     * @param repositoryId
     * @param principalId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.backoffice.ObjectResponseType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "getPropertiesMassive", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetPropertiesMassive")
    @ResponseWrapper(localName = "getPropertiesMassiveResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetPropertiesMassiveResponse")
    public List<ObjectResponseType> getPropertiesMassive(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "identifiers", targetNamespace = "")
        List<ObjectIdType> identifiers,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param idAOO
     * @param repositoryId
     * @return
     *     returns it.doqui.acta.acaris.backoffice.DettaglioAOOType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "dettaglioAOO", targetNamespace = "")
    @RequestWrapper(localName = "getDettaglioAOO", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetDettaglioAOO")
    @ResponseWrapper(localName = "getDettaglioAOOResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetDettaglioAOOResponse")
    public DettaglioAOOType getDettaglioAOO(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "idAOO", targetNamespace = "")
        IdAOOType idAOO)
        throws AcarisException
    ;

    /**
     * 
     * @param repositoryId
     * @param idStruttura
     * @return
     *     returns it.doqui.acta.acaris.backoffice.DettaglioStrutturaType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "dettaglioStruttura", targetNamespace = "")
    @RequestWrapper(localName = "getDettaglioStruttura", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetDettaglioStruttura")
    @ResponseWrapper(localName = "getDettaglioStrutturaResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetDettaglioStrutturaResponse")
    public DettaglioStrutturaType getDettaglioStruttura(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "idStruttura", targetNamespace = "")
        IdStrutturaType idStruttura)
        throws AcarisException
    ;

    /**
     * 
     * @param service
     * @param repositoryId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.backoffice.QueryableObjectType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "queryableObjectList", targetNamespace = "")
    @RequestWrapper(localName = "getQueryableObjects", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetQueryableObjects")
    @ResponseWrapper(localName = "getQueryableObjectsResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetQueryableObjectsResponse")
    public List<QueryableObjectType> getQueryableObjects(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "service", targetNamespace = "")
        EnumServiceType service)
        throws AcarisException
    ;

    /**
     * 
     * @param repositoryId
     * @param queryableObject
     * @param operation
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.backoffice.ObjectMetadataType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "queryableObjectMetadataList", targetNamespace = "")
    @RequestWrapper(localName = "getQueryableObjectMetadata", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetQueryableObjectMetadata")
    @ResponseWrapper(localName = "getQueryableObjectMetadataResponse", targetNamespace = "backoffice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.GetQueryableObjectMetadataResponse")
    public List<ObjectMetadataType> getQueryableObjectMetadata(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "queryableObject", targetNamespace = "")
        QueryableObjectType queryableObject,
        @WebParam(name = "operation", targetNamespace = "")
        EnumPropertyFilterOperation operation)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param maxItems
     * @param navigationLimits
     * @param criteria
     * @param repositoryId
     * @param principalId
     * @param skipCount
     * @param target
     * @return
     *     returns it.doqui.acta.acaris.backoffice.PagingResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "query", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.Query")
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.backoffice.QueryResponse")
    public PagingResponseType query(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "target", targetNamespace = "")
        QueryableObjectType target,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter,
        @WebParam(name = "criteria", targetNamespace = "")
        List<QueryConditionType> criteria,
        @WebParam(name = "navigationLimits", targetNamespace = "")
        NavigationConditionInfoType navigationLimits,
        @WebParam(name = "maxItems", targetNamespace = "")
        Integer maxItems,
        @WebParam(name = "skipCount", targetNamespace = "")
        Integer skipCount)
        throws AcarisException
    ;

}
