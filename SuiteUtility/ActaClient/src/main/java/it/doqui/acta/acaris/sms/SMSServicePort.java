
package it.doqui.acta.acaris.sms;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SMSServicePort", targetNamespace = "smsservice.acaris.acta.doqui.it")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SMSServicePort {


    /**
     * 
     * @param infoCreazione
     * @param mittente
     * @param repositoryId
     * @param destinatari
     * @param principalId
     * @param oggettiSmistati
     * @return
     *     returns it.doqui.acta.acaris.sms.IdSmistamentoType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objects", targetNamespace = "")
    @RequestWrapper(localName = "creaSmistamento", targetNamespace = "sms.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.CreaSmistamento")
    @ResponseWrapper(localName = "creaSmistamentoResponse", targetNamespace = "sms.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.CreaSmistamentoResponse")
    public IdSmistamentoType creaSmistamento(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "mittente", targetNamespace = "")
        MittenteType mittente,
        @WebParam(name = "destinatari", targetNamespace = "")
        List<DestinatarioType> destinatari,
        @WebParam(name = "oggettiSmistati", targetNamespace = "")
        List<OggettoSmistamentoType> oggettiSmistati,
        @WebParam(name = "infoCreazione", targetNamespace = "")
        InfoCreazioneType infoCreazione)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param maxItems
     * @param navigationLimits
     * @param criteria
     * @param repositoryId
     * @param principalId
     * @param skipCount
     * @param target
     * @return
     *     returns it.doqui.acta.acaris.sms.PagingResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "query", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.Query")
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.QueryResponse")
    public PagingResponseType query(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "target", targetNamespace = "")
        QueryableObjectType target,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter,
        @WebParam(name = "criteria", targetNamespace = "")
        List<QueryConditionType> criteria,
        @WebParam(name = "navigationLimits", targetNamespace = "")
        NavigationConditionInfoType navigationLimits,
        @WebParam(name = "maxItems", targetNamespace = "")
        Integer maxItems,
        @WebParam(name = "skipCount", targetNamespace = "")
        Integer skipCount)
        throws AcarisException
    ;

    /**
     * 
     * @param idAoo
     * @param idNodoUltimoDestinatario
     * @param idUtenteUltimoFirmatario
     * @param dataUltimoFirmatario
     * @param idSmistamentoMittente
     * @param repositoryId
     * @param docFisiciAllegati
     * @param destinatari
     * @param principalId
     * @param docFisicoPrincipale
     * @param firmaAncheAllegati
     * @throws AcarisException
     */
    @WebMethod
    @RequestWrapper(localName = "completaSmistamentoFirmaDwd", targetNamespace = "sms.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.CompletaSmistamentoFirmaDwd")
    @ResponseWrapper(localName = "completaSmistamentoFirmaDwdResponse", targetNamespace = "sms.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.CompletaSmistamentoFirmaDwdResponse")
    public void completaSmistamentoFirmaDwd(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "idSmistamentoMittente", targetNamespace = "")
        long idSmistamentoMittente,
        @WebParam(name = "idAoo", targetNamespace = "")
        long idAoo,
        @WebParam(name = "dataUltimoFirmatario", targetNamespace = "")
        XMLGregorianCalendar dataUltimoFirmatario,
        @WebParam(name = "idUtenteUltimoFirmatario", targetNamespace = "")
        long idUtenteUltimoFirmatario,
        @WebParam(name = "idNodoUltimoDestinatario", targetNamespace = "")
        long idNodoUltimoDestinatario,
        @WebParam(name = "docFisicoPrincipale", targetNamespace = "")
        DocumentoFisicoIRC docFisicoPrincipale,
        @WebParam(name = "docFisiciAllegati", targetNamespace = "")
        List<DocumentoFisicoIRC> docFisiciAllegati,
        @WebParam(name = "destinatari", targetNamespace = "")
        List<DestinatarioConNoteType> destinatari,
        @WebParam(name = "firmaAncheAllegati", targetNamespace = "")
        boolean firmaAncheAllegati)
        throws AcarisException
    ;

    /**
     * 
     * @param dataRifiuto
     * @param idSmistamentoMittente
     * @param repositoryId
     * @param destinatarioRifiuta
     * @param principalId
     * @param idUtenteRifiuto
     * @param destinatariCompletati
     * @throws AcarisException
     */
    @WebMethod
    @RequestWrapper(localName = "annullaSmistamentoFirmaDwd", targetNamespace = "sms.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.AnnullaSmistamentoFirmaDwd")
    @ResponseWrapper(localName = "annullaSmistamentoFirmaDwdResponse", targetNamespace = "sms.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.sms.AnnullaSmistamentoFirmaDwdResponse")
    public void annullaSmistamentoFirmaDwd(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "idSmistamentoMittente", targetNamespace = "")
        long idSmistamentoMittente,
        @WebParam(name = "dataRifiuto", targetNamespace = "")
        XMLGregorianCalendar dataRifiuto,
        @WebParam(name = "idUtenteRifiuto", targetNamespace = "")
        long idUtenteRifiuto,
        @WebParam(name = "destinatariCompletati", targetNamespace = "")
        List<DestinatarioConNoteType> destinatariCompletati,
        @WebParam(name = "destinatarioRifiuta", targetNamespace = "")
        DestinatarioConNoteType destinatarioRifiuta)
        throws AcarisException
    ;

}
