
package it.doqui.acta.acaris.multifiling;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MultifilingServicePort", targetNamespace = "multifilingservice.acaris.acta.doqui.it")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MultifilingServicePort {


    /**
     * 
     * @param repositoryId
     * @param associativeObjectTypeId
     * @param associativeObjectProperties
     * @param principalId
     * @param objectId
     * @param folderId
     * @throws AcarisException
     */
    @WebMethod
    @RequestWrapper(localName = "addAssociativeObjectToFolder", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.multifilling.AddAssociativeObjectToFolder")
    @ResponseWrapper(localName = "addAssociativeObjectToFolderResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.multifilling.AddAssociativeObjectToFolderResponse")
    public void addAssociativeObjectToFolder(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "objectId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType objectId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "folderId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType folderId,
        @WebParam(name = "associativeObjectTypeId", targetNamespace = "archive.acaris.acta.doqui.it")
        EnumFolderObjectType associativeObjectTypeId,
        @WebParam(name = "associativeObjectProperties", targetNamespace = "archive.acaris.acta.doqui.it")
        PropertiesType associativeObjectProperties)
        throws AcarisException
    ;

    /**
     * 
     * @param classificazioneDiPartenzaId
     * @param repositoryId
     * @param principalId
     * @param params
     * @param folderId
     * @return
     *     returns it.doqui.acta.acaris.multifilling.ObjectIdType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "archive.acaris.acta.doqui.it")
    @RequestWrapper(localName = "aggiungiClassificazione", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.multifilling.AggiungiClassificazione")
    @ResponseWrapper(localName = "aggiungiClassificazioneResponse", targetNamespace = "archive.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.multifilling.AggiungiClassificazioneResponse")
    public ObjectIdType aggiungiClassificazione(
        @WebParam(name = "repositoryId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "archive.acaris.acta.doqui.it")
        PrincipalIdType principalId,
        @WebParam(name = "classificazioneDiPartenzaId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType classificazioneDiPartenzaId,
        @WebParam(name = "folderId", targetNamespace = "archive.acaris.acta.doqui.it")
        ObjectIdType folderId,
        @WebParam(name = "params", targetNamespace = "archive.acaris.acta.doqui.it")
        VarargsType params)
        throws AcarisException
    ;

}
