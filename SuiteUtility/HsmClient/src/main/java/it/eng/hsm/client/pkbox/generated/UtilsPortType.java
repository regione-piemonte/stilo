
package it.eng.hsm.client.pkbox.generated;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import it.eng.hsm.client.pkbox.common.generated.ByteArray;
import it.eng.hsm.client.pkbox.common.generated.CertificateID;
import it.eng.hsm.client.pkbox.common.generated.Signer;
import it.eng.hsm.client.pkbox.common.generated.SignerEx;
import it.eng.hsm.client.pkbox.common.generated.TimeStamp;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UtilsPortType", targetNamespace = "http://soap.remote.pkserver.it")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UtilsPortType {


    /**
     * 
     * @param sigLayout
     * @param date
     * @param reason
     * @param image
     * @param fieldName
     * @param accessPermissions
     * @param document
     * @param encoding
     * @param signerName
     * @param environment
     * @param contact
     * @param x
     * @param y
     * @param location
     * @param page
     * @param position
     * @param algorithm
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:pdfdigest2")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "pdfdigest2", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Pdfdigest2")
    @ResponseWrapper(localName = "pdfdigest2Response", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Pdfdigest2Response")
    public byte[] pdfdigest2(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "document", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] document,
        @WebParam(name = "accessPermissions", targetNamespace = "http://soap.remote.pkserver.it")
        int accessPermissions,
        @WebParam(name = "signerName", targetNamespace = "http://soap.remote.pkserver.it")
        String signerName,
        @WebParam(name = "fieldName", targetNamespace = "http://soap.remote.pkserver.it")
        String fieldName,
        @WebParam(name = "sigLayout", targetNamespace = "http://soap.remote.pkserver.it")
        String sigLayout,
        @WebParam(name = "reason", targetNamespace = "http://soap.remote.pkserver.it")
        String reason,
        @WebParam(name = "location", targetNamespace = "http://soap.remote.pkserver.it")
        String location,
        @WebParam(name = "contact", targetNamespace = "http://soap.remote.pkserver.it")
        String contact,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "image", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] image,
        @WebParam(name = "page", targetNamespace = "http://soap.remote.pkserver.it")
        int page,
        @WebParam(name = "position", targetNamespace = "http://soap.remote.pkserver.it")
        int position,
        @WebParam(name = "x", targetNamespace = "http://soap.remote.pkserver.it")
        int x,
        @WebParam(name = "y", targetNamespace = "http://soap.remote.pkserver.it")
        int y,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param data
     * @param pin
     * @param encoding
     * @param algorithm
     * @param signerPin
     * @param customerinfo
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:createTimeStamp")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "createTimeStamp", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.CreateTimeStamp")
    @ResponseWrapper(localName = "createTimeStampResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.CreateTimeStampResponse")
    public byte[] createTimeStamp(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "data", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] data,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "signerPin", targetNamespace = "http://soap.remote.pkserver.it")
        String signerPin,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param sigLayout
     * @param date
     * @param reason
     * @param image
     * @param fieldName
     * @param accessPermissions
     * @param document
     * @param encoding
     * @param signerName
     * @param environment
     * @param cx
     * @param cy
     * @param contact
     * @param x
     * @param y
     * @param location
     * @param page
     * @param position
     * @param algorithm
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:pdfdigest3")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "pdfdigest3", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Pdfdigest3")
    @ResponseWrapper(localName = "pdfdigest3Response", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Pdfdigest3Response")
    public byte[] pdfdigest3(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "document", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] document,
        @WebParam(name = "accessPermissions", targetNamespace = "http://soap.remote.pkserver.it")
        int accessPermissions,
        @WebParam(name = "signerName", targetNamespace = "http://soap.remote.pkserver.it")
        String signerName,
        @WebParam(name = "fieldName", targetNamespace = "http://soap.remote.pkserver.it")
        String fieldName,
        @WebParam(name = "sigLayout", targetNamespace = "http://soap.remote.pkserver.it")
        String sigLayout,
        @WebParam(name = "reason", targetNamespace = "http://soap.remote.pkserver.it")
        String reason,
        @WebParam(name = "location", targetNamespace = "http://soap.remote.pkserver.it")
        String location,
        @WebParam(name = "contact", targetNamespace = "http://soap.remote.pkserver.it")
        String contact,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "image", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] image,
        @WebParam(name = "page", targetNamespace = "http://soap.remote.pkserver.it")
        int page,
        @WebParam(name = "position", targetNamespace = "http://soap.remote.pkserver.it")
        int position,
        @WebParam(name = "x", targetNamespace = "http://soap.remote.pkserver.it")
        int x,
        @WebParam(name = "y", targetNamespace = "http://soap.remote.pkserver.it")
        int y,
        @WebParam(name = "cx", targetNamespace = "http://soap.remote.pkserver.it")
        int cx,
        @WebParam(name = "cy", targetNamespace = "http://soap.remote.pkserver.it")
        int cy,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param envelope
     * @param pin
     * @param encoding
     * @param algorithm
     * @param signerPin
     * @param customerinfo
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:addTimeStampedData")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "addTimeStampedData", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.AddTimeStampedData")
    @ResponseWrapper(localName = "addTimeStampedDataResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.AddTimeStampedDataResponse")
    public byte[] addTimeStampedData(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "envelope", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] envelope,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "signerPin", targetNamespace = "http://soap.remote.pkserver.it")
        String signerPin,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param date
     * @param environment
     * @param operationScope
     * @param cert
     * @return
     *     returns it.eng.hsm.client.pkbox.generated.SignerEx
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:verifyCertificateEx")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "verifyCertificateEx", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyCertificateEx")
    @ResponseWrapper(localName = "verifyCertificateExResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyCertificateExResponse")
    public SignerEx verifyCertificateEx(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "cert", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] cert,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "operationScope", targetNamespace = "http://soap.remote.pkserver.it")
        int operationScope)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param pin
     * @param encoding
     * @param hash
     * @param algorithm
     * @param signerPin
     * @param customerinfo
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:createTimeStampFromHash")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "createTimeStampFromHash", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.CreateTimeStampFromHash")
    @ResponseWrapper(localName = "createTimeStampFromHashResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.CreateTimeStampFromHashResponse")
    public byte[] createTimeStampFromHash(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "hash", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] hash,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "signerPin", targetNamespace = "http://soap.remote.pkserver.it")
        String signerPin,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param fileName
     * @param data
     * @param pin
     * @param dataURI
     * @param hashProtected
     * @param mediaType
     * @param encoding
     * @param algorithm
     * @param signerPin
     * @param customerinfo
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:createTimeStampedData")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "createTimeStampedData", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.CreateTimeStampedData")
    @ResponseWrapper(localName = "createTimeStampedDataResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.CreateTimeStampedDataResponse")
    public byte[] createTimeStampedData(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "data", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] data,
        @WebParam(name = "dataURI", targetNamespace = "http://soap.remote.pkserver.it")
        String dataURI,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "hashProtected", targetNamespace = "http://soap.remote.pkserver.it")
        boolean hashProtected,
        @WebParam(name = "fileName", targetNamespace = "http://soap.remote.pkserver.it")
        String fileName,
        @WebParam(name = "mediaType", targetNamespace = "http://soap.remote.pkserver.it")
        String mediaType,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "signerPin", targetNamespace = "http://soap.remote.pkserver.it")
        String signerPin,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param alias
     * @param encoding
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:exportCertificate")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "exportCertificate", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.ExportCertificate")
    @ResponseWrapper(localName = "exportCertificateResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.ExportCertificateResponse")
    public byte[] exportCertificate(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "alias", targetNamespace = "http://soap.remote.pkserver.it")
        String alias,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param pin
     * @param decryptKey
     * @param certificate
     * @param thumbprint
     * @param keyPin
     * @param enc
     * @param certID
     * @param customerinfo
     * @param algorithm
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:rawdecipher")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "rawdecipher", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Rawdecipher")
    @ResponseWrapper(localName = "rawdecipherResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.RawdecipherResponse")
    public byte[] rawdecipher(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "enc", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] enc,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo,
        @WebParam(name = "decryptKey", targetNamespace = "http://soap.remote.pkserver.it")
        String decryptKey,
        @WebParam(name = "certificate", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] certificate,
        @WebParam(name = "thumbprint", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] thumbprint,
        @WebParam(name = "certID", targetNamespace = "http://soap.remote.pkserver.it")
        CertificateID certID,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "keyPin", targetNamespace = "http://soap.remote.pkserver.it")
        String keyPin,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param envelope
     * @param customerinfo
     * @return
     *     returns it.eng.hsm.client.pkbox.generated.TimeStampedDataInfoEx
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:verifyTimeStampedDataEx")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "verifyTimeStampedDataEx", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStampedDataEx")
    @ResponseWrapper(localName = "verifyTimeStampedDataExResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStampedDataExResponse")
    public TimeStampedDataInfoEx verifyTimeStampedDataEx(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "envelope", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] envelope,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param encoded
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(operationName = "base64decode", action = "urn:base64decode")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "base64decode", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Base64Decode")
    @ResponseWrapper(localName = "base64decodeResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Base64DecodeResponse")
    public byte[] base64Decode(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "encoded", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] encoded)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param date
     * @param environment
     * @param cert
     * @return
     *     returns it.eng.hsm.client.pkbox.generated.Signer
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:verifyCertificate")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "verifyCertificate", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyCertificate")
    @ResponseWrapper(localName = "verifyCertificateResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyCertificateResponse")
    public Signer verifyCertificate(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "cert", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] cert,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param pin
     * @param digest
     * @param keyID
     * @param encoding
     * @param customerinfo
     * @param signer
     * @param signerPin
     * @param algorithm
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:rawsign")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "rawsign", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Rawsign")
    @ResponseWrapper(localName = "rawsignResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.RawsignResponse")
    public byte[] rawsign(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "digest", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] digest,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo,
        @WebParam(name = "keyID", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] keyID,
        @WebParam(name = "signer", targetNamespace = "http://soap.remote.pkserver.it")
        String signer,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "signerPin", targetNamespace = "http://soap.remote.pkserver.it")
        String signerPin,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param pin
     * @param digest
     * @param keyID
     * @param digestAlgorithm
     * @param encoding
     * @param customerinfo
     * @param signer
     * @param signerPin
     * @param algorithm
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:rawsign2")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "rawsign2", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Rawsign2")
    @ResponseWrapper(localName = "rawsign2Response", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Rawsign2Response")
    public byte[] rawsign2(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "digest", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] digest,
        @WebParam(name = "digestAlgorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int digestAlgorithm,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo,
        @WebParam(name = "keyID", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] keyID,
        @WebParam(name = "signer", targetNamespace = "http://soap.remote.pkserver.it")
        String signer,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "signerPin", targetNamespace = "http://soap.remote.pkserver.it")
        String signerPin,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param data
     * @param encoding
     * @param algorithm
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:digest")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "digest", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Digest")
    @ResponseWrapper(localName = "digestResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.DigestResponse")
    public byte[] digest(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "data", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] data,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param pin
     * @param digests
     * @param keyID
     * @param encoding
     * @param customerinfo
     * @param signer
     * @param signerPin
     * @param algorithm
     * @return
     *     returns java.util.List<it.eng.hsm.client.pkbox.generated.ByteArray>
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:multirawsign")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "multirawsign", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Multirawsign")
    @ResponseWrapper(localName = "multirawsignResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.MultirawsignResponse")
    public List<ByteArray> multirawsign(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "digests", targetNamespace = "http://soap.remote.pkserver.it")
        List<ByteArray> digests,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo,
        @WebParam(name = "keyID", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] keyID,
        @WebParam(name = "signer", targetNamespace = "http://soap.remote.pkserver.it")
        String signer,
        @WebParam(name = "pin", targetNamespace = "http://soap.remote.pkserver.it")
        String pin,
        @WebParam(name = "signerPin", targetNamespace = "http://soap.remote.pkserver.it")
        String signerPin,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param sigLayout
     * @param date
     * @param reason
     * @param image
     * @param fieldName
     * @param accessPermissions
     * @param document
     * @param signerName
     * @param environment
     * @param cx
     * @param cy
     * @param contact
     * @param x
     * @param y
     * @param location
     * @param page
     * @param position
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:pdfdata")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "pdfdata", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Pdfdata")
    @ResponseWrapper(localName = "pdfdataResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.PdfdataResponse")
    public byte[] pdfdata(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "document", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] document,
        @WebParam(name = "accessPermissions", targetNamespace = "http://soap.remote.pkserver.it")
        int accessPermissions,
        @WebParam(name = "signerName", targetNamespace = "http://soap.remote.pkserver.it")
        String signerName,
        @WebParam(name = "fieldName", targetNamespace = "http://soap.remote.pkserver.it")
        String fieldName,
        @WebParam(name = "sigLayout", targetNamespace = "http://soap.remote.pkserver.it")
        String sigLayout,
        @WebParam(name = "reason", targetNamespace = "http://soap.remote.pkserver.it")
        String reason,
        @WebParam(name = "location", targetNamespace = "http://soap.remote.pkserver.it")
        String location,
        @WebParam(name = "contact", targetNamespace = "http://soap.remote.pkserver.it")
        String contact,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "image", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] image,
        @WebParam(name = "page", targetNamespace = "http://soap.remote.pkserver.it")
        int page,
        @WebParam(name = "position", targetNamespace = "http://soap.remote.pkserver.it")
        int position,
        @WebParam(name = "x", targetNamespace = "http://soap.remote.pkserver.it")
        int x,
        @WebParam(name = "y", targetNamespace = "http://soap.remote.pkserver.it")
        int y,
        @WebParam(name = "cx", targetNamespace = "http://soap.remote.pkserver.it")
        int cx,
        @WebParam(name = "cy", targetNamespace = "http://soap.remote.pkserver.it")
        int cy)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param date
     * @param environment
     * @param data
     * @param algorithm
     * @param timestamp
     * @param customerinfo
     * @return
     *     returns it.eng.hsm.client.pkbox.generated.TimeStamp
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:verifyTimeStamp")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "verifyTimeStamp", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStamp")
    @ResponseWrapper(localName = "verifyTimeStampResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStampResponse")
    public TimeStamp verifyTimeStamp(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "data", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] data,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "timestamp", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] timestamp,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param date
     * @param environment
     * @param hash
     * @param timestamp
     * @param customerinfo
     * @return
     *     returns it.eng.hsm.client.pkbox.generated.TimeStamp
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:verifyTimeStampFromHash")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "verifyTimeStampFromHash", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStampFromHash")
    @ResponseWrapper(localName = "verifyTimeStampFromHashResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStampFromHashResponse")
    public TimeStamp verifyTimeStampFromHash(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "hash", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] hash,
        @WebParam(name = "timestamp", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] timestamp,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param date
     * @param environment
     * @param operationScope
     * @param cert
     * @return
     *     returns it.eng.hsm.client.pkbox.generated.Signer
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:verifyCertificate2")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "verifyCertificate2", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyCertificate2")
    @ResponseWrapper(localName = "verifyCertificate2Response", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyCertificate2Response")
    public Signer verifyCertificate2(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "cert", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] cert,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "operationScope", targetNamespace = "http://soap.remote.pkserver.it")
        int operationScope)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param data
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(operationName = "base64encode", action = "urn:base64encode")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "base64encode", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Base64Encode")
    @ResponseWrapper(localName = "base64encodeResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Base64EncodeResponse")
    public byte[] base64Encode(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "data", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] data)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param environment
     * @param envelope
     * @param customerinfo
     * @return
     *     returns it.eng.hsm.client.pkbox.generated.TimeStampedDataInfo
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:verifyTimeStampedData")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "verifyTimeStampedData", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStampedData")
    @ResponseWrapper(localName = "verifyTimeStampedDataResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.VerifyTimeStampedDataResponse")
    public TimeStampedDataInfo verifyTimeStampedData(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "envelope", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] envelope,
        @WebParam(name = "customerinfo", targetNamespace = "http://soap.remote.pkserver.it")
        String customerinfo)
        throws PKBoxException_Exception
    ;

    /**
     * 
     * @param date
     * @param reason
     * @param image
     * @param fieldName
     * @param document
     * @param encoding
     * @param signerName
     * @param environment
     * @param contact
     * @param x
     * @param y
     * @param location
     * @param page
     * @param position
     * @param algorithm
     * @return
     *     returns byte[]
     * @throws PKBoxException_Exception
     */
    @WebMethod(action = "urn:pdfdigest")
    @WebResult(targetNamespace = "http://soap.remote.pkserver.it")
    @RequestWrapper(localName = "pdfdigest", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.Pdfdigest")
    @ResponseWrapper(localName = "pdfdigestResponse", targetNamespace = "http://soap.remote.pkserver.it", className = "it.eng.hsm.client.pkbox.generated.PdfdigestResponse")
    public byte[] pdfdigest(
        @WebParam(name = "environment", targetNamespace = "http://soap.remote.pkserver.it")
        String environment,
        @WebParam(name = "document", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] document,
        @WebParam(name = "signerName", targetNamespace = "http://soap.remote.pkserver.it")
        String signerName,
        @WebParam(name = "fieldName", targetNamespace = "http://soap.remote.pkserver.it")
        String fieldName,
        @WebParam(name = "reason", targetNamespace = "http://soap.remote.pkserver.it")
        String reason,
        @WebParam(name = "location", targetNamespace = "http://soap.remote.pkserver.it")
        String location,
        @WebParam(name = "contact", targetNamespace = "http://soap.remote.pkserver.it")
        String contact,
        @WebParam(name = "date", targetNamespace = "http://soap.remote.pkserver.it")
        XMLGregorianCalendar date,
        @WebParam(name = "image", targetNamespace = "http://soap.remote.pkserver.it")
        byte[] image,
        @WebParam(name = "page", targetNamespace = "http://soap.remote.pkserver.it")
        int page,
        @WebParam(name = "position", targetNamespace = "http://soap.remote.pkserver.it")
        int position,
        @WebParam(name = "x", targetNamespace = "http://soap.remote.pkserver.it")
        int x,
        @WebParam(name = "y", targetNamespace = "http://soap.remote.pkserver.it")
        int y,
        @WebParam(name = "algorithm", targetNamespace = "http://soap.remote.pkserver.it")
        int algorithm,
        @WebParam(name = "encoding", targetNamespace = "http://soap.remote.pkserver.it")
        int encoding)
        throws PKBoxException_Exception
    ;

}
