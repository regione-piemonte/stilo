
package it.eng.hsm.client.pkbox.generated;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Utils", targetNamespace = "http://soap.remote.pkserver.it", wsdlLocation = "https://pkboxrmt.csi.it:8443/pkserver/service/default/Utils?wsdl")
public class Utils
    extends Service
{

    private final static URL UTILS_WSDL_LOCATION;
    private final static WebServiceException UTILS_EXCEPTION;
    private final static QName UTILS_QNAME = new QName("http://soap.remote.pkserver.it", "Utils");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://pkboxrmt.csi.it:8443/pkserver/service/default/Utils?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        UTILS_WSDL_LOCATION = url;
        UTILS_EXCEPTION = e;
    }

    public Utils() {
        super(__getWsdlLocation(), UTILS_QNAME);
    }

    public Utils(WebServiceFeature... features) {
        super(__getWsdlLocation(), UTILS_QNAME, features);
    }

    public Utils(URL wsdlLocation) {
        super(wsdlLocation, UTILS_QNAME);
    }

    public Utils(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, UTILS_QNAME, features);
    }

    public Utils(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Utils(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns UtilsPortType
     */
    @WebEndpoint(name = "UtilsHttpSoap11Endpoint")
    public UtilsPortType getUtilsHttpSoap11Endpoint() {
        return super.getPort(new QName("http://soap.remote.pkserver.it", "UtilsHttpSoap11Endpoint"), UtilsPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UtilsPortType
     */
    @WebEndpoint(name = "UtilsHttpSoap11Endpoint")
    public UtilsPortType getUtilsHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.remote.pkserver.it", "UtilsHttpSoap11Endpoint"), UtilsPortType.class, features);
    }

    /**
     * 
     * @return
     *     returns UtilsPortType
     */
    @WebEndpoint(name = "UtilsHttpSoap12Endpoint")
    public UtilsPortType getUtilsHttpSoap12Endpoint() {
        return super.getPort(new QName("http://soap.remote.pkserver.it", "UtilsHttpSoap12Endpoint"), UtilsPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UtilsPortType
     */
    @WebEndpoint(name = "UtilsHttpSoap12Endpoint")
    public UtilsPortType getUtilsHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.remote.pkserver.it", "UtilsHttpSoap12Endpoint"), UtilsPortType.class, features);
    }

    /**
     * 
     * @return
     *     returns UtilsPortType
     */
    @WebEndpoint(name = "UtilsHttpEndpoint")
    public UtilsPortType getUtilsHttpEndpoint() {
        return super.getPort(new QName("http://soap.remote.pkserver.it", "UtilsHttpEndpoint"), UtilsPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UtilsPortType
     */
    @WebEndpoint(name = "UtilsHttpEndpoint")
    public UtilsPortType getUtilsHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.remote.pkserver.it", "UtilsHttpEndpoint"), UtilsPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (UTILS_EXCEPTION!= null) {
            throw UTILS_EXCEPTION;
        }
        return UTILS_WSDL_LOCATION;
    }

}
