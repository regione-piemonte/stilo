package it.eng.dm.sira.entity;

// Generated 8-giu-2015 11.17.54 by Hibernate Tools 3.4.0.CR1

import it.eng.dm.sira.service.bean.AclBean;
import it.eng.dm.sira.service.util.ConnectionUtil;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * DmtDettAttivitaWf generated by hbm2java
 */
@Entity
@Table(name = "DMT_DETT_ATTIVITA_WF", uniqueConstraints = { @UniqueConstraint(columnNames = "DEST_TRASMISSIONE"),
		@UniqueConstraint(columnNames = "ACL"), @UniqueConstraint(columnNames = "DETT_X_ESITO"),
		@UniqueConstraint(columnNames = { "ID_SP_AOO", "PROV_CI_TY_FLUSSO_WF", "PROCESS_NAME", "ACTIVITY_NAME" }) })
public class DmtDettAttivitaWf implements java.io.Serializable {

	private DmtDettAttivitaWfId id;

	private BigDecimal idSpAoo;

	private String processName;

	private String ctrlObbl;

	private Boolean flgAssAbil;

	private Date destTrasmissione;

	private String activityName;

	private Date tsIns;

	private BigDecimal idUserIns;

	private Date tsLastUpd;

	private BigDecimal idUserLastUpd;

	private Boolean flgProcessEnd;

	private Boolean flgRipetibile;

	private BigDecimal idEventTypeApp;

	private String acl;

	private String dettXEsito;
	
	private List<AclBean> permessi;

	public DmtDettAttivitaWf() {
	}

	@Column(name = "ID_SP_AOO", precision = 22, scale = 0)
	public BigDecimal getIdSpAoo() {
		return this.idSpAoo;
	}

	public void setIdSpAoo(BigDecimal idSpAoo) {
		this.idSpAoo = idSpAoo;
	}

	@Column(name = "CTRL_OBBL", length = 1000)
	public String getCtrlObbl() {
		return this.ctrlObbl;
	}

	public void setCtrlObbl(String ctrlObbl) {
		this.ctrlObbl = ctrlObbl;
	}

	@Column(name = "FLG_ASS_ABIL", precision = 1, scale = 0)
	public Boolean getFlgAssAbil() {
		return this.flgAssAbil;
	}

	public void setFlgAssAbil(Boolean flgAssAbil) {
		this.flgAssAbil = flgAssAbil;
	}

	@Column(name = "DEST_TRASMISSIONE", unique = true)
	public Date getDestTrasmissione() {
		return this.destTrasmissione;
	}

	public void setDestTrasmissione(Date destTrasmissione) {
		this.destTrasmissione = destTrasmissione;
	}

	@Column(name = "ACTIVITY_NAME", length = 200)
	public String getActivityName() {
		return this.activityName;
	}

	public void setActivityName(String activityName) {
		this.activityName = activityName;
	}

	@Column(name = "TS_INS", length = 7)
	public Date getTsIns() {
		return this.tsIns;
	}

	public void setTsIns(Date tsIns) {
		this.tsIns = tsIns;
	}

	@Column(name = "ID_USER_INS", precision = 22, scale = 0)
	public BigDecimal getIdUserIns() {
		return this.idUserIns;
	}

	public void setIdUserIns(BigDecimal idUserIns) {
		this.idUserIns = idUserIns;
	}

	@Column(name = "TS_LAST_UPD", length = 7)
	public Date getTsLastUpd() {
		return this.tsLastUpd;
	}

	public void setTsLastUpd(Date tsLastUpd) {
		this.tsLastUpd = tsLastUpd;
	}

	@Column(name = "ID_USER_LAST_UPD", precision = 22, scale = 0)
	public BigDecimal getIdUserLastUpd() {
		return this.idUserLastUpd;
	}

	public void setIdUserLastUpd(BigDecimal idUserLastUpd) {
		this.idUserLastUpd = idUserLastUpd;
	}

	@Column(name = "FLG_PROCESS_END", precision = 1, scale = 0)
	public Boolean getFlgProcessEnd() {
		return this.flgProcessEnd;
	}

	public void setFlgProcessEnd(Boolean flgProcessEnd) {
		this.flgProcessEnd = flgProcessEnd;
	}

	@Column(name = "FLG_RIPETIBILE", precision = 1, scale = 0)
	public Boolean getFlgRipetibile() {
		return this.flgRipetibile;
	}

	public void setFlgRipetibile(Boolean flgRipetibile) {
		this.flgRipetibile = flgRipetibile;
	}

	@Column(name = "ID_EVENT_TYPE_APP", precision = 22, scale = 0)
	public BigDecimal getIdEventTypeApp() {
		return this.idEventTypeApp;
	}

	public void setIdEventTypeApp(BigDecimal idEventTypeApp) {
		this.idEventTypeApp = idEventTypeApp;
	}

	@Id
	public DmtDettAttivitaWfId getId() {
		return id;
	}

	public void setId(DmtDettAttivitaWfId id) {
		this.id = id;
	}

	@Column(name = "PROCESS_NAME", length = 200)
	public String getProcessName() {
		return this.processName;
	}

	public void setProcessName(String processName) {
		this.processName = processName;
	}

	@Column(name = "ACL")
	public String getAcl() {
		return acl;
	}

	public void setAcl(String acl) {
		this.acl = acl;
	}

	@Column(name = "DETT_X_ESITO")
	public String getDettXEsito() {
		return dettXEsito;
	}

	public void setDettXEsito(String dettXEsito) {
		this.dettXEsito = dettXEsito;
	}
	
	public void impostaPermessi(List<AclBean> in){
		permessi = in;
	}
	
	public List<AclBean> dammiPermessi(){
		return permessi;
	}

	public List<AclBean> showPermessi() throws Exception {
		List<AclBean> listaAcl = new ArrayList<AclBean>();
		Connection connection = ConnectionUtil.getConnection();
		Statement statement = null;
		String selectTableSQL = null;
		if (getActivityName() == null) {
			selectTableSQL = "select nt.flg_tipo, nt.ci_in_anag_prov, nt.flg_incl_sottouo, nt.nro_pos_in_acl, nt.flg_visibilita, nt.flg_esecuzione from DMT_DETT_ATTIVITA_WF a, table (a.ACL) nt where a.prov_ci_ty_flusso_wf ='"
					+ id.getProvCiTyFlussoWf() + "' and a.process_name='" + processName + "' and a.activity_name is null";
		} else {
			selectTableSQL = "select nt.flg_tipo, nt.ci_in_anag_prov, nt.flg_incl_sottouo, nt.nro_pos_in_acl, nt.flg_visibilita, nt.flg_esecuzione from DMT_DETT_ATTIVITA_WF a, table (a.ACL) nt where a.prov_ci_ty_flusso_wf ='"
					+ id.getProvCiTyFlussoWf() + "' and a.process_name='" + processName + "' and a.activity_name='" + getActivityName()+"'";
		}
		try {
			statement = connection.createStatement();
			System.out.println(selectTableSQL);
			// execute insert SQL stetement
			ResultSet rs = statement.executeQuery(selectTableSQL);
			while (rs.next()) {
				AclBean ab = new AclBean();
				ab.setFlgTipo(rs.getString("FLG_TIPO"));
				ab.setCiInAnagProv(rs.getString("CI_IN_ANAG_PROV"));
				ab.setFlgInclSottouo(rs.getString("FLG_INCL_SOTTOUO"));
				ab.setNroPosInAcl(rs.getString("NRO_POS_IN_ACL"));
				ab.setFlgVisibilita(rs.getString("FLG_VISIBILITA"));
				ab.setFlgEsecuzione(rs.getString("FLG_ESECUZIONE"));
				listaAcl.add(ab);
			}
		} catch (SQLException e) {
			System.out.println(e.getMessage());
		} finally {
			if (statement != null) {
				statement.close();
			}
			connection.close();
		}
		return listaAcl;
	}

}
